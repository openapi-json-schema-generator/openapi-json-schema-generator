# coding: utf-8
{{> _helper_header }}

{{#with server}}
    {{#if variables}}
from __future__ import annotations
from {{packageName}}.shared_imports.schema_imports import *
    {{/if}}
from {{packageName}}.shared_imports.server_imports import *
    {{#if variables}}
        {{#with variables}}
{{> components/schemas/_helper_getschemas identifierPieces=(append identifierPieces jsonPathPiece.camelCase) }}
        {{/with}}
    {{/if}}


@dataclasses.dataclass
class {{jsonPathPiece.camelCase}}(server.Server{{#if variables}}With{{else}}Without{{/if}}Variables):
    {{#if description}}
    '''
    {{description}}
    '''
    {{/if}}
    {{#if variables}}
    variables: Variables[frozendict.frozendict] = Variables({
        {{#with variables}}
            {{#each properties}}
        "{{{@key.original}}}": {{jsonPathPiece.camelCase}}.Schema_.default,
            {{/each}}
        {{/with}}
    })
    variables_cls: typing.Type[Variables] = Variables
    _url: str = "{{url}}"
    {{else}}
    url: str = "{{url}}"
    {{/if}}
{{/with}}