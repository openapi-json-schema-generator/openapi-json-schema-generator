# coding: utf-8

{{> _helper_header }}

{{#with requestBody}}
{{#if refInfo}}
{{> components/schemas/imports }}
{{name.getCamelCaseName}} = {{refInfo.refModule}}.{{refInfo.refClass}}
{{else}}
import typing
import typing_extensions

from {{packageName}} import api_client
    {{#each content}}
    {{#with this}}
        {{#with schema}}
from .content.{{../@key.getSnakeCaseName}} import {{name.getSnakeCaseName}} as {{../@key.getSnakeCaseName}}_{{name.getSnakeCaseName}}
        {{/with}}
    {{/with}}
    {{/each}}

class {{name.getCamelCaseName}}(api_client.RequestBody):
    {{#each content}}


    class __{{@key.getCamelCaseName}}MediaType(api_client.MediaType):
        {{#with this}}
            {{#with schema}}
        schema: typing.Type[{{../@key.getSnakeCaseName}}_{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}] = {{../@key.getSnakeCaseName}}_{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}
            {{/with}}
        {{/with}}
    {{/each}}
    __Content = typing_extensions.TypedDict(
        '__Content',
        {
    {{#each content}}
            '{{{@key.getName}}}': typing.Type[__{{@key.getCamelCaseName}}MediaType],
    {{/each}}
        }
    )
    content: __Content = {
    {{#each content}}
        '{{{@key.getName}}}': __{{@key.getCamelCaseName}}MediaType,
    {{/each}}
    }
    {{#if required}}
    required = True
    {{/if}}
{{/if}}
{{/with}}
