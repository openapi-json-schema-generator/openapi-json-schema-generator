class {{jsonPathPiece.camelCase}}(api_client.{{#if noName}}Header{{/if}}{{#eq in "query"}}Query{{/eq}}{{#eq in "path"}}Path{{/eq}}{{#eq in "header"}}Header{{/eq}}{{#eq in "cookie"}}Cookie{{/eq}}Parameter{{#if noName}}WithoutName{{/if}}):
{{#unless noName}}
    name = "{{name}}"
{{/unless}}
{{#if style}}
{{#eq style "matrix"}}
    style = api_client.ParameterStyle.MATRIX
{{/eq}}
{{#eq style "label"}}
    style = api_client.ParameterStyle.LABEL
{{/eq}}
{{#eq style "form"}}
    style = api_client.ParameterStyle.FORM
{{/eq}}
{{#eq style "simple"}}
    style = api_client.ParameterStyle.SIMPLE
{{/eq}}
{{#eq style "spaceDelimited"}}
    style = api_client.ParameterStyle.SPACE_DELIMITED
{{/eq}}
{{#eq style "pipeDelimited"}}
    style=api_client.ParameterStyle.PIPE_DELIMITED
{{/eq}}
{{#eq style "deepObject"}}
    style=api_client.ParameterStyle.DEEP_OBJECT
{{/eq}}
{{/if}}
{{#with schema}}
    schema: typing_extensions.TypeAlias = {{jsonPathPiece.snakeCase}}.{{jsonPathPiece.camelCase}}
{{/with}}
{{#if content}}
{{#each content}}


    class {{@key.camelCase}}MediaType(api_client.MediaType):
    {{#with this}}
        {{#with schema}}
        {{> components/_helper_content_schema_type paramName="schema" contentTypeModule=../@key.snakeCase }}
        {{/with}}
    {{/with}}
{{/each}}
{{#each content}}
    content = {
        '{{{@key.original}}}': {{@key.camelCase}}MediaType,
    }
{{/each}}
{{/if}}
{{#if required}}
    required = True
{{/if}}
{{#if explode}}
    explode = True
{{/if}}
