# coding: utf-8

{{> _helper_header }}

{{#with schema}}
    {{#if refInfo}}
        {{#if imports}}

from {{packageName}}.shared_imports.schema_imports import *
        {{/if}}
{{> _helper_imports }}
        {{#each getSchemas}}
{{> components/schemas/_helper_schema_switch_case identifierPieces=(append identifierPieces jsonPathPiece) }}
        {{/each}}
    {{else}}
from __future__ import annotations
from {{packageName}}.shared_imports.schema_imports import *

        {{#each getSchemas}}
{{> components/schemas/_helper_schema_switch_case identifierPieces=(append identifierPieces jsonPathPiece) }}
        {{/each}}
        {{#if imports}}

{{> _helper_imports }}
        {{/if}}
        {{#each getSchemas}}
            {{#if properties}}
{{jsonPathPiece.camelCase}}Properties = typing_extensions.TypedDict(
    '{{jsonPathPiece.camelCase}}Properties',
    {
                {{#each properties}}
                    {{#if refInfo.refClass}}
        "{{{@key.original}}}": typing.Type[{{#if refInfo.refModule}}{{refInfo.refModule}}.{{/if}}{{refInfo.refClass}}],
                    {{else}}
        "{{{@key.original}}}": typing.Type[{{jsonPathPiece.camelCase}}],
                    {{/if}}
                {{/each}}
    }
)
            {{/if}}
        {{/each}}
    {{/if}}
{{/with}}