

class {{jsonPathPiece.camelCase}}(
{{#if hasMultipleTypes}}
    {{> components/schemas/_helper_xbase_multiple_types }}
{{else}}
    {{> components/schemas/_helper_xbase_one_type }}
{{/if}}
):
{{#if componentModule}}
    """NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
{{#if description}}

    {{{unescapedDescription}}}
{{/if}}
    """
{{/if}}
{{#or hasValidation enumValueToName format defaultValue}}


    @dataclasses.dataclass(frozen=True)
    class Schema_(metaclass=schemas.SingletonMeta):
{{#eq types null}}
        # any type
{{/eq}}
        {{> components/schemas/_helper_types }}
{{#if format}}
        format: str = '{{format}}'
{{/if}}
        {{> components/schemas/_helper_validations }}
{{#if defaultValue}}
    {{#with defaultValue}}
        {{#eq type "string"}}
        default: str = "{{{value}}}"
        {{/eq}}
        {{#eq type "number"}}
        default: typing.Union[int, float] = {{{value}}}
        {{/eq}}
        {{#eq type "integer"}}
        default: int  = {{{value}}}
        {{/eq}}
        {{#eq type "boolean"}}
            {{#if value}}
        default: schemas.BoolClass = schemas.BoolClass.TRUE
            {{else}}
        default: schemas.BoolClass = schemas.BoolClass.FALSE
            {{/if}}
        {{/eq}}
        {{#eq type "null"}}
        default: schemas.NoneClass = schemas.NoneClass.NONE
        {{/eq}}
    {{/with}}
{{/if}}
{{#if enumValueToName}}
        {{> components/schemas/_helper_schema_enum }}
{{/if}}
{{/or}}
{{#if enumValueToName}}
    {{> components/schemas/_helper_enums }}
{{/if}}