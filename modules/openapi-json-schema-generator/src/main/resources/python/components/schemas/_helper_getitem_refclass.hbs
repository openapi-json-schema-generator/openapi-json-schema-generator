{{#with getDeepestRef}}
    {{#if types}}
        {{#eq types.size 1}}
def __getitem__(self, name: {{#if literal}}typing_extensions.Literal["{{{key}}}"]{{else}}{{key}}{{/if}}) -> {{#if ../refInfo.refModule}}{{../refInfo.refModule}}.{{/if}}{{../refInfo.refClass}}[{{> components/schemas/_helper_schema_python_base_types }}]:{{#if overload}} ...{{/if}}
        {{else}}
def __getitem__(self, name: {{#if literal}}typing_extensions.Literal["{{{key}}}"]{{else}}{{key}}{{/if}}) -> {{#if ../refInfo.refModule}}{{../refInfo.refModule}}.{{/if}}{{../refInfo.refClass}}[typing.Union[
    {{> components/schemas/_helper_schema_python_base_types_newline }}
]]:{{#if overload}} ...{{/if}}
        {{/eq}}
    {{else}}
def __getitem__(self, name: {{#if literal}}typing_extensions.Literal["{{{key}}}"]{{else}}{{key}}{{/if}}) -> {{#if ../refInfo.refModule}}{{../refInfo.refModule}}.{{/if}}{{../refInfo.refClass}}[typing.Union[
    {{> components/schemas/_helper_schema_python_base_types_newline }}
]]:{{#if overload}} ...{{/if}}
    {{/if}}
{{/with}}