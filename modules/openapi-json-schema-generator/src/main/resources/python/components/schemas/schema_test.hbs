# coding: utf-8

{{> _helper_header }}

import unittest

import {{packageName}}
{{#with schema}}
from {{packageName}}.components.schema.{{componentModule}} import {{jsonPathPiece.camelCase}}
from {{packageName}} import configuration


class Test{{jsonPathPiece.camelCase}}(unittest.TestCase):
    """{{jsonPathPiece.camelCase}} unit test stubs"""
    configuration_ = configuration.Configuration()

{{#each testCases}}
{{#with this }}
    def test_{{@key}}_{{#if valid}}passes{{else}}fails{{/if}}(self):
        # {{description}}
{{#if valid}}
        {{jsonPathPiece.camelCase}}.from_openapi_data_(
{{#with data}}
            {{> components/schemas/_helper_payload_renderer endChar=',' }}
{{/with}}
            configuration_=self.configuration_
        )
{{else}}
        with self.assertRaises(({{packageName}}.ApiValueError, {{packageName}}.ApiTypeError)):
            {{jsonPathPiece.camelCase}}.from_openapi_data_(
{{#with data}}
                {{> components/schemas/_helper_payload_renderer endChar=','}}
{{/with}}
                configuration_=self.configuration_
            )
{{/if}}
{{/with}}

{{/each}}
{{/with}}

if __name__ == '__main__':
    unittest.main()
