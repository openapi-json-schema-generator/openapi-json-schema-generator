{{#if additionalProperties}}
    {{#if additionalProperties.isBooleanSchemaFalse}}
{{optionalProperties.jsonPathPiece.camelCase}} = typing_extensions.TypedDict(
    '{{optionalProperties.jsonPathPiece.camelCase}}',
    {
        {{#each optionalProperties}}
            {{#with this}}
                {{#if refInfo.refClass}}
        "{{{@key.original}}}": typing.Union[
            {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
        ],
                {{else}}
        "{{{@key.original}}}": typing.Union[
            {{> components/schemas/_helper_new_property_value_type optional=false }}
        ],
                {{/if}}
            {{/with}}
        {{/each}}
    },
    total=False
)
    {{else}}
{{optionalProperties.jsonPathPiece.camelCase}} = typing.Mapping[
    str,
    typing.Union[
        {{#each optionalProperties}}
            {{#with this}}
                {{#if refInfo.refClass}}
        typing.Union[
            {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
        ],
                {{else}}
                    {{#if jsonPathPiece}}
        typing.Union[
            {{> components/schemas/_helper_new_property_value_type optional=false }}
        ],
                    {{else}}
        typing.Union[
            schemas.AnyTypeSchema[typing.Union[
                {{> components/schemas/_helper_schema_python_base_types_newline }}
            ]],
            {{> _helper_schema_python_types_newline }}
        ],
                    {{/if}}
                {{/if}}
            {{/with}}
        {{/each}}
        {{#with additionalProperties}}
        {{> components/schemas/_helper_new_property_value_type optional=false }}
        {{/with}}
    ]
]
    {{/if}}
{{else}}
# todo optional properties mapping w/ addProps unset
{{/if}}
