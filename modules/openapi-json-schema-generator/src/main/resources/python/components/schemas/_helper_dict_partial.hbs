{{#if requiredProperties}}
required = {
{{#each requiredProperties}}
    "{{{@key.original}}}",
{{/each}}
}
{{/if}}
{{#if hasDiscriminatorWithNonEmptyMapping}}
{{#with discriminator}}
{{#each mappedModels}}
{{#if @first}}

@staticmethod
def discriminator():
    return {
        '{{{propertyName.original}}}': {
{{/if}}
            '{{mappingName}}': {{{modelName}}},
{{#if @last}}
        }
    }
{{/if}}
{{/each}}
{{/with}}
{{/if}}
{{#if properties}}

@staticmethod
def properties():
    return {
    {{#each properties}}
        {{#if refInfo.refClass}}
        "{{{@key.original}}}": {{#if refInfo.refModule}}{{refInfo.refModule}}.{{/if}}{{refInfo.refClass}},
        {{else}}
        "{{{@key.original}}}": {{jsonPathPiece.camelCase}},
        {{/if}}
    {{/each}}
    }
{{/if}}
{{#with additionalProperties}}

@staticmethod
def additional_properties():
    {{#if refInfo.refClass}}
    return {{#if refInfo.refModule}}{{refInfo.refModule}}.{{/if}}{{refInfo.refClass}}
    {{else}}
    return {{jsonPathPiece.camelCase}}
    {{/if}}
{{/with}}
