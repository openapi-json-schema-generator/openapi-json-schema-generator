{{#if requiredProperties}}
{{requiredProperties.jsonPathPiece.camelCase}} = typing_extensions.TypedDict(
    '{{requiredProperties.jsonPathPiece.camelCase}}',
    {
        {{#each requiredProperties}}
            {{#with this}}
                {{#if refInfo.refClass}}
        {{@key.original}}: typing.Union[
            {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
        ],
                {{else}}
                    {{#if jsonPathPiece}}
        "{{@key.original}}": typing.Union[
            {{> components/schemas/_helper_new_property_value_type optional=false }}
        ],
                    {{else}}
        "{{@key.original}}": typing.Union[
            schemas.AnyTypeSchema[typing.Union[
                {{> components/schemas/_helper_schema_python_base_types_newline }}
            ]],
            {{> _helper_schema_python_types_newline }}
        ],
                    {{/if}}
                {{/if}}
            {{/with}}
        {{/each}}
    }
)

{{/if}}
{#if optionalProperties}}
{{optionalProperties.jsonPathPiece.camelCase}} = typing_extensions.TypedDict(
    '{{optionalProperties.jsonPathPiece.camelCase}}',
    {
        {{#each optionalProperties}}
            {{#with this}}
                {{#if refInfo.refClass}}
        {{@key.original}}: typing.Union[
            {{> components/schemas/_helper_new_ref_property_value_type optional=true }}
        ],
                {{else}}
        "{{@key.original}}": typing.Union[
            {{> components/schemas/_helper_new_property_value_type optional=true }}
        ],
                {{/if}}
            {{/with}}
        {{/each}}
    },
    total=False
)

{{/if}}