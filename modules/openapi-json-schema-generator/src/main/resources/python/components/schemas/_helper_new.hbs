def __new__(
    cls,
{{#if types}}
    {{#eq types.size 1}}
        {{#contains types "array"}}
    arg_: typing.Sequence[
        {{#with ../items}}
            {{#if refInfo.refClass}}
        typing.Union[
            {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
        ]
            {{else}}
        typing.Union[
            {{> components/schemas/_helper_new_property_value_type propertyClass=null optional=false }}
        ]
            {{/if}}
        {{/with}}
    ],
        {{/contains}}
        {{#contains types "object"}}
    *args_: typing.Union[{{> _helper_schema_python_types }}],
        {{/contains}}
        {{#contains types "string"}}
    arg_: {{> _helper_schema_python_types }},
        {{/contains}}
        {{#contains types "number"}}
    arg_: typing.Union[{{> _helper_schema_python_types }}],
        {{/contains}}
        {{#contains types "integer"}}
    arg_: {{> _helper_schema_python_types }},
        {{/contains}}
        {{#contains types "boolean"}}
    arg_: {{> _helper_schema_python_types }},
        {{/contains}}
        {{#contains types "null"}}
    arg_: {{> _helper_schema_python_types }},
        {{/contains}}
    {{else}}
        {{#contains types "object"}}
    *args_: typing.Union[
        {{> _helper_schema_python_types_newline }}
    ],
        {{else}}
    arg_: typing.Union[
        {{> _helper_schema_python_types_newline }}
    ],
        {{/contains}}
    {{/eq}}
{{else}}
    *args_: typing.Union[
        {{> _helper_schema_python_types_newline }}
    ],
{{/if}}
{{#if types}}
    {{#eq types.size 1}}
        {{#contains types "object"}}
            {{#each requiredProperties}}
                {{#if @key.isValid}}
                    {{#with this}}
                        {{#if refInfo.refClass}}
    {{@key.original}}: typing.Union[
        {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
    ],
                        {{else}}
                            {{#if jsonPathPiece}}
                                {{#if schemaIsFromAdditionalProperties}}
    {{@key.original}}: typing.Union[
        {{> components/schemas/_helper_new_property_value_type propertyClass=null optional=false }}
    ],
                                {{else}}
    {{@key.original}}: typing.Union[
        {{> components/schemas/_helper_new_property_value_type propertyClass="Properties" optional=false }}
    ],
                                {{/if}}
                            {{else}}
    {{@key.original}}: typing.Union[
        schemas.AnyTypeSchema[typing.Union[
            {{> components/schemas/_helper_schema_python_base_types_newline }}
        ]],
        {{> _helper_schema_python_types_newline }}
    ],
                            {{/if}}
                        {{/if}}
                    {{/with}}
                {{/if}}
            {{/each}}
        {{/contains}}
    {{/eq}}
{{/if}}
{{#each optionalProperties}}
    {{#if @key.isValid}}
        {{#if refInfo.refClass}}
    {{@key.original}}: typing.Union[
        {{> components/schemas/_helper_new_ref_property_value_type optional=true }}
    ] = schemas.unset,
        {{else}}
    {{@key.original}}: typing.Union[
        {{> components/schemas/_helper_new_property_value_type propertyClass="Properties" optional=true }}
    ] = schemas.unset,
        {{/if}}
    {{/if}}
{{/each}}
    configuration_: typing.Optional[schemas.schema_configuration.SchemaConfiguration] = None,
{{#with additionalProperties}}
    {{#unless isBooleanSchemaFalse}}
        {{#if refInfo.refClass}}
    **kwargs: typing.Union[
        {{> components/schemas/_helper_new_ref_property_value_type optional=false }}
    ],
        {{else}}
    **kwargs: typing.Union[
        {{> components/schemas/_helper_new_property_value_type propertyClass=null optional=false }}
    ],
        {{/if}}
    {{/unless}}
{{else}}
    {{#eq types null}}
    **kwargs: typing.Union[
        {{> components/schemas/_helper_types_all_incl_schema_newline }}
    ],
    {{else}}
        {{#contains types "object"}}
    **kwargs: typing.Union[
        {{> components/schemas/_helper_types_all_incl_schema_newline }}
    ],
        {{/contains}}
    {{/eq}}
{{/with}}
{{#if types}}
    {{#eq types.size 1}}
) -> {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[{{> components/schemas/_helper_schema_python_base_types }}]:
    {{else}}
) -> {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[
    typing.Union[
        {{> components/schemas/_helper_schema_python_base_types_newline }}
    ]
]:
    {{/eq}}
{{else}}
) -> {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[
    typing.Union[
        {{> components/schemas/_helper_schema_python_base_types_newline }}
    ]
]:
{{/if}}
    inst = super().__new__(
        cls,
{{#eq types null}}
        *args_,
{{else}}
    {{#contains types "object"}}
        *args_,
    {{else}}
        arg_,
    {{/contains}}
{{/eq}}
{{#if types}}
    {{#eq types.size 1}}
        {{#contains types "object"}}
            {{#each requiredProperties}}
                {{#if @key.isValid}}
                    {{#with this}}
        {{@key.original}}={{@key.original}},
                    {{/with}}
                {{/if}}
            {{/each}}
        {{/contains}}
    {{/eq}}
{{/if}}
{{#each optionalProperties}}
    {{#if @key.isValid}}
        {{@key.original}}={{@key.original}},
    {{/if}}
{{/each}}
        configuration_=configuration_,
{{#with additionalProperties}}
    {{#unless isBooleanSchemaFalse}}
        **kwargs,
    {{/unless}}
{{else}}
    {{#eq types null}}
        **kwargs,
    {{else}}
        {{#contains types "object"}}
        **kwargs,
        {{/contains}}
    {{/eq}}
{{/with}}
    )
    inst = typing.cast(
{{#if types}}
    {{#eq types.size 1}}
        {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[{{> components/schemas/_helper_schema_python_base_types }}],
    {{else}}
        {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[
            typing.Union[
                {{> components/schemas/_helper_schema_python_base_types_newline }}
            ]
        ],
    {{/eq}}
{{else}}
        {{#each identifierPieces}}{{#if this.camelCase}}{{this.camelCase}}{{else}}{{this}}{{/if}}{{#unless @last}}.{{/unless}}{{/each}}[
            typing.Union[
                {{> components/schemas/_helper_schema_python_base_types_newline }}
            ]
        ],
{{/if}}
        inst
    )
    return inst
