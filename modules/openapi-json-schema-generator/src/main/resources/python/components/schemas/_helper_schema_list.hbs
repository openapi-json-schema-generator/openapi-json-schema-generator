

@dataclasses.dataclass(frozen=True)
class {{jsonPathPiece.camelCase}}(
    schemas.ListSchema[{{#if arrayOutputJsonPathPiece}}{{arrayOutputJsonPathPiece.camelCase}}{{else}}typing.Tuple[schemas.OUTPUT_BASE_TYPES, ...]{{/if}}]
):
{{#if componentModule}}
    """NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
{{#if description}}

    {{{unescapedDescription}}}
{{/if}}
    """
{{/if}}
{{#or items hasValidation}}
    types: typing.FrozenSet[typing.Type] = frozenset({tuple})
    {{#if hasValidation}}
    {{> components/schemas/_helper_validations }}
    {{/if}}
    {{> components/schemas/_helper_list_partial }}
    {{#if arrayOutputJsonPathPiece}}
    type_to_output_cls: typing.Mapping[
        typing.Type,
        typing.Type
    ] = dataclasses.field(
        default_factory=lambda: {
            tuple: {{arrayOutputJsonPathPiece.camelCase}}
        }
    )
    {{/if}}
{{/or}}

    {{> components/schemas/_helper_validate }}
