{{#with schema}}
{{#if componentModule}}
<a name="top"></a>
## {{packageName}}.components.schema.{{componentModule}}
# {{name.camelCaseName}}
{{/if}}
{{#if refInfo}}
## Schema Type Info
Ref Class | Input Type | Accessed Type | Description
--------- | ---------- | ------------- | ------------
[{{refInfo.refClass}}](../../components/schemas/{{refInfo.refModule}}.{{refInfo.refClass}}.md#{{refInfo.refModule}}) | {{#with getDeepestRef}}{{> _helper_schema_python_types }} | {{> components/_helper_schema_accessed_types }}{{/with}} |{{#if description}} {{description}}{{/if}}
{{else}}

    {{#if description}}
{{&description}}

    {{/if}}
## Schema Type Info
Input Type | Accessed Type | Description | Notes
------------ | ------------- | ------------- | -------------
{{> _helper_schema_python_types }} | {{> components/_helper_schema_accessed_types }} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{#or properties additionalProperties requiredProperties}}

### Dictionary Keys
Key | Input Type | Accessed Type | Description | Notes
------------ | ------------- | ------------- | ------------- | -------------
        {{#each requiredProperties}}
**{{@key.name}}** | {{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}{{#if isComplicated}}[{{/if}}{{> _helper_schema_python_types }}{{#if isComplicated}}](#{{@key.name}}){{/if}}{{/if}} | {{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}{{#if isComplicated}}[{{/if}}{{> components/_helper_schema_accessed_types }}{{#if isComplicated}}](#{{@key.name}}){{/if}}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
        {{/each}}
        {{#each optionalProperties}}
**{{@key.name}}** | {{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}{{#if isComplicated}}[{{/if}}{{> _helper_schema_python_types }}{{#if isComplicated}}](#{{@key.name}}){{/if}}{{/if}} | {{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}{{#if isComplicated}}[{{/if}}{{> components/_helper_schema_accessed_types }}{{#if isComplicated}}](#{{@key.name}}){{/if}}{{/if}} | {{#if description}}{{description}}{{/if}} | [optional]{{> components/schemas/_helper_notes_msg }}
        {{/each}}
        {{#with additionalProperties}}
        {{#unless isBooleanSchemaFalse}}
        {{#if isBooleanSchemaTrue}}
**any_string_name** | {{> _helper_schema_python_types }} | {{> components/_helper_schema_accessed_types }} | any string name can be used but the value must be the correct type{{#if description}} {{description}}{{/if}} | [optional]
        {{else}}
**any_string_name** | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | any string name can be used but the value must be the correct type{{#if description}} {{description}}{{/if}} | [optional]{{> components/schemas/_helper_notes_msg }}
        {{/if}}
        {{/unless}}
        {{else}}
**any_string_name** | {{> components/schemas/_helper_types_all_incl_schema_oneline }} | {{> components/schemas/_helper_types_all_accessed_oneline }} | any string name can be used but the value must be the correct type | [optional]
        {{/with}}
    {{/or}}
    {{#each requiredProperties}}
    {{#if this}}
    {{#unless refInfo.refClass}}
    {{#if isComplicated}}

# {{@key.name}}
{{> components/schemas/schema_doc schema=this }}
    {{/if}}
    {{/unless}}
    {{/if}}
    {{/each}}
    {{#each optionalProperties}}
    {{#unless refInfo.refClass}}
    {{#if isComplicated}}

# {{@key.name}}
{{> components/schemas/schema_doc schema=this }}
    {{/if}}
    {{/unless}}
    {{/each}}
    {{#with additionalProperties}}
    {{#unless isBooleanSchemaFalse}}
    {{#unless isBooleanSchemaTrue}}
    {{#unless refInfo.refClass}}
    {{#if isComplicated}}

# any_string_name
{{> components/schemas/schema_doc schema=this }}
    {{/if}}
    {{/unless}}
    {{/unless}}
    {{/unless}}
    {{/with}}
    {{#if items}}

### Tuple Items
Class Name | Input Type | Accessed Type | Description | Notes
------------- | ------------- | ------------- | ------------- | -------------
    {{#with items}}
{{#unless refInfo.refClass}}{{#or isArray isMap allOf anyOf oneOf not}}[{{/or}}{{name.name}}{{#or isArray isMap allOf anyOf oneOf not}}](#{{name.name}}){{/or}}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{#unless refInfo.refClass}}
    {{#if isComplicated}}

# {{name.name}}
{{> components/schemas/schema_doc schema=this }}
    {{/if}}
    {{/unless}}
    {{/with}}
    {{/if}}
    {{#or allOf anyOf oneOf not}}

### Composed Schemas (allOf/anyOf/oneOf/not)
    {{#if allOf}}
#### allOf
Class Name | Input Type | Accessed Type | Description | Notes
------------- | ------------- | ------------- | ------------- | -------------
    {{#each allOf}}
{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}[{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}](#{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}){{/if}} | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{/each}}
    {{#each allOf}}
    {{#unless refInfo.refClass}}

# {{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}
{{> components/schemas/schema_doc schema=this }}
    {{/unless}}
    {{/each}}
    {{/if}}
    {{#if anyOf}}
#### anyOf
Class Name | Input Type | Accessed Type | Description | Notes
------------- | ------------- | ------------- | ------------- | -------------
    {{#each anyOf}}
{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}[{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}](#{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}){{/if}} | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{/each}}
    {{#each anyOf}}
    {{#unless refInfo.refClass}}

# {{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}
{{> components/schemas/schema_doc schema=this }}
    {{/unless}}
    {{/each}}
    {{/if}}
    {{#if oneOf}}
#### oneOf
Class Name | Input Type | Accessed Type | Description | Notes
------------- | ------------- | ------------- | ------------- | -------------
    {{#each oneOf}}
{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}[{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}](#{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}){{/if}} | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{/each}}
    {{#each oneOf}}
    {{#unless refInfo.refClass}}

# {{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}
{{> components/schemas/schema_doc schema=this }}
    {{/unless}}
    {{/each}}
    {{/if}}
    {{#if not}}
#### not
Class Name | Input Type | Accessed Type | Description | Notes
------------- | ------------- | ------------- | ------------- | -------------
    {{#with not}}
{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{else}}[{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}](#{{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}){{/if}} | {{#unless refInfo.refClass}}{{> _helper_schema_python_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#unless refInfo.refClass}}{{> components/_helper_schema_accessed_types }}{{/unless}}{{#if refInfo.refClass}}{{> components/schemas/_helper_refclass_partial }}{{/if}} | {{#if description}}{{description}}{{/if}} |{{> components/schemas/_helper_notes_msg }}
    {{#unless refInfo.refClass}}

# {{#if name.nameIsValid}}{{name.name}}{{else}}{{name.snakeCaseName}}{{/if}}
{{> components/schemas/schema_doc schema=this }}
    {{/unless}}
    {{/with}}
    {{/if}}
    {{/or}}
{{/if}}
{{#if componentModule}}

[[Back to top]](#top) {{> _helper_footer_links readmePath="../../../" schemasLink=true}}
{{/if}}
{{/with}}