{{#if requestBody.refInfo}}
    {{#if requestBody.refInfo.getRef.required}}
        {{#with requestBody.refInfo.getRef}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/each}}],
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}],
        {{/eq}}
        {{/with}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody.refInfo.getRef}}
                    {{#each content}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody.refInfo.getRef}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
    {{else}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody.refInfo.getRef}}
                    {{#each getContent}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody.refInfo.getRef}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
        {{#with requestBody.refInfo.retRef}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/each}}schemas.Unset] = schemas.unset,
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}schemas.Unset] = schemas.unset,
        {{/eq}}
        {{/with}}
    {{/if}}
{{else}}
    {{#if requestBody.required}}
        {{#with requestBody}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/each}}],
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}],
        {{/eq}}
        {{/with}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody}}
                    {{#each content}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
    {{else}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody}}
                    {{#each getContent}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
        {{#with requestBody}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/each}}schemas.Unset] = schemas.unset,
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}request_body.{{#if refInfo.refModule}}{{refInfo.refModule}}.{{refInfo.refClass}}{{else}}{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}schemas.Unset] = schemas.unset,
        {{/eq}}
        {{/with}}
    {{/if}}
{{/if}}