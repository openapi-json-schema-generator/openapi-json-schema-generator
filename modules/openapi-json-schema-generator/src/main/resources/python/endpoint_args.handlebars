    self,
{{#if bodyParam}}
    {{#if bodyParam.required}}
        {{#with bodyParam}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}RequestBody.Schemas.{{#if nameInSnakeCase}}{{name}}{{else}}{{baseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/each}}],
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}RequestBody.Schemas.{{#if nameInSnakeCase}}{{name}}{{else}}{{baseName}}{{/if}},{{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}],
        {{/eq}}
        {{/with}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with bodyParam}}
                    {{#each content}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with bodyParam}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
    {{else}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with bodyParam}}
                    {{#each getContent}}
                        {{#eq @key ../../contentType}}
                            {{#if @first}}
    content_type: typing_extensions.Literal["{{{@key}}}"] = ...,
                            {{else}}
    content_type: typing_extensions.Literal["{{{@key}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
    content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with bodyParam}}
                {{#each getContent}}
                    {{#if @first}}
    content_type: str = '{{{@key}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
        {{#with bodyParam}}
        {{#eq ../contentType "null"}}
    body: typing.Union[{{#each getContent}}{{#with this.schema}}RequestBody.Schemas.{{#if nameInSnakeCase}}{{name}}{{else}}{{baseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/each}}schemas.Unset] = schemas.unset,
        {{else}}
    body: typing.Union[{{#each getContent}}{{#eq @key ../../contentType }}{{#with this.schema}}RequestBody.Schemas.{{#if nameInSnakeCase}}{{name}}{{else}}{{baseName}}{{/if}}, {{> model_templates/schema_python_types }}{{/with}}{{/eq}}{{/each}}schemas.Unset] = schemas.unset,
        {{/eq}}
        {{/with}}
    {{/if}}
{{else}}
    {{#if isOverload}}
        {{#eq skipDeserialization "True"}}
    skip_deserialization: typing_extensions.Literal[True],
        {{/eq}}
    {{/if}}
{{/if}}
{{#if queryParams}}
    query_params: RequestQueryParameters.Params = frozendict.frozendict(),
{{/if}}
{{#if headerParams}}
    header_params: RequestHeaderParameters.Params = frozendict.frozendict(),
{{/if}}
{{#if pathParams}}
    path_params: RequestPathParameters.Params = frozendict.frozendict(),
{{/if}}
{{#if cookieParams}}
    cookie_params: RequestCookieParameters.Params = frozendict.frozendict(),
{{/if}}
{{#if produces}}
    accept_content_types: typing.Tuple[str] = _all_accept_content_types,
{{/if}}
{{#if servers}}
    host_index: typing.Optional[int] = None,
{{/if}}
    stream: bool = False,
    timeout: typing.Optional[typing.Union[int, typing.Tuple]] = None,
    {{#if isOverload}}
        {{#eq skipDeserialization "False"}}
    skip_deserialization: typing_extensions.Literal[False] = ...,
        {{/eq}}
        {{#eq skipDeserialization "null"}}
    skip_deserialization: bool = ...,
        {{/eq}}
    {{else}}
    skip_deserialization: bool = False,
    {{/if}}
{{#eq skipDeserialization "True"}}
) -> api_client.ApiResponseWithoutDeserialization: ...
{{/eq}}
{{#eq skipDeserialization "False"}}
) -> {{#if getAllResponsesAreErrors}}api_client.ApiResponseWithoutDeserialization: ...{{else}}typing.Union[
    {{#each responses}}
        {{#if isDefault}}
    response_for_default.ApiResponse,
        {{else}}
            {{#if is2xx}}
    response_for_{{code}}.ApiResponse,
            {{/if}}
        {{/if}}
    {{/each}}
]: ...
    {{/if}}
{{/eq}}
{{#eq skipDeserialization "null"}}
{{#if isOverload}}
) -> typing.Union[
    {{#each responses}}
        {{#if isDefault}}
    response_for_default.ApiResponse,
        {{else}}
            {{#if is2xx}}
    response_for_{{code}}.ApiResponse,
            {{/if}}
        {{/if}}
    {{/each}}
    api_client.ApiResponseWithoutDeserialization,
]: ...
{{else}}
):
{{/if}}
{{/eq}}