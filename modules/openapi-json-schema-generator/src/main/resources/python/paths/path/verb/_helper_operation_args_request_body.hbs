{{#if requestBody.refInfo}}
{{! $ref requestBody }}
    {{#if requestBody.getDeepestRef.required}}
    {{! required }}
        {{#with requestBody.getDeepestRef}}
        {{#eq ../contentType "null"}}
body: typing.Union[
            {{#each content}}
    request_body.{{../../requestBody.jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
            {{/each}}
            {{#each getContentSchemas}}
    {{> _helper_schema_python_types_newline }}
            {{/each}}
],
        {{else}}
body: typing.Union[
            {{#each content}}
                {{#eq @key.original ../../contentType }}
    request_body.{{../../requestBody.jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
                    {{#with this.schema.getSelfOrDeepestRef}}
    {{> _helper_schema_python_types_newline }}
                    {{/with}}
                {{/eq}}
            {{/each}}
],
        {{/eq}}
        {{/with}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody.getDeepestRef}}
                    {{#each content}}
                        {{#eq @key.original ../../contentType}}
                            {{#if @first}}
content_type: typing_extensions.Literal["{{{@key.original}}}"] = ...,
                            {{else}}
content_type: typing_extensions.Literal["{{{@key.original}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody.getDeepestRef}}
                {{#each content}}
                    {{#if @first}}
content_type: str = '{{{@key.original}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
    {{else}}
    {{! optional }}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody.getDeepestRef}}
                    {{#each content}}
                        {{#eq @key.original ../../contentType}}
                            {{#if @first}}
content_type: typing_extensions.Literal["{{{@key.original}}}"] = ...,
                            {{else}}
content_type: typing_extensions.Literal["{{{@key.original}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody.getDeepestRef}}
                {{#each content}}
                    {{#if @first}}
content_type: str = '{{{@key.original}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
        {{#with requestBody.getDeepestRef}}
        {{#eq ../contentType "null"}}
body: typing.Union[
            {{#each content}}
    request_body.{{../../requestBody.jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
            {{/each}}
            {{#each getContentSchemas}}
        schemas.Unset,
    {{> _helper_schema_python_types_newline }}
            {{/each}}
] = schemas.unset,
        {{else}}
body: typing.Union[
            {{#each content}}
                {{#eq @key.original ../../contentType }}
    request_body.{{../../requestBody.jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
    schemas.Unset,
                    {{#with this.schema.getSelfOrDeepestRef}}
    {{> _helper_schema_python_types_newline }}
                    {{/with}}
                {{/eq}}
            {{/each}}
] = schemas.unset,
        {{/eq}}
        {{/with}}
    {{/if}}
{{else}}
{{! inline requestBody }}
    {{#if requestBody.required}}
    {{! required }}
        {{#with requestBody}}
        {{#eq ../contentType "null"}}
body: typing.Union[
            {{#each content}}
    request_body.{{../jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
            {{/each}}
            {{#each getContentSchemas}}
        {{> _helper_schema_python_types_newline }}
            {{/each}}
],
        {{else}}
body: typing.Union[
            {{#each content}}
                {{#eq @key.original ../../contentType }}
    request_body.{{../jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
                    {{#with this.schema.getSelfOrDeepestRef}}
    {{> _helper_schema_python_types_newline }}
                    {{/with}}
                {{/eq}}
            {{/each}}
],
        {{/eq}}
        {{/with}}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody}}
                    {{#each content}}
                        {{#eq @key.original ../../contentType}}
                            {{#if @first}}
content_type: typing_extensions.Literal["{{{@key.original}}}"] = ...,
                            {{else}}
content_type: typing_extensions.Literal["{{{@key.original}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody}}
                {{#each content}}
                    {{#if @first}}
content_type: str = '{{{@key.original}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
    {{else}}
    {{! optional }}
        {{#if isOverload}}
            {{#eq skipDeserialization "True"}}
skip_deserialization: typing_extensions.Literal[True],
            {{/eq}}
            {{#neq contentType "null"}}
                {{#with requestBody}}
                    {{#each content}}
                        {{#eq @key.original ../../contentType}}
                            {{#if @first}}
content_type: typing_extensions.Literal["{{{@key.original}}}"] = ...,
                            {{else}}
content_type: typing_extensions.Literal["{{{@key.original}}}"],
                            {{/if}}
                        {{/eq}}
                    {{/each}}
                {{/with}}
            {{else}}
content_type: str = ...,
            {{/neq}}
        {{else}}
            {{#with requestBody}}
                {{#each content}}
                    {{#if @first}}
content_type: str = '{{{@key.original}}}',
                    {{/if}}
                {{/each}}
            {{/with}}
        {{/if}}
        {{#with requestBody}}
        {{#eq ../contentType "null"}}
body: typing.Union[
            {{#each content}}
    request_body.{{../jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
            {{/each}}
    schemas.Unset,
            {{#each getContentSchemas}}
    {{> _helper_schema_python_types_newline }}
            {{/each}}
] = schemas.unset,
        {{else}}
body: typing.Union[
            {{#each content}}
                {{#eq @key.original ../../contentType }}
    request_body.{{../jsonPathPiece.camelCase}}.content["{{{@key.original}}}"].schema,
    schemas.Unset,
                    {{#with this.schema.getSelfOrDeepestRef}}
    {{> _helper_schema_python_types_newline }}
                    {{/with}}
                {{/eq}}
            {{/each}}
] = schemas.unset,
        {{/eq}}
        {{/with}}
    {{/if}}
{{/if}}