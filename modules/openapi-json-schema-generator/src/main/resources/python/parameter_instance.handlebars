class {{name.getCamelCaseName}}(api_client.{{#if noName}}Header{{/if}}{{#if isQueryParam}}Query{{/if}}{{#if isPathParam}}Path{{/if}}{{#if isHeaderParam}}Header{{/if}}{{#if isCookieParam}}Cookie{{/if}}Parameter{{#if noName}}WithoutName{{/if}}):
{{#unless noName}}
    name = "{{baseName}}"
{{/unless}}
{{#if style}}
{{#eq style "matrix"}}
    style = api_client.ParameterStyle.MATRIX
{{/eq}}
{{#eq style "label"}}
    style = api_client.ParameterStyle.LABEL
{{/eq}}
{{#eq style "form"}}
    style = api_client.ParameterStyle.FORM
{{/eq}}
{{#eq style "simple"}}
    style = api_client.ParameterStyle.SIMPLE
{{/eq}}
{{#eq style "spaceDelimited"}}
    style = api_client.ParameterStyle.SPACE_DELIMITED
{{/eq}}
{{#eq style "pipeDelimited"}}
    style=api_client.ParameterStyle.PIPE_DELIMITED
{{/eq}}
{{#eq style "deepObject"}}
    style=api_client.ParameterStyle.DEEP_OBJECT
{{/eq}}
{{/if}}
{{#if schema}}
    {{#with schema}}
    schema = {{name.getSnakeCaseName}}.{{name.getCamelCaseName}}
    {{/with}}
{{/if}}
{{#if getContent}}
{{#each content}}


    class __{{@key.getCamelCaseName}}MediaType(api_client.MediaType):
    {{#with this}}
        {{#with schema}}
        schema: typing.Type[{{../@key.getSnakeCaseName}}_{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}] = {{../@key.getSnakeCaseName}}_{{name.getSnakeCaseName}}.{{name.getCamelCaseName}}
        {{/with}}
    {{/with}}
{{/each}}
    __Content = typing_extensions.TypedDict(
        '__Content',
        {
{{#each content}}
            '{{{@key.getName}}}': typing.Type[__{{@key.getCamelCaseName}}MediaType],
{{/each}}
        }
    )
    content: __Content = {
{{#each content}}
        '{{{@key.getName}}}': __{{@key.getCamelCaseName}}MediaType,
{{/each}}
    }
{{/if}}
{{#if required}}
    required = True
{{/if}}
{{#if isExplode}}
    explode = True
{{/if}}
