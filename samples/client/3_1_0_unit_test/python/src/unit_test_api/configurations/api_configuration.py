# coding: utf-8

"""
    openapi 3.1.0 sample spec
    sample spec for testing openapi functionality, built from json schema tests for draft2020-12  # noqa: E501
    The version of the OpenAPI document: 0.0.1
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

import copy
from http import client as http_client
import logging
import multiprocessing
import sys
import typing
import typing_extensions

import urllib3

from unit_test_api import exceptions
from unit_test_api.servers import server_0

# the server to use at each openapi document json path
ServerInfo = typing.TypedDict(
    'ServerInfo',
    {
        'servers/0': server_0.Server0,
    },
    total=False
)


class ServerIndexInfoRequired(typing.TypedDict):
    servers: typing.Literal[0]

ServerIndexInfoOptional = typing.TypedDict(
    'ServerIndexInfoOptional',
    {
    },
    total=False
)


class ServerIndexInfo(ServerIndexInfoRequired, ServerIndexInfoOptional):
    """
    the default server_index to use at each openapi document json path
    the fallback value is stored in the 'servers' key
    """


class ApiConfiguration(object):
    """NOTE: This class is auto generated by OpenAPI JSON Schema Generator

    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
    Do not edit the class manually.

    :param server_info: the servers that can be used to make endpoint calls
    :param server_index_info: index to servers configuration
    """

    def __init__(
        self,
        server_info: typing.Optional[ServerInfo] = None,
        server_index_info: typing.Optional[ServerIndexInfo] = None,
    ):
        """Constructor
        """
        # Authentication Settings
        self.security_scheme_info: typing.Dict[str, typing.Any] = {}
        self.security_index_info = {'security': 0}
        # Server Info
        self.server_info: ServerInfo = server_info or {
            'servers/0': server_0.Server0(),
        }
        self.server_index_info: ServerIndexInfo = server_index_info or {'servers': 0}
        self.logger = {}
        """Logging Settings
        """
        self.logger["package_logger"] = logging.getLogger("unit_test_api")
        self.logger["urllib3_logger"] = logging.getLogger("urllib3")
        self.logger_format = '%(asctime)s %(levelname)s %(message)s'
        """Log format
        """
        self.logger_stream_handler = None
        """Log stream handler
        """
        self.logger_file_handler = None
        """Log file handler
        """
        self.logger_file = None
        """Debug file location
        """
        self.debug = False
        """Debug switch
        """

        self.verify_ssl = True
        """SSL/TLS verification
           Set this to false to skip verifying SSL certificate when calling API
           from https server.
        """
        self.ssl_ca_cert = None
        """Set this to customize the certificate file to verify the peer.
        """
        self.cert_file = None
        """client certificate file
        """
        self.key_file = None
        """client key file
        """
        self.assert_hostname = None
        """Set this to True/False to enable/disable SSL hostname verification.
        """

        self.connection_pool_maxsize = multiprocessing.cpu_count() * 5
        """urllib3 connection pool's maximum number of connections saved
           per pool. urllib3 uses 1 connection as default value, but this is
           not the best value when you are making a lot of possibly parallel
           requests to the same host, which is often the case here.
           cpu_count * 5 is used as default value to increase performance.
        """

        self.proxy = None
        """Proxy URL
        """
        self.proxy_headers = None
        """Proxy headers
        """
        self.safe_chars_for_path_param = ''
        """Safe chars for path_param
        """
        self.retries = None
        """Adding retries to override urllib3 default value 3
        """
        # Enable client side validation
        self.client_side_validation = True

        # Options to pass down to the underlying urllib3 socket
        self.socket_options = None

    def __deepcopy__(self, memo):
        cls = self.__class__
        result = cls.__new__(cls)
        memo[id(self)] = result
        for k, v in self.__dict__.items():
            if k not in ('logger', 'logger_file_handler'):
                setattr(result, k, copy.deepcopy(v, memo))
        # shallow copy of loggers
        result.logger = copy.copy(self.logger)
        # use setters to configure loggers
        result.logger_file = self.logger_file
        result.debug = self.debug
        return result

    @property
    def logger_file(self):
        """The logger file.

        If the logger_file is None, then add stream handler and remove file
        handler. Otherwise, add file handler and remove stream handler.

        :param value: The logger_file path.
        :type: str
        """
        return self.__logger_file

    @logger_file.setter
    def logger_file(self, value):
        """The logger file.

        If the logger_file is None, then add stream handler and remove file
        handler. Otherwise, add file handler and remove stream handler.

        :param value: The logger_file path.
        :type: str
        """
        self.__logger_file = value
        if self.__logger_file:
            # If set logging file,
            # then add file handler and remove stream handler.
            self.logger_file_handler = logging.FileHandler(self.__logger_file)
            self.logger_file_handler.setFormatter(self.logger_formatter)
            for _, logger in self.logger.items():
                logger.addHandler(self.logger_file_handler)

    @property
    def debug(self):
        """Debug status

        :param value: The debug status, True or False.
        :type: bool
        """
        return self.__debug

    @debug.setter
    def debug(self, value):
        """Debug status

        :param value: The debug status, True or False.
        :type: bool
        """
        self.__debug = value
        if self.__debug:
            # if debug status is True, turn on debug logging
            for _, logger in self.logger.items():
                logger.setLevel(logging.DEBUG)
            # turn on http_client debug
            http_client.HTTPConnection.debuglevel = 1
        else:
            # if debug status is False, turn off debug logging,
            # setting log level to default `logging.WARNING`
            for _, logger in self.logger.items():
                logger.setLevel(logging.WARNING)
            # turn off http_client debug
            http_client.HTTPConnection.debuglevel = 0

    @property
    def logger_format(self):
        """The logger format.

        The logger_formatter will be updated when sets logger_format.

        :param value: The format string.
        :type: str
        """
        return self.__logger_format

    @logger_format.setter
    def logger_format(self, value):
        """The logger format.

        The logger_formatter will be updated when sets logger_format.

        :param value: The format string.
        :type: str
        """
        self.__logger_format = value
        self.logger_formatter = logging.Formatter(self.__logger_format)

    def to_debug_report(self):
        """Gets the essential information for debugging.

        :return: The report for debugging.
        """
        return "Python SDK Debug Report:\n"\
               "OS: {env}\n"\
               "Python Version: {pyversion}\n"\
               "Version of the API: 0.0.1\n"\
               "SDK Package Version: 1.0.0".\
               format(env=sys.platform, pyversion=sys.version)

    def get_server_url(
        self,
        key_prefix: typing.Literal[
            "servers",
            "paths//requestBody/postASchemaGivenForPrefixitemsRequestBody/post/servers",
            "paths//requestBody/postAdditionalItemsAreAllowedByDefaultRequestBody/post/servers",
            "paths//requestBody/postAdditionalpropertiesAreAllowedByDefaultRequestBody/post/servers",
            "paths//requestBody/postAdditionalpropertiesCanExistByItselfRequestBody/post/servers",
            "paths//requestBody/postAdditionalpropertiesDoesNotLookInApplicatorsRequestBody/post/servers",
            "paths//requestBody/postAdditionalpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers",
            "paths//requestBody/postAdditionalpropertiesWithSchemaRequestBody/post/servers",
            "paths//requestBody/postAllofCombinedWithAnyofOneofRequestBody/post/servers",
            "paths//requestBody/postAllofRequestBody/post/servers",
            "paths//requestBody/postAllofSimpleTypesRequestBody/post/servers",
            "paths//requestBody/postAllofWithBaseSchemaRequestBody/post/servers",
            "paths//requestBody/postAllofWithOneEmptySchemaRequestBody/post/servers",
            "paths//requestBody/postAllofWithTheFirstEmptySchemaRequestBody/post/servers",
            "paths//requestBody/postAllofWithTheLastEmptySchemaRequestBody/post/servers",
            "paths//requestBody/postAllofWithTwoEmptySchemasRequestBody/post/servers",
            "paths//requestBody/postAnyofComplexTypesRequestBody/post/servers",
            "paths//requestBody/postAnyofRequestBody/post/servers",
            "paths//requestBody/postAnyofWithBaseSchemaRequestBody/post/servers",
            "paths//requestBody/postAnyofWithOneEmptySchemaRequestBody/post/servers",
            "paths//requestBody/postArrayTypeMatchesArraysRequestBody/post/servers",
            "paths//requestBody/postBooleanTypeMatchesBooleansRequestBody/post/servers",
            "paths//requestBody/postByIntRequestBody/post/servers",
            "paths//requestBody/postByNumberRequestBody/post/servers",
            "paths//requestBody/postBySmallNumberRequestBody/post/servers",
            "paths//requestBody/postConstNulCharactersInStringsRequestBody/post/servers",
            "paths//requestBody/postContainsKeywordValidationRequestBody/post/servers",
            "paths//requestBody/postContainsWithNullInstanceElementsRequestBody/post/servers",
            "paths//requestBody/postDateFormatRequestBody/post/servers",
            "paths//requestBody/postDateTimeFormatRequestBody/post/servers",
            "paths//requestBody/postDependentSchemasDependenciesWithEscapedCharactersRequestBody/post/servers",
            "paths//requestBody/postDependentSchemasDependentSubschemaIncompatibleWithRootRequestBody/post/servers",
            "paths//requestBody/postDependentSchemasSingleDependencyRequestBody/post/servers",
            "paths//requestBody/postDurationFormatRequestBody/post/servers",
            "paths//requestBody/postEmailFormatRequestBody/post/servers",
            "paths//requestBody/postEmptyDependentsRequestBody/post/servers",
            "paths//requestBody/postEnumWith0DoesNotMatchFalseRequestBody/post/servers",
            "paths//requestBody/postEnumWith1DoesNotMatchTrueRequestBody/post/servers",
            "paths//requestBody/postEnumWithEscapedCharactersRequestBody/post/servers",
            "paths//requestBody/postEnumWithFalseDoesNotMatch0RequestBody/post/servers",
            "paths//requestBody/postEnumWithTrueDoesNotMatch1RequestBody/post/servers",
            "paths//requestBody/postEnumsInPropertiesRequestBody/post/servers",
            "paths//requestBody/postExclusivemaximumValidationRequestBody/post/servers",
            "paths//requestBody/postExclusiveminimumValidationRequestBody/post/servers",
            "paths//requestBody/postFloatDivisionInfRequestBody/post/servers",
            "paths//requestBody/postForbiddenPropertyRequestBody/post/servers",
            "paths//requestBody/postHostnameFormatRequestBody/post/servers",
            "paths//requestBody/postIdnEmailFormatRequestBody/post/servers",
            "paths//requestBody/postIdnHostnameFormatRequestBody/post/servers",
            "paths//requestBody/postIfAndElseWithoutThenRequestBody/post/servers",
            "paths//requestBody/postIfAndThenWithoutElseRequestBody/post/servers",
            "paths//requestBody/postIfAppearsAtTheEndWhenSerializedKeywordProcessingSequenceRequestBody/post/servers",
            "paths//requestBody/postIgnoreElseWithoutIfRequestBody/post/servers",
            "paths//requestBody/postIgnoreIfWithoutThenOrElseRequestBody/post/servers",
            "paths//requestBody/postIgnoreThenWithoutIfRequestBody/post/servers",
            "paths//requestBody/postIntegerTypeMatchesIntegersRequestBody/post/servers",
            "paths//requestBody/postIpv4FormatRequestBody/post/servers",
            "paths//requestBody/postIpv6FormatRequestBody/post/servers",
            "paths//requestBody/postIriFormatRequestBody/post/servers",
            "paths//requestBody/postIriReferenceFormatRequestBody/post/servers",
            "paths//requestBody/postItemsContainsRequestBody/post/servers",
            "paths//requestBody/postItemsDoesNotLookInApplicatorsValidCaseRequestBody/post/servers",
            "paths//requestBody/postItemsWithNullInstanceElementsRequestBody/post/servers",
            "paths//requestBody/postJsonPointerFormatRequestBody/post/servers",
            "paths//requestBody/postMaxcontainsWithoutContainsIsIgnoredRequestBody/post/servers",
            "paths//requestBody/postMaximumValidationRequestBody/post/servers",
            "paths//requestBody/postMaximumValidationWithUnsignedIntegerRequestBody/post/servers",
            "paths//requestBody/postMaxitemsValidationRequestBody/post/servers",
            "paths//requestBody/postMaxlengthValidationRequestBody/post/servers",
            "paths//requestBody/postMaxproperties0MeansTheObjectIsEmptyRequestBody/post/servers",
            "paths//requestBody/postMaxpropertiesValidationRequestBody/post/servers",
            "paths//requestBody/postMincontainsWithoutContainsIsIgnoredRequestBody/post/servers",
            "paths//requestBody/postMinimumValidationRequestBody/post/servers",
            "paths//requestBody/postMinimumValidationWithSignedIntegerRequestBody/post/servers",
            "paths//requestBody/postMinitemsValidationRequestBody/post/servers",
            "paths//requestBody/postMinlengthValidationRequestBody/post/servers",
            "paths//requestBody/postMinpropertiesValidationRequestBody/post/servers",
            "paths//requestBody/postMultipleDependentsRequiredRequestBody/post/servers",
            "paths//requestBody/postMultipleSimultaneousPatternpropertiesAreValidatedRequestBody/post/servers",
            "paths//requestBody/postMultipleTypesCanBeSpecifiedInAnArrayRequestBody/post/servers",
            "paths//requestBody/postNestedAllofToCheckValidationSemanticsRequestBody/post/servers",
            "paths//requestBody/postNestedAnyofToCheckValidationSemanticsRequestBody/post/servers",
            "paths//requestBody/postNestedItemsRequestBody/post/servers",
            "paths//requestBody/postNestedOneofToCheckValidationSemanticsRequestBody/post/servers",
            "paths//requestBody/postNonAsciiPatternWithAdditionalpropertiesRequestBody/post/servers",
            "paths//requestBody/postNonInterferenceAcrossCombinedSchemasRequestBody/post/servers",
            "paths//requestBody/postNotMoreComplexSchemaRequestBody/post/servers",
            "paths//requestBody/postNotMultipleTypesRequestBody/post/servers",
            "paths//requestBody/postNotRequestBody/post/servers",
            "paths//requestBody/postNulCharactersInStringsRequestBody/post/servers",
            "paths//requestBody/postNullTypeMatchesOnlyTheNullObjectRequestBody/post/servers",
            "paths//requestBody/postNumberTypeMatchesNumbersRequestBody/post/servers",
            "paths//requestBody/postObjectPropertiesValidationRequestBody/post/servers",
            "paths//requestBody/postObjectTypeMatchesObjectsRequestBody/post/servers",
            "paths//requestBody/postOneofComplexTypesRequestBody/post/servers",
            "paths//requestBody/postOneofRequestBody/post/servers",
            "paths//requestBody/postOneofWithBaseSchemaRequestBody/post/servers",
            "paths//requestBody/postOneofWithEmptySchemaRequestBody/post/servers",
            "paths//requestBody/postOneofWithRequiredRequestBody/post/servers",
            "paths//requestBody/postPatternIsNotAnchoredRequestBody/post/servers",
            "paths//requestBody/postPatternValidationRequestBody/post/servers",
            "paths//requestBody/postPatternpropertiesValidatesPropertiesMatchingARegexRequestBody/post/servers",
            "paths//requestBody/postPatternpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers",
            "paths//requestBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsRequestBody/post/servers",
            "paths//requestBody/postPrefixitemsWithNullInstanceElementsRequestBody/post/servers",
            "paths//requestBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionRequestBody/post/servers",
            "paths//requestBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody/post/servers",
            "paths//requestBody/postPropertiesWithEscapedCharactersRequestBody/post/servers",
            "paths//requestBody/postPropertiesWithNullValuedInstancePropertiesRequestBody/post/servers",
            "paths//requestBody/postPropertyNamedRefThatIsNotAReferenceRequestBody/post/servers",
            "paths//requestBody/postPropertynamesValidationRequestBody/post/servers",
            "paths//requestBody/postRegexFormatRequestBody/post/servers",
            "paths//requestBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveRequestBody/post/servers",
            "paths//requestBody/postRelativeJsonPointerFormatRequestBody/post/servers",
            "paths//requestBody/postRequiredDefaultValidationRequestBody/post/servers",
            "paths//requestBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody/post/servers",
            "paths//requestBody/postRequiredValidationRequestBody/post/servers",
            "paths//requestBody/postRequiredWithEmptyArrayRequestBody/post/servers",
            "paths//requestBody/postRequiredWithEscapedCharactersRequestBody/post/servers",
            "paths//requestBody/postSimpleEnumValidationRequestBody/post/servers",
            "paths//requestBody/postSingleDependencyRequestBody/post/servers",
            "paths//requestBody/postSmallMultipleOfLargeIntegerRequestBody/post/servers",
            "paths//requestBody/postStringTypeMatchesStringsRequestBody/post/servers",
            "paths//requestBody/postTimeFormatRequestBody/post/servers",
            "paths//requestBody/postTypeArrayObjectOrNullRequestBody/post/servers",
            "paths//requestBody/postTypeArrayOrObjectRequestBody/post/servers",
            "paths//requestBody/postTypeAsArrayWithOneItemRequestBody/post/servers",
            "paths//requestBody/postUnevaluateditemsAsSchemaRequestBody/post/servers",
            "paths//requestBody/postUnevaluateditemsDependsOnMultipleNestedContainsRequestBody/post/servers",
            "paths//requestBody/postUnevaluateditemsWithItemsRequestBody/post/servers",
            "paths//requestBody/postUnevaluateditemsWithNullInstanceElementsRequestBody/post/servers",
            "paths//requestBody/postUnevaluatedpropertiesNotAffectedByPropertynamesRequestBody/post/servers",
            "paths//requestBody/postUnevaluatedpropertiesSchemaRequestBody/post/servers",
            "paths//requestBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesRequestBody/post/servers",
            "paths//requestBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers",
            "paths//requestBody/postUniqueitemsFalseValidationRequestBody/post/servers",
            "paths//requestBody/postUniqueitemsFalseWithAnArrayOfItemsRequestBody/post/servers",
            "paths//requestBody/postUniqueitemsValidationRequestBody/post/servers",
            "paths//requestBody/postUniqueitemsWithAnArrayOfItemsRequestBody/post/servers",
            "paths//requestBody/postUriFormatRequestBody/post/servers",
            "paths//requestBody/postUriReferenceFormatRequestBody/post/servers",
            "paths//requestBody/postUriTemplateFormatRequestBody/post/servers",
            "paths//requestBody/postUuidFormatRequestBody/post/servers",
            "paths//requestBody/postValidateAgainstCorrectBranchThenVsElseRequestBody/post/servers",
            "paths//responseBody/postASchemaGivenForPrefixitemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalItemsAreAllowedByDefaultResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalpropertiesAreAllowedByDefaultResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalpropertiesCanExistByItselfResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalpropertiesDoesNotLookInApplicatorsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAdditionalpropertiesWithSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofCombinedWithAnyofOneofResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofSimpleTypesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofWithBaseSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofWithOneEmptySchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofWithTheFirstEmptySchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofWithTheLastEmptySchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAllofWithTwoEmptySchemasResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAnyofComplexTypesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAnyofResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAnyofWithBaseSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postAnyofWithOneEmptySchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postArrayTypeMatchesArraysResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postBooleanTypeMatchesBooleansResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postByIntResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postByNumberResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postBySmallNumberResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postConstNulCharactersInStringsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postContainsKeywordValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postContainsWithNullInstanceElementsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDateFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDateTimeFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDependentSchemasDependenciesWithEscapedCharactersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDependentSchemasDependentSubschemaIncompatibleWithRootResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDependentSchemasSingleDependencyResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postDurationFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEmailFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEmptyDependentsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumWith0DoesNotMatchFalseResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumWith1DoesNotMatchTrueResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumWithEscapedCharactersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumWithFalseDoesNotMatch0ResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumWithTrueDoesNotMatch1ResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postEnumsInPropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postExclusivemaximumValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postExclusiveminimumValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postFloatDivisionInfResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postForbiddenPropertyResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postHostnameFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIdnEmailFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIdnHostnameFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIfAndElseWithoutThenResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIfAndThenWithoutElseResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIfAppearsAtTheEndWhenSerializedKeywordProcessingSequenceResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIgnoreElseWithoutIfResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIgnoreIfWithoutThenOrElseResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIgnoreThenWithoutIfResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIntegerTypeMatchesIntegersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIpv4FormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIpv6FormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIriFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postIriReferenceFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postItemsContainsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postItemsDoesNotLookInApplicatorsValidCaseResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postItemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postJsonPointerFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaxcontainsWithoutContainsIsIgnoredResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaximumValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaximumValidationWithUnsignedIntegerResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaxitemsValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaxlengthValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaxproperties0MeansTheObjectIsEmptyResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMaxpropertiesValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMincontainsWithoutContainsIsIgnoredResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMinimumValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMinimumValidationWithSignedIntegerResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMinitemsValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMinlengthValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMinpropertiesValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMultipleDependentsRequiredResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMultipleSimultaneousPatternpropertiesAreValidatedResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postMultipleTypesCanBeSpecifiedInAnArrayResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNestedAllofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNestedAnyofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNestedItemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNestedOneofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNonAsciiPatternWithAdditionalpropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNonInterferenceAcrossCombinedSchemasResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNotMoreComplexSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNotMultipleTypesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNotResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNulCharactersInStringsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNullTypeMatchesOnlyTheNullObjectResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postNumberTypeMatchesNumbersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postObjectPropertiesValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postObjectTypeMatchesObjectsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postOneofComplexTypesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postOneofResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postOneofWithBaseSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postOneofWithEmptySchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postOneofWithRequiredResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPatternIsNotAnchoredResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPatternValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPatternpropertiesValidatesPropertiesMatchingARegexResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPatternpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPrefixitemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertiesWithEscapedCharactersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertyNamedRefThatIsNotAReferenceResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postPropertynamesValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRegexFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRelativeJsonPointerFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRequiredDefaultValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRequiredValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRequiredWithEmptyArrayResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postRequiredWithEscapedCharactersResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postSimpleEnumValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postSingleDependencyResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postSmallMultipleOfLargeIntegerResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postStringTypeMatchesStringsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postTimeFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postTypeArrayObjectOrNullResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postTypeArrayOrObjectResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postTypeAsArrayWithOneItemResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluateditemsAsSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluateditemsDependsOnMultipleNestedContainsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluateditemsWithItemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluateditemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluatedpropertiesNotAffectedByPropertynamesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluatedpropertiesSchemaResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUniqueitemsFalseValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUniqueitemsFalseWithAnArrayOfItemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUniqueitemsValidationResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUniqueitemsWithAnArrayOfItemsResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUriFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUriReferenceFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUriTemplateFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postUuidFormatResponseBodyForContentTypes/post/servers",
            "paths//responseBody/postValidateAgainstCorrectBranchThenVsElseResponseBodyForContentTypes/post/servers",
        ],
        index: typing.Optional[int],
    ) -> str:
        """Gets host URL based on the index
        :param index: array index of the host settings
        :return: URL based on host settings
        """
        if index:
            used_index = index
        else:
            try:
                used_index = self.server_index_info[key_prefix]
            except KeyError:
                # fallback and use the default index
                used_index = self.server_index_info.get("servers", 0)
        server_info_key = typing.cast(
            typing.Literal[
                "servers/0",
                "paths//requestBody/postASchemaGivenForPrefixitemsRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalItemsAreAllowedByDefaultRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalpropertiesAreAllowedByDefaultRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalpropertiesCanExistByItselfRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalpropertiesDoesNotLookInApplicatorsRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers/0",
                "paths//requestBody/postAdditionalpropertiesWithSchemaRequestBody/post/servers/0",
                "paths//requestBody/postAllofCombinedWithAnyofOneofRequestBody/post/servers/0",
                "paths//requestBody/postAllofRequestBody/post/servers/0",
                "paths//requestBody/postAllofSimpleTypesRequestBody/post/servers/0",
                "paths//requestBody/postAllofWithBaseSchemaRequestBody/post/servers/0",
                "paths//requestBody/postAllofWithOneEmptySchemaRequestBody/post/servers/0",
                "paths//requestBody/postAllofWithTheFirstEmptySchemaRequestBody/post/servers/0",
                "paths//requestBody/postAllofWithTheLastEmptySchemaRequestBody/post/servers/0",
                "paths//requestBody/postAllofWithTwoEmptySchemasRequestBody/post/servers/0",
                "paths//requestBody/postAnyofComplexTypesRequestBody/post/servers/0",
                "paths//requestBody/postAnyofRequestBody/post/servers/0",
                "paths//requestBody/postAnyofWithBaseSchemaRequestBody/post/servers/0",
                "paths//requestBody/postAnyofWithOneEmptySchemaRequestBody/post/servers/0",
                "paths//requestBody/postArrayTypeMatchesArraysRequestBody/post/servers/0",
                "paths//requestBody/postBooleanTypeMatchesBooleansRequestBody/post/servers/0",
                "paths//requestBody/postByIntRequestBody/post/servers/0",
                "paths//requestBody/postByNumberRequestBody/post/servers/0",
                "paths//requestBody/postBySmallNumberRequestBody/post/servers/0",
                "paths//requestBody/postConstNulCharactersInStringsRequestBody/post/servers/0",
                "paths//requestBody/postContainsKeywordValidationRequestBody/post/servers/0",
                "paths//requestBody/postContainsWithNullInstanceElementsRequestBody/post/servers/0",
                "paths//requestBody/postDateFormatRequestBody/post/servers/0",
                "paths//requestBody/postDateTimeFormatRequestBody/post/servers/0",
                "paths//requestBody/postDependentSchemasDependenciesWithEscapedCharactersRequestBody/post/servers/0",
                "paths//requestBody/postDependentSchemasDependentSubschemaIncompatibleWithRootRequestBody/post/servers/0",
                "paths//requestBody/postDependentSchemasSingleDependencyRequestBody/post/servers/0",
                "paths//requestBody/postDurationFormatRequestBody/post/servers/0",
                "paths//requestBody/postEmailFormatRequestBody/post/servers/0",
                "paths//requestBody/postEmptyDependentsRequestBody/post/servers/0",
                "paths//requestBody/postEnumWith0DoesNotMatchFalseRequestBody/post/servers/0",
                "paths//requestBody/postEnumWith1DoesNotMatchTrueRequestBody/post/servers/0",
                "paths//requestBody/postEnumWithEscapedCharactersRequestBody/post/servers/0",
                "paths//requestBody/postEnumWithFalseDoesNotMatch0RequestBody/post/servers/0",
                "paths//requestBody/postEnumWithTrueDoesNotMatch1RequestBody/post/servers/0",
                "paths//requestBody/postEnumsInPropertiesRequestBody/post/servers/0",
                "paths//requestBody/postExclusivemaximumValidationRequestBody/post/servers/0",
                "paths//requestBody/postExclusiveminimumValidationRequestBody/post/servers/0",
                "paths//requestBody/postFloatDivisionInfRequestBody/post/servers/0",
                "paths//requestBody/postForbiddenPropertyRequestBody/post/servers/0",
                "paths//requestBody/postHostnameFormatRequestBody/post/servers/0",
                "paths//requestBody/postIdnEmailFormatRequestBody/post/servers/0",
                "paths//requestBody/postIdnHostnameFormatRequestBody/post/servers/0",
                "paths//requestBody/postIfAndElseWithoutThenRequestBody/post/servers/0",
                "paths//requestBody/postIfAndThenWithoutElseRequestBody/post/servers/0",
                "paths//requestBody/postIfAppearsAtTheEndWhenSerializedKeywordProcessingSequenceRequestBody/post/servers/0",
                "paths//requestBody/postIgnoreElseWithoutIfRequestBody/post/servers/0",
                "paths//requestBody/postIgnoreIfWithoutThenOrElseRequestBody/post/servers/0",
                "paths//requestBody/postIgnoreThenWithoutIfRequestBody/post/servers/0",
                "paths//requestBody/postIntegerTypeMatchesIntegersRequestBody/post/servers/0",
                "paths//requestBody/postIpv4FormatRequestBody/post/servers/0",
                "paths//requestBody/postIpv6FormatRequestBody/post/servers/0",
                "paths//requestBody/postIriFormatRequestBody/post/servers/0",
                "paths//requestBody/postIriReferenceFormatRequestBody/post/servers/0",
                "paths//requestBody/postItemsContainsRequestBody/post/servers/0",
                "paths//requestBody/postItemsDoesNotLookInApplicatorsValidCaseRequestBody/post/servers/0",
                "paths//requestBody/postItemsWithNullInstanceElementsRequestBody/post/servers/0",
                "paths//requestBody/postJsonPointerFormatRequestBody/post/servers/0",
                "paths//requestBody/postMaxcontainsWithoutContainsIsIgnoredRequestBody/post/servers/0",
                "paths//requestBody/postMaximumValidationRequestBody/post/servers/0",
                "paths//requestBody/postMaximumValidationWithUnsignedIntegerRequestBody/post/servers/0",
                "paths//requestBody/postMaxitemsValidationRequestBody/post/servers/0",
                "paths//requestBody/postMaxlengthValidationRequestBody/post/servers/0",
                "paths//requestBody/postMaxproperties0MeansTheObjectIsEmptyRequestBody/post/servers/0",
                "paths//requestBody/postMaxpropertiesValidationRequestBody/post/servers/0",
                "paths//requestBody/postMincontainsWithoutContainsIsIgnoredRequestBody/post/servers/0",
                "paths//requestBody/postMinimumValidationRequestBody/post/servers/0",
                "paths//requestBody/postMinimumValidationWithSignedIntegerRequestBody/post/servers/0",
                "paths//requestBody/postMinitemsValidationRequestBody/post/servers/0",
                "paths//requestBody/postMinlengthValidationRequestBody/post/servers/0",
                "paths//requestBody/postMinpropertiesValidationRequestBody/post/servers/0",
                "paths//requestBody/postMultipleDependentsRequiredRequestBody/post/servers/0",
                "paths//requestBody/postMultipleSimultaneousPatternpropertiesAreValidatedRequestBody/post/servers/0",
                "paths//requestBody/postMultipleTypesCanBeSpecifiedInAnArrayRequestBody/post/servers/0",
                "paths//requestBody/postNestedAllofToCheckValidationSemanticsRequestBody/post/servers/0",
                "paths//requestBody/postNestedAnyofToCheckValidationSemanticsRequestBody/post/servers/0",
                "paths//requestBody/postNestedItemsRequestBody/post/servers/0",
                "paths//requestBody/postNestedOneofToCheckValidationSemanticsRequestBody/post/servers/0",
                "paths//requestBody/postNonAsciiPatternWithAdditionalpropertiesRequestBody/post/servers/0",
                "paths//requestBody/postNonInterferenceAcrossCombinedSchemasRequestBody/post/servers/0",
                "paths//requestBody/postNotMoreComplexSchemaRequestBody/post/servers/0",
                "paths//requestBody/postNotMultipleTypesRequestBody/post/servers/0",
                "paths//requestBody/postNotRequestBody/post/servers/0",
                "paths//requestBody/postNulCharactersInStringsRequestBody/post/servers/0",
                "paths//requestBody/postNullTypeMatchesOnlyTheNullObjectRequestBody/post/servers/0",
                "paths//requestBody/postNumberTypeMatchesNumbersRequestBody/post/servers/0",
                "paths//requestBody/postObjectPropertiesValidationRequestBody/post/servers/0",
                "paths//requestBody/postObjectTypeMatchesObjectsRequestBody/post/servers/0",
                "paths//requestBody/postOneofComplexTypesRequestBody/post/servers/0",
                "paths//requestBody/postOneofRequestBody/post/servers/0",
                "paths//requestBody/postOneofWithBaseSchemaRequestBody/post/servers/0",
                "paths//requestBody/postOneofWithEmptySchemaRequestBody/post/servers/0",
                "paths//requestBody/postOneofWithRequiredRequestBody/post/servers/0",
                "paths//requestBody/postPatternIsNotAnchoredRequestBody/post/servers/0",
                "paths//requestBody/postPatternValidationRequestBody/post/servers/0",
                "paths//requestBody/postPatternpropertiesValidatesPropertiesMatchingARegexRequestBody/post/servers/0",
                "paths//requestBody/postPatternpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers/0",
                "paths//requestBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsRequestBody/post/servers/0",
                "paths//requestBody/postPrefixitemsWithNullInstanceElementsRequestBody/post/servers/0",
                "paths//requestBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionRequestBody/post/servers/0",
                "paths//requestBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody/post/servers/0",
                "paths//requestBody/postPropertiesWithEscapedCharactersRequestBody/post/servers/0",
                "paths//requestBody/postPropertiesWithNullValuedInstancePropertiesRequestBody/post/servers/0",
                "paths//requestBody/postPropertyNamedRefThatIsNotAReferenceRequestBody/post/servers/0",
                "paths//requestBody/postPropertynamesValidationRequestBody/post/servers/0",
                "paths//requestBody/postRegexFormatRequestBody/post/servers/0",
                "paths//requestBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveRequestBody/post/servers/0",
                "paths//requestBody/postRelativeJsonPointerFormatRequestBody/post/servers/0",
                "paths//requestBody/postRequiredDefaultValidationRequestBody/post/servers/0",
                "paths//requestBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody/post/servers/0",
                "paths//requestBody/postRequiredValidationRequestBody/post/servers/0",
                "paths//requestBody/postRequiredWithEmptyArrayRequestBody/post/servers/0",
                "paths//requestBody/postRequiredWithEscapedCharactersRequestBody/post/servers/0",
                "paths//requestBody/postSimpleEnumValidationRequestBody/post/servers/0",
                "paths//requestBody/postSingleDependencyRequestBody/post/servers/0",
                "paths//requestBody/postSmallMultipleOfLargeIntegerRequestBody/post/servers/0",
                "paths//requestBody/postStringTypeMatchesStringsRequestBody/post/servers/0",
                "paths//requestBody/postTimeFormatRequestBody/post/servers/0",
                "paths//requestBody/postTypeArrayObjectOrNullRequestBody/post/servers/0",
                "paths//requestBody/postTypeArrayOrObjectRequestBody/post/servers/0",
                "paths//requestBody/postTypeAsArrayWithOneItemRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluateditemsAsSchemaRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluateditemsDependsOnMultipleNestedContainsRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluateditemsWithItemsRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluateditemsWithNullInstanceElementsRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluatedpropertiesNotAffectedByPropertynamesRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluatedpropertiesSchemaRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesRequestBody/post/servers/0",
                "paths//requestBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesRequestBody/post/servers/0",
                "paths//requestBody/postUniqueitemsFalseValidationRequestBody/post/servers/0",
                "paths//requestBody/postUniqueitemsFalseWithAnArrayOfItemsRequestBody/post/servers/0",
                "paths//requestBody/postUniqueitemsValidationRequestBody/post/servers/0",
                "paths//requestBody/postUniqueitemsWithAnArrayOfItemsRequestBody/post/servers/0",
                "paths//requestBody/postUriFormatRequestBody/post/servers/0",
                "paths//requestBody/postUriReferenceFormatRequestBody/post/servers/0",
                "paths//requestBody/postUriTemplateFormatRequestBody/post/servers/0",
                "paths//requestBody/postUuidFormatRequestBody/post/servers/0",
                "paths//requestBody/postValidateAgainstCorrectBranchThenVsElseRequestBody/post/servers/0",
                "paths//responseBody/postASchemaGivenForPrefixitemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalItemsAreAllowedByDefaultResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalpropertiesAreAllowedByDefaultResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalpropertiesCanExistByItselfResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalpropertiesDoesNotLookInApplicatorsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAdditionalpropertiesWithSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofCombinedWithAnyofOneofResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofSimpleTypesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofWithBaseSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofWithOneEmptySchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofWithTheFirstEmptySchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofWithTheLastEmptySchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAllofWithTwoEmptySchemasResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAnyofComplexTypesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAnyofResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAnyofWithBaseSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postAnyofWithOneEmptySchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postArrayTypeMatchesArraysResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postBooleanTypeMatchesBooleansResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postByIntResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postByNumberResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postBySmallNumberResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postConstNulCharactersInStringsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postContainsKeywordValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postContainsWithNullInstanceElementsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDateFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDateTimeFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDependentSchemasDependenciesWithEscapedCharactersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDependentSchemasDependentSubschemaIncompatibleWithRootResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDependentSchemasSingleDependencyResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postDurationFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEmailFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEmptyDependentsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumWith0DoesNotMatchFalseResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumWith1DoesNotMatchTrueResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumWithEscapedCharactersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumWithFalseDoesNotMatch0ResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumWithTrueDoesNotMatch1ResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postEnumsInPropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postExclusivemaximumValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postExclusiveminimumValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postFloatDivisionInfResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postForbiddenPropertyResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postHostnameFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIdnEmailFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIdnHostnameFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIfAndElseWithoutThenResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIfAndThenWithoutElseResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIfAppearsAtTheEndWhenSerializedKeywordProcessingSequenceResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIgnoreElseWithoutIfResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIgnoreIfWithoutThenOrElseResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIgnoreThenWithoutIfResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIntegerTypeMatchesIntegersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIpv4FormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIpv6FormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIriFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postIriReferenceFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postItemsContainsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postItemsDoesNotLookInApplicatorsValidCaseResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postItemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postJsonPointerFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaxcontainsWithoutContainsIsIgnoredResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaximumValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaximumValidationWithUnsignedIntegerResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaxitemsValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaxlengthValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaxproperties0MeansTheObjectIsEmptyResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMaxpropertiesValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMincontainsWithoutContainsIsIgnoredResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMinimumValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMinimumValidationWithSignedIntegerResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMinitemsValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMinlengthValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMinpropertiesValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMultipleDependentsRequiredResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMultipleSimultaneousPatternpropertiesAreValidatedResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postMultipleTypesCanBeSpecifiedInAnArrayResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNestedAllofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNestedAnyofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNestedItemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNestedOneofToCheckValidationSemanticsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNonAsciiPatternWithAdditionalpropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNonInterferenceAcrossCombinedSchemasResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNotMoreComplexSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNotMultipleTypesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNotResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNulCharactersInStringsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNullTypeMatchesOnlyTheNullObjectResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postNumberTypeMatchesNumbersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postObjectPropertiesValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postObjectTypeMatchesObjectsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postOneofComplexTypesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postOneofResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postOneofWithBaseSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postOneofWithEmptySchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postOneofWithRequiredResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPatternIsNotAnchoredResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPatternValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPatternpropertiesValidatesPropertiesMatchingARegexResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPatternpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPrefixitemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertiesWithEscapedCharactersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertyNamedRefThatIsNotAReferenceResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postPropertynamesValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRegexFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRelativeJsonPointerFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRequiredDefaultValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRequiredValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRequiredWithEmptyArrayResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postRequiredWithEscapedCharactersResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postSimpleEnumValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postSingleDependencyResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postSmallMultipleOfLargeIntegerResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postStringTypeMatchesStringsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postTimeFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postTypeArrayObjectOrNullResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postTypeArrayOrObjectResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postTypeAsArrayWithOneItemResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluateditemsAsSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluateditemsDependsOnMultipleNestedContainsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluateditemsWithItemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluateditemsWithNullInstanceElementsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluatedpropertiesNotAffectedByPropertynamesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluatedpropertiesSchemaResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUniqueitemsFalseValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUniqueitemsFalseWithAnArrayOfItemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUniqueitemsValidationResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUniqueitemsWithAnArrayOfItemsResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUriFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUriReferenceFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUriTemplateFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postUuidFormatResponseBodyForContentTypes/post/servers/0",
                "paths//responseBody/postValidateAgainstCorrectBranchThenVsElseResponseBodyForContentTypes/post/servers/0",
            ],
            f"{key_prefix}/{used_index}"
        )
        try:
            server = self.server_info[server_info_key]
        except KeyError as ex:
            raise ex
        return server.url
