# coding: utf-8

"""
    openapi 3.1.0 sample spec
    sample spec for testing openapi functionality, built from json schema tests for draft2020-12  # noqa: E501
    The version of the OpenAPI document: 0.0.1
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

import unittest

import unit_test_api
from unit_test_api.components.schema.non_ascii_pattern_with_additionalproperties import NonAsciiPatternWithAdditionalproperties
from unit_test_api.configurations import schema_configuration


class TestNonAsciiPatternWithAdditionalproperties(unittest.TestCase):
    """NonAsciiPatternWithAdditionalproperties unit test stubs"""
    configuration = schema_configuration.SchemaConfiguration(
        disabled_json_schema_keywords={'format'}
    )

    def test_matching_the_pattern_is_valid_passes(self):
        # matching the pattern is valid
        NonAsciiPatternWithAdditionalproperties.validate(
            {
                "ármányos":
                    2,
            },
            configuration=self.configuration
        )

    def test_not_matching_the_pattern_is_invalid_fails(self):
        # not matching the pattern is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            NonAsciiPatternWithAdditionalproperties.validate(
                {
                    "élmény":
                        2,
                },
                configuration=self.configuration
            )


if __name__ == '__main__':
    unittest.main()
