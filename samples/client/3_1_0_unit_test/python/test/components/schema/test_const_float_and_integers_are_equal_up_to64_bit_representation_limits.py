# coding: utf-8

"""
    openapi 3.1.0 sample spec
    sample spec for testing openapi functionality, built from json schema tests for draft2020-12  # noqa: E501
    The version of the OpenAPI document: 0.0.1
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

import unittest

import unit_test_api
from unit_test_api.components.schema.const_float_and_integers_are_equal_up_to64_bit_representation_limits import ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits
from unit_test_api.configurations import schema_configuration


class TestConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits(unittest.TestCase):
    """ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits unit test stubs"""
    configuration = schema_configuration.SchemaConfiguration(
        disabled_json_schema_keywords={'format'}
    )

    def test_integer_is_valid_passes(self):
        # integer is valid
        ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits.validate(
            9007199254740992,
            configuration=self.configuration
        )

    def test_integer_minus_one_is_invalid_fails(self):
        # integer minus one is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits.validate(
                9007199254740991,
                configuration=self.configuration
            )

    def test_float_is_valid_passes(self):
        # float is valid
        ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits.validate(
            9.007199254740992E15,
            configuration=self.configuration
        )

    def test_float_minus_one_is_invalid_fails(self):
        # float minus one is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstFloatAndIntegersAreEqualUpTo64BitRepresentationLimits.validate(
                9.007199254740991E15,
                configuration=self.configuration
            )


if __name__ == '__main__':
    unittest.main()
