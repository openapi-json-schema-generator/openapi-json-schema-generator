# coding: utf-8

"""
    openapi 3.1.0 sample spec
    sample spec for testing openapi functionality, built from json schema tests for draft2020-12  # noqa: E501
    The version of the OpenAPI document: 0.0.1
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

import unittest

import unit_test_api
from unit_test_api.components.schema.const_with0_does_not_match_other_zero_like_types import ConstWith0DoesNotMatchOtherZeroLikeTypes
from unit_test_api.configurations import schema_configuration


class TestConstWith0DoesNotMatchOtherZeroLikeTypes(unittest.TestCase):
    """ConstWith0DoesNotMatchOtherZeroLikeTypes unit test stubs"""
    configuration = schema_configuration.SchemaConfiguration(
        disabled_json_schema_keywords={'format'}
    )

    def test_empty_array_is_invalid_fails(self):
        # empty array is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
                [
                ],
                configuration=self.configuration
            )

    def test_integer_zero_is_valid_passes(self):
        # integer zero is valid
        ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
            0,
            configuration=self.configuration
        )

    def test_float_zero_is_valid_passes(self):
        # float zero is valid
        ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
            0.0,
            configuration=self.configuration
        )

    def test_empty_object_is_invalid_fails(self):
        # empty object is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
                {
                },
                configuration=self.configuration
            )

    def test_empty_string_is_invalid_fails(self):
        # empty string is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
                "",
                configuration=self.configuration
            )

    def test_false_is_invalid_fails(self):
        # false is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            ConstWith0DoesNotMatchOtherZeroLikeTypes.validate(
                False,
                configuration=self.configuration
            )


if __name__ == '__main__':
    unittest.main()
