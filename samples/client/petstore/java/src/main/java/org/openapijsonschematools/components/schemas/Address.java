package org.openapijsonschematools.components.schemas;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.openapijsonschematools.configurations.SchemaConfiguration;
import org.openapijsonschematools.schemas.IntJsonSchema;
import org.openapijsonschematools.schemas.validation.FrozenMap;
import org.openapijsonschematools.schemas.validation.JsonSchema;

public class Address {
    // nest classes so all schemas and input/output classes can be public
    
    
    public class AdditionalProperties extends IntJsonSchema {}
    
    
    public static class AddressMap extends FrozenMap<String, Object> {
        AddressMap(FrozenMap<? extends String, ?> m) {
            super(m);
        }
        public static AddressMap of(Map<String, Object> arg, SchemaConfiguration configuration) {
            return Address1.validate(arg, configuration);
        }
    }    
    
    public class Address1 extends JsonSchema {
        /*
        NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
        Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
    
        Do not edit the class manually.
        */
        public static final LinkedHashSet<Class<?>> type = new LinkedHashSet<>(Set.of(
            FrozenMap.class
        ));
        static final Class<?> additionalProperties = AdditionalProperties.class;
        protected static AddressMap getMapOutputInstance(FrozenMap<? extends String, ?> arg) {
            return new AddressMap(arg);
        }
        public static AddressMap validate(Map<String, Object> arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(Address1.class, arg, configuration);
        }
    }
}
