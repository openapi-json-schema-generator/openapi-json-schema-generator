package org.openapijsonschematools.components.schemas;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapijsonschematools.configurations.SchemaConfiguration;
import org.openapijsonschematools.schemas.validation.FrozenList;
import org.openapijsonschematools.schemas.validation.JsonSchema;

public class ArrayWithValidationsInItems {
    // nest classes so all schemas and input/output classes can be public
    
    
    public class Items extends JsonSchema {
        public static final LinkedHashSet<Class<?>> type = new LinkedHashSet<>(Set.of(
            Integer.class,
            Long.class,
            Float.class,
            Double.class
        ));
        public static final String format = "int64";
        public static Long validate(Integer arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(Items.class, Long.valueOf(arg), configuration);
        }
        
        public static Long validate(Float arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(Items.class, Long.parseLong(arg.toString()), configuration);
        }
        
        public static Long validate(Long arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(Items.class, arg, configuration);
        }
        
        public static Long validate(Double arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(Items.class, Long.parseLong(arg.toString()), configuration);
        }
    }    
    
    public static class ArrayWithValidationsInItemsList extends FrozenList<Object> {
        ArrayWithValidationsInItemsList(FrozenList<Object> m) {
            super(m);
        }
    }    
    
    public class ArrayWithValidationsInItems1 extends JsonSchema {
        /*
        NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
        Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
    
        Do not edit the class manually.
        */
        public static final LinkedHashSet<Class<?>> type = new LinkedHashSet<>(Set.of(
            FrozenList.class
        ));
        public static final Class<?> items = Items.class;
        protected static ArrayWithValidationsInItemsList getListOutputInstance(FrozenList<Object> arg) {
            return new ArrayWithValidationsInItemsList(arg);
        }
        public static ArrayWithValidationsInItemsList validate(List<Object> arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(ArrayWithValidationsInItems1.class, arg, configuration);
        }
    }}
