package org.openapijsonschematools.components.schemas;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.openapijsonschematools.configurations.SchemaConfiguration;
import org.openapijsonschematools.schemas.FrozenList;
import org.openapijsonschematools.schemas.FrozenMap;
import org.openapijsonschematools.schemas.JsonSchema;

public class AdditionalPropertiesWithArrayOfEnums {
    // nest classes so all schemas and input/output classes can be public
    
    
    public static class AdditionalPropertiesTuple extends FrozenList<Object> {
        AdditionalPropertiesTuple(FrozenList<Object> m) {
            super(m);
        }
    }    
    
    public class AdditionalProperties implements JsonSchema {
        static final LinkedHashSet<Class<?>> type = new LinkedHashSet<>(Set.of(
            FrozenList.class
        ));
        static final Class<?> items = EnumClass.EnumClass1.class;
        protected static AdditionalPropertiesTuple getListOutputInstance(FrozenList<Object> arg) {
            return new AdditionalPropertiesTuple(arg);
        }
        public static <U extends FrozenList> U validate(List<Object> arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(AdditionalProperties.class, arg, configuration);
        }
    }    
    
    public static class AdditionalPropertiesWithArrayOfEnumsMap extends FrozenMap<String, Object> {
        AdditionalPropertiesWithArrayOfEnumsMap(FrozenMap<? extends String, ?> m) {
            super(m);
        }
        public static AdditionalPropertiesWithArrayOfEnumsMap of(Map<String, Object> arg, SchemaConfiguration configuration) {
            return AdditionalPropertiesWithArrayOfEnums1.validate(arg, configuration);
        }
    }    
    
    public class AdditionalPropertiesWithArrayOfEnums1 implements JsonSchema {
        /*
        NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
        Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
    
        Do not edit the class manually.
        */
        static final LinkedHashSet<Class<?>> type = new LinkedHashSet<>(Set.of(
            FrozenMap.class
        ));
        static final Class<?> additionalProperties = AdditionalProperties.class;
        protected static AdditionalPropertiesWithArrayOfEnumsMap getMapOutputInstance(FrozenMap<? extends String, ?> arg) {
            return new AdditionalPropertiesWithArrayOfEnumsMap(arg);
        }
        public static <T extends FrozenMap> T validate(Map<String, Object> arg, SchemaConfiguration configuration) {
            return JsonSchema.validate(AdditionalPropertiesWithArrayOfEnums1.class, arg, configuration);
        }
    }
}
