# coding: utf-8

"""
    openapi 3.0.3 sample spec
    sample spec for testing openapi functionality, built from json schema tests for draft6  # noqa: E501
    The version of the OpenAPI document: 0.0.1
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

from __future__ import annotations
from unit_test_api.shared_imports.schema_imports import *



class EnumWithEscapedCharacters(
    schemas.StrSchema[schemas.T]
):
    """NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
    """


    @dataclasses.dataclass(frozen=True)
    class Schema_(metaclass=schemas.SingletonMeta):
        types: typing.FrozenSet[typing.Type] = frozenset({
            str,
        })
        enum_value_to_name: typing.Mapping[typing.Union[int, float, str, schemas.BoolClass, schemas.NoneClass], str] = dataclasses.field(
            default_factory=lambda: {
                "foo\nbar": "FOO_LINE_FEED_LF_BAR",
                "foo\rbar": "FOO_CARRIAGE_RETURN_CR_BAR",
            }
        )
    
    @schemas.classproperty
    def FOO_LINE_FEED_LF_BAR(cls) -> EnumWithEscapedCharacters[str]:
        return cls("foo\nbar") # type: ignore
    
    @schemas.classproperty
    def FOO_CARRIAGE_RETURN_CR_BAR(cls) -> EnumWithEscapedCharacters[str]:
        return cls("foo\rbar") # type: ignore
