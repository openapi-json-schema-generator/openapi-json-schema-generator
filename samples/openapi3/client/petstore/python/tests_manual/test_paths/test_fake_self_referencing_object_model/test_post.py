# coding: utf-8

"""


    Generated by: https://openapi-generator.tech
"""

import unittest
from unittest.mock import patch

import urllib3

import petstore_api
from petstore_api.paths.fake_self_referencing_object_model import post  # noqa: E501
from petstore_api import configuration, schemas, api_client

from ... import ApiTestMixin


class TestFakeSelfReferencingObjectModel(ApiTestMixin, unittest.TestCase):
    """
    FakeSelfReferencingObjectModel unit test stubs
        self referencing object model  # noqa: E501
    """
    def test_post(self):
        used_api_client = api_client.ApiClient()
        api = post.ApiForpost(api_client=used_api_client)

        with patch.object(urllib3.PoolManager, 'request') as mock_request:
            response_json = {
            }
            response_body = self.json_bytes(response_json)
            mock_request.return_value = self.response(response_body)
            body = post.RequestBody.Schemas.application_json(
                selfProp=post.RequestBody.Schemas.application_json({}),
                someAddProp=post.RequestBody.Schemas.application_json({})
            )
            expected_body = self.json_bytes(
                {
                    'selfProp': {},
                    'someAddProp': {}
                }
            )

            api_response = api.post(body=body)
            self.assert_pool_manager_request_called_with(
                mock_request,
                'http://petstore.swagger.io:80/v2/fake/selfReferencingObjectModel',
                body=expected_body,
                method='POST',
                content_type="application/json",
                accept_content_type='application/json'
            )

            assert isinstance(api_response.response, urllib3.HTTPResponse)
            assert isinstance(api_response.body, schemas.Unset)
            assert isinstance(api_response.headers, schemas.Unset)
            assert api_response.response.status == 200


if __name__ == '__main__':
    unittest.main()
