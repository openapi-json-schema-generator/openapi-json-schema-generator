# coding: utf-8

"""
    Generated by: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator
"""

from petstore_api.shared_imports.response_imports import *

from .content.application_json import schema as application_json_schema
from .headers import header_some_header


class Header:
    RequiredParams = typing_extensions.TypedDict(
        'RequiredParams',
        {
        }
    )
    OptionalParams = typing_extensions.TypedDict(
        'OptionalParams',
        {
            'someHeader': typing.Union[header_some_header.SomeHeader.schema, str],
        },
        total=False
    )


    class Params(RequiredParams, OptionalParams):
        pass


    parameters: typing.Dict[str, typing.Type[api_client.HeaderParameterWithoutName]] = {
        'someHeader': header_some_header.SomeHeader,
    }

@dataclasses.dataclass
class ApiSuccessInlineContentAndHeader(api_client.ApiResponse):
    response: urllib3.HTTPResponse
    body: application_json_schema.Schema[frozendict.frozendict]
    headers: Header.Params


class SuccessInlineContentAndHeader(api_client.OpenApiResponse[ApiSuccessInlineContentAndHeader]):
    response_cls = ApiSuccessInlineContentAndHeader


    class ApplicationJsonMediaType(api_client.MediaType):
        schema: typing_extensions.TypeAlias = application_json_schema.Schema[frozendict.frozendict]
    Content = typing_extensions.TypedDict(
        'Content',
        {
            'application/json': typing.Type[ApplicationJsonMediaType],
        }
    )
    content: Content = {
        'application/json': ApplicationJsonMediaType,
    }
    headers=Header.parameters
