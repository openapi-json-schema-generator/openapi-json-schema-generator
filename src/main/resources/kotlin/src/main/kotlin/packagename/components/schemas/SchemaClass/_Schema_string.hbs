

{{> src/main/kotlin/packagename/components/schemas/SchemaClass/_boxedClasses }}


class {{jsonPathPiece.pascalCase}} private constructor(): JsonSchema<{{jsonPathPiece.pascalCase}}Boxed>(
    JsonSchemaInfo()
    {{#if types}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_types }}
    {{/if}}
    {{#if format}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_format }}
    {{/if}}
    {{#neq maxLength null }}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_maxLength }}
    {{/neq}}
    {{#neq minLength null }}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_minLength }}
    {{/neq}}
    {{#if allOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_allOf }}
    {{/if}}
    {{#if anyOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_anyOf }}
    {{/if}}
    {{#if oneOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_oneOf }}
    {{/if}}
    {{#if not}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_not }}
    {{/if}}
    {{#if enumInfo}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_enum }}
    {{/if}}
    {{#if patternInfo}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_pattern }}
    {{/if}}
    {{#if defaultValue}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_default }}
    {{/if}}
    {{#if constInfo}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_const }}
    {{/if}}
    {{#if if_}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_if }}
    {{/if}}
    {{#if then}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_then }}
    {{/if}}
    {{#if else_}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_else }}
    {{/if}}
), StringSchemaValidator<{{jsonPathPiece.pascalCase}}BoxedString>{{#and enumInfo enumInfo.typeToValues.string}}, StringEnumValidator<String{{enumInfo.jsonPathPiece.pascalCase}}>{{/and}}{{#if defaultValue}}, DefaultValueMethod<String>{{/if}} {
{{#if componentModule}}
    /*
    NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
    {{#if description}}

    {{{description.original}}}
    {{/if}}
    */
{{/if}}

    companion object {
        @Volatile
        private var instance: {{jsonPathPiece.pascalCase}}? = null

        fun getInstance() =
            instance ?: synchronized(this) {
                instance ?: {{jsonPathPiece.pascalCase}}().also { instance = it }
            }
    }
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_validate_implementor }}
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_getNewInstanceObject_implementor }}
{{#if defaultValue}}
    @Throws(ValidationException::class)
    override fun defaultValue(): String {
        if (defaultValue is String) {
            return defaultValue
        }
        throw ValidationException("Invalid type stored in defaultValue")
    }
{{/if}}
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_validateAndBox }}
}