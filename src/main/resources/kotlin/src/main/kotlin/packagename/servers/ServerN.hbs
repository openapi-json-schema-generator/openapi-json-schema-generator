{{#with server}}
package {{{packageName}}}.{{subpackage}};

    {{#with variables}}
import {{{packageName}}}.configurations.JsonSchemaKeywordFlags;
import {{{packageName}}}.configurations.SchemaConfiguration;
import {{{packageName}}}.exceptions.ValidationException;
        {{#neq ../subpackage "servers"}}
import {{{packageName}}}.servers.ServerWithVariables;
        {{/neq}}
import {{{packageName}}}.schemas.validation.MapUtils;
import {{{packageName}}}.{{subpackage}}.{{containerJsonPathPiece.pascalCase}};

import java.util.AbstractMap;

class {{../jsonPathPiece.pascalCase}} : ServerWithVariables<{{containerJsonPathPiece.pascalCase}}.{{mapOutputJsonPathPiece.pascalCase}}> {
        {{#if ../description}}
    /*
    {{../description.original}}
    */
        {{/if}}
    private static {{containerJsonPathPiece.pascalCase}}.{{mapOutputJsonPathPiece.pascalCase}} getVariables() {
        try {
            return {{containerJsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}.getInstance().validate(
                MapUtils.makeMap(
        {{#each requiredProperties}}
                    new AbstractMap.SimpleEntry<>("{{{@key.original}}}", {{../containerJsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}.getInstance().defaultValue()){{#unless @last}},{{/unless}}
        {{/each}}
                ),
                new SchemaConfiguration(new JsonSchemaKeywordFlags.Builder().build())
            );
        } catch (ValidationException e) {
            throw new RuntimeException(e);
        }
    }

    public {{../jsonPathPiece.pascalCase}}() {
        super(
            "{{../url}}",
            getVariables()
        );
    }
    public {{../jsonPathPiece.pascalCase}}({{containerJsonPathPiece.pascalCase}}.{{mapOutputJsonPathPiece.pascalCase}} variables) {
        super("{{../url}}", variables);
    }
}
    {{else}}
        {{#neq ../subpackage "servers"}}
import {{{packageName}}}.servers.ServerWithoutVariables;
        {{/neq}}

class {{jsonPathPiece.pascalCase}} : ServerWithoutVariables("{{url}}") {
        {{#if ../description}}
    /*
    {{../description.original}}
    */
        {{/if}}
}
    {{/with}}
{{/with}}