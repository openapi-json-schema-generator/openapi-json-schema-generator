

{{> src/main/kotlin/packagename/components/schemas/SchemaClass/_boxedClasses }}


class {{jsonPathPiece.pascalCase}} private constructor(): JsonSchema<{{jsonPathPiece.pascalCase}}Boxed>(
    JsonSchemaInfo()
    {{#if types}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_types }}
    {{/if}}
    {{#if format}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_format }}
    {{/if}}
    {{#neq exclusiveMaximum null}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_exclusiveMaximum }}
    {{/neq}}
    {{#neq exclusiveMinimum null}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_exclusiveMinimum }}
    {{/neq}}
    {{#neq maximum null}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_maximum }}
    {{/neq}}
    {{#neq minimum null}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_minimum }}
    {{/neq}}
    {{#neq multipleOf null}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_multipleOf }}
    {{/neq}}
    {{#if allOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_allOf }}
    {{/if}}
    {{#if anyOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_anyOf }}
    {{/if}}
    {{#if oneOf}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_oneOf }}
    {{/if}}
    {{#if not}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_not }}
    {{/if}}
    {{#if enumInfo}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_enum }}
    {{/if}}
    {{#if defaultValue}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_default }}
    {{/if}}
    {{#if constInfo}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_const }}
    {{/if}}
    {{#if if_}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_if }}
    {{/if}}
    {{#if then}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_then }}
    {{/if}}
    {{#if else_}}
        {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_else }}
    {{/if}}
), {{#with enumInfo}}{{#if typeToValues.Integer}}IntegerEnumValidator<Integer{{jsonPathPiece.pascalCase}}>, {{/if}}{{#if typeToValues.Long}}LongEnumValidator<Long{{jsonPathPiece.pascalCase}}>, {{/if}}{{#if typeToValues.Float}}FloatEnumValidator<Float{{jsonPathPiece.pascalCase}}>, {{/if}}{{#if typeToValues.Double}}DoubleEnumValidator<Double{{jsonPathPiece.pascalCase}}>, {{/if}}{{/with}}NumberSchemaValidator<{{jsonPathPiece.pascalCase}}BoxedNumber> {
{{#if componentModule}}
    /*
    NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
    {{#if description}}

    {{{description.original}}}
    {{/if}}
    */
{{/if}}

    companion object {
        @Volatile
        private var instance: {{jsonPathPiece.pascalCase}}? = null

        fun getInstance() =
            instance ?: synchronized(this) {
                instance ?: {{jsonPathPiece.pascalCase}}().also { instance = it }
            }
    }
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_validate_implementor }}
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_getNewInstanceObject_implementor }}
    {{> src/main/kotlin/packagename/components/schemas/SchemaClass/_validateAndBox }}
}