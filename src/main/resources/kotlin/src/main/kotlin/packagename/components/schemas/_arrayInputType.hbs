{{#if listItemSchema}}

class {{arrayInputJsonPathPiece.pascalCase}} {
    // class to build List<{{#with listItemSchema}}{{> src/main/kotlin/packagename/components/schemas/types/schema_input_type sourceJsonPath=../jsonPath forceNull=true noExtends=true }}{{/with}}>
    private val list: MutableList<{{#with listItemSchema}}{{> src/main/kotlin/packagename/components/schemas/types/schema_input_type sourceJsonPath=../jsonPath forceNull=true noExtends=true }}{{/with}}>

    init {
        this.list = ArrayList()
    }

    {{#with listItemSchema}}
        {{#if refInfo }}
            {{#if refInfo.refModule}}
                {{#with getDeepestRef }}
    {{> src/main/kotlin/packagename/components/schemas/_arrayInputAddItem builderClass=../../arrayInputJsonPathPiece.pascalCase useContainer=true }}
                {{/with}}
            {{else}}
                {{! self reference} }}

    fun add(item: List<*>): {{../arrayInputJsonPathPiece.pascalCase}} {
        list.add(item)
        return this
    }
            {{/if}}
        {{else}}
    {{> src/main/kotlin/packagename/components/schemas/_arrayInputAddItem builderClass=../arrayInputJsonPathPiece.pascalCase }}
        {{/if}}
    {{else}}
    {{! todo handle this, 3.1.0 document use-case }}
    {{/with}}

    fun build(): List<{{#with listItemSchema}}{{> src/main/kotlin/packagename/components/schemas/types/schema_input_type sourceJsonPath=../jsonPath forceNull=true noExtends=true }}{{/with}}> {
        return list
    }
}
{{/if}}
