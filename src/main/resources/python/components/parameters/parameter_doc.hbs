{{#with parameter}}
{{#if componentModule}}
{{../packageName}}.components.parameters.{{jsonPathPiece.snakeCase}}
{{/if}}
{{#eq identifierPieces.size 0}}
{{> components/_helper_header_from_identifier_pieces identifierPieces=(append identifierPieces "Parameter" jsonPathPiece) }}
{{else}}
{{> components/_helper_header_from_identifier_pieces }}
{{/eq}}
{{#if description}}

{{headerSize}}# Description
{{description.originalWithBr}}
{{/if}}
{{#if refInfo}}
    {{#with getDeepestRef}}
        {{#if schema}}
            {{#with schema}}
{{> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append (newArray ) jsonPathPiece) }}
Ref Class | Input Type | Accessed Type | Description
--------- | ---------- | ------------- | ------------
[{{../../refInfo.refClass}}.schema](../../components/parameters/{{../../refInfo.refModule}}.md#{{> components/_helper_anchor_id identifierPieces=(append (newArray ) jsonPathPiece) }}) | {{> _helper_schema_python_types }} | {{> components/_helper_schema_accessed_types }} | {{#if ../../description}}{{../../description.originalWithBr}}{{/if}}
            {{/with}}
        {{else}}
            {{#each getDeepestRef.content}}
                {{#if @first}}

{{headerSize}}# Content Type To Schema
Content-Type | Schema
------------ | -------
                {{/if}}
"{{@key.original}}" | [content.{{@key.snakeCase}}.{{this.schema.jsonPathPiece.pascalCase}}](#{{> components/_helper_anchor_id identifierPieces=(append identifierPieces "content" @key this.schema.jsonPathPiece) }})
            {{/each}}
            {{#each getDeepestRef.content}}
                {{#with this.schema}}
{{> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append (newArray ) "content" ../@key jsonPathPiece) }}
Ref Class | Input Type | Accessed Type | Description
--------- | ---------- | ------------- | ------------
[{{../../../refInfo.refClass}}.content.{{../@key.snakeCase}}.schema](../../components/parameters/{{../../../refInfo.refModule}}.md#{{> components/_helper_anchor_id identifierPieces=(append (newArray ) "content" ../@key jsonPathPiece) }}) | {{> _helper_schema_python_types }} | {{> components/_helper_schema_accessed_types }} | {{#if ../../../description}}{{../../../description.originalWithBr}}{{/if}}
                {{/with}}
            {{/each}}
        {{/if}}
    {{/with}}
{{else}}
    {{#if schema}}
        {{#with schema}}

{{> components/schemas/schema_doc headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces jsonPathPiece) }}
        {{/with}}
    {{else}}
        {{#each content}}
            {{#if @first}}

{{headerSize}}# Content Type To Schema
Content-Type | Schema
------------ | -------
            {{/if}}
"{{@key.original}}" | [content.{{@key.snakeCase}}.{{this.schema.jsonPathPiece.pascalCase}}](#{{> components/_helper_anchor_id identifierPieces=(append identifierPieces "content" @key this.schema.jsonPathPiece) }})
        {{/each}}
        {{#each content}}
            {{#with this.schema}}
{{> components/schemas/schema_doc headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces "content" ../@key jsonPathPiece) }}
            {{/with}}
        {{/each}}
    {{/if}}
{{/if}}
{{#if componentModule}}

[[Back to top]](#top) {{> _helper_footer_links readmePath="../../../" parametersLink=true}}
{{/if}}
{{/with}}