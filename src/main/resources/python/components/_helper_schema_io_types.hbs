{{#eq types null}}dict, schemas.immutabledict, str, datetime.date, datetime.datetime, uuid.UUID, int, float, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader{{else}}{{#each types}}{{#unless @first}}, {{/unless}}{{#eq this "array"}}{{#if arrayInputJsonPathPiece}}[{{arrayInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces arrayInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) arrayInputJsonPathPiece) }}{{/if}}){{else}}list{{/if}}, {{#if arrayOutputJsonPathPiece}}[{{arrayOutputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces arrayOutputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) arrayOutputJsonPathPiece) }}{{/if}}){{else}}tuple{{/if}}{{/eq}}{{#eq this "object"}}{{#if mapInputJsonPathPiece}}[{{mapInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces mapInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) mapInputJsonPathPiece) }}{{/if}}){{else}}dict{{/if}}, {{#if mapOutputJsonPathPiece}}[{{mapOutputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces mapOutputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) mapOutputJsonPathPiece) }}{{/if}}){{else}}schemas.immutabledict{{/if}}{{/eq}}{{#eq this "null"}}None{{/eq}}{{#eq this "string" }}{{#neq ../format "binary"}}str{{/neq}}{{#eq ../format "date"}}, datetime.date{{/eq}}{{#eq ../format "date-time"}}, datetime.datetime{{/eq}}{{#eq ../format "uuid"}}, uuid.UUID{{/eq}}{{#eq ../format "binary"}}bytes, io.FileIO, io.BufferedReader{{/eq}}{{/eq}}{{#eq this "integer"}}int{{/eq}}{{#eq this "number"}}float, int{{/eq}}{{#eq this "boolean"}}bool{{/eq}}{{/each}}{{/eq}}