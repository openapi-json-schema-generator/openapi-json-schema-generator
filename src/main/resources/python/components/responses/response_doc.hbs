{{#with response}}
{{#if componentModule}}
{{packageName}}.components.responses.{{jsonPathPiece.snakeCase}}
{{/if}}
{{#eq identifierPieces.size 0}}
{{> components/_helper_header_from_identifier_pieces identifierPieces=(append identifierPieces "Response" jsonPathPiece) }}
{{else}}
{{> components/_helper_header_from_identifier_pieces }}
{{/eq}}
{{#if description}}

{{headerSize}}# Description
{{description.originalWithBr}}
{{/if}}

{{#if refInfo}}
{{headerSize}}# Ref Response Info
Ref Response | ApiResponse
------------ | -----------
[{{refInfo.refModule}}.{{refInfo.refClass}}]({{#with refInfo.ref}}{{docRoot}}{{pathFromDocRoot}}.md#{{jsonPathPiece.kebabCase}}{{/with}}) | [{{refInfo.refModule}}.ApiResponse]({{#with refInfo.ref}}{{docRoot}}{{pathFromDocRoot}}.md#apiresponse{{/with}})
{{else}}
{{> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces "ApiResponse") }}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
response | urllib3.HTTPResponse | Raw response |
    {{#if content}}
[body](#{{> components/_helper_anchor_id identifierPieces=(append identifierPieces "body") }}) | {{#if hasContentSchema}}{{#gt content.size 1}}typing.Union[{{/gt}}{{#each content}}{{#with this.schema}}{{> components/schemas/types/docschema_output_types identifierPieces=(append identifierPieces "content" ../@key jsonPathPiece) }}{{else}}Unset{{/with}}{{#unless @last}}, {{/unless}}{{/each}}{{#gt content.size 1}}]{{/gt}}{{else}}Unset{{/if}} | {{#unless hasContentSchema}}body was not defined{{/unless}} |
    {{else}}
body | Unset | body was not defined |
    {{/if}}
    {{#if headers}}
[headers](#headers) | [HeadersDict](#headers-headersdict) | |
    {{else}}
headers | Unset | headers were not defined |
    {{/if}}
    {{#if content}}

{{> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces "Body") }}
Content-Type | Schema
------------ | -------
        {{#each content}}
"{{@key.original}}" | {{#if this.schema}}[content.{{@key.snakeCase}}.{{this.schema.jsonPathPiece.pascalCase}}](#{{> components/_helper_anchor_id identifierPieces=(append identifierPieces "content" @key this.schema.jsonPathPiece) }}){{else}}no schema defined{{/if}}
        {{/each}}
    {{/if}}
    {{#and content hasContentSchema}}

{{headerSize}}# Body Details
        {{#each content}}
            {{#with this.schema}}
{{> components/schemas/schema_doc headerSize=(join headerSize "##" "") identifierPieces=(append identifierPieces "content" @key jsonPathPiece) }}
            {{/with}}
        {{/each}}
    {{/and}}
    {{#with headersObjectSchema}}

{{headerSize}}# Headers
{{> components/schemas/schema_doc schema=this headerSize=(join headerSize "##" "") identifierPieces=(append identifierPieces jsonPathPiece) }}
    {{/with}}
    {{#and headers hasInlineHeader}}

{{headerSize}}# Header Details
        {{#each headers}}
            {{#unless refInfo}}
{{> components/headers/header_doc header=this headerSize=(join headerSize "##" "") identifierPieces=(append identifierPieces "headers" jsonPathPiece) }}
            {{/unless}}
        {{/each}}
    {{/and}}
{{/if}}
{{#if componentModule}}

[[Back to top]](#top) {{> _helper_footer_links readmePath="../../../" responsesLink=true}}
{{/if}}
{{/with}}