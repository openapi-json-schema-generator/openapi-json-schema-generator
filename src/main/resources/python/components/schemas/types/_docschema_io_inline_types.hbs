{{#eq types null}}{{#if mapInputJsonPathPiece}}[{{mapInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces mapInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) mapInputJsonPathPiece) }}{{/if}}){{else}}dict{{/if}}, {{> components/schemas/types/_docschema_output_object }}, str, datetime.date, datetime.datetime, uuid.UUID, int, float, bool, None, {{#if arrayInputJsonPathPiece}}[{{arrayInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces arrayInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) arrayInputJsonPathPiece) }}{{/if}}){{else}}list{{/if}}, {{> components/schemas/types/_docschema_output_array }}, bytes, io.FileIO, io.BufferedReader{{else}}{{#each types}}{{#unless @first}}, {{/unless}}{{#eq this "array"}}{{#if arrayInputJsonPathPiece}}[{{arrayInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces arrayInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) arrayInputJsonPathPiece) }}{{/if}}){{else}}list{{/if}}, {{> components/schemas/types/_docschema_output_array }}{{/eq}}{{#eq this "object"}}{{#if mapInputJsonPathPiece}}[{{mapInputJsonPathPiece.camelCase}}](#{{#if identifierPieces}}{{> components/_helper_anchor_id identifierPieces=(append identifierPieces mapInputJsonPathPiece) }}{{else}}{{> components/_helper_anchor_id identifierPieces=(append (newArray ) mapInputJsonPathPiece) }}{{/if}}){{else}}dict{{/if}}, {{> components/schemas/types/_docschema_output_object }}{{/eq}}{{#eq this "null"}}None{{/eq}}{{#eq this "string" }}{{#neq ../format "binary"}}{{> components/schemas/types/__docschema_str_type }}{{/neq}}{{#eq ../format "date"}}, datetime.date{{/eq}}{{#eq ../format "date-time"}}, datetime.datetime{{/eq}}{{#eq ../format "uuid"}}, uuid.UUID{{/eq}}{{#eq ../format "binary"}}bytes, io.FileIO, io.BufferedReader{{/eq}}{{/eq}}{{#eq this "integer"}}{{> components/schemas/types/__docschema_int_type }}{{/eq}}{{#eq this "number"}}float, int{{/eq}}{{#eq this "boolean"}}{{> components/schemas/types/__docschema_bool_type }}{{/eq}}{{/each}}{{/eq}}{{#if optional}}, schemas.Unset{{/if}}