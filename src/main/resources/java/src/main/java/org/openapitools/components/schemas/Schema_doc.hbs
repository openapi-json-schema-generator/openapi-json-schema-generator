{{#with schema}}
{{#eq identifierPieces.size 0}}
{{> src/main/java/org/openapitools/components/_helper_header_from_identifier_pieces identifierPieces=(append identifierPieces jsonPathPiece) }}
{{else}}
{{> src/main/java/org/openapitools/components/_helper_header_from_identifier_pieces }}
{{/eq}}
{{#if componentModule}}
{{moduleLocation}}.java
{{else}}
    {{#unless isInline}}
{{moduleLocation}}.java
    {{/unless}}
{{/if}}
```
type: JsonSchema
```
{{#if description}}

{{headerSize}}# Description
{{description}}
{{/if}}

{{#if refInfo}}
{{headerSize}}# Ref Schema Info
Ref Schema | Input Type | Output Type
---------- | ---------- | -----------
{{> src/main/java/org/openapitools/components/schemas/__refclass_partial }} | {{!> components/schemas/types/docschema_io_types }} | {{!> components/schemas/types/docschema_output_types }}
{{else}}
{{headerSize}}# validate method
| Input Type | Return Type | Notes |
| ---------- | ----------- | ----- |
{{> src/main/java/org/openapitools/components/schemas/docschema_io_types }}
    {{#or properties additionalProperties requiredProperties}}

{{headerSize}}# Input Map Keys
```
        {{#eq types null}}
type: Map<String, Object>
        {{else}}
            {{#with ../mapValueSchema}}
type: Map<String, {{> src/main/java/org/openapitools/components/schemas/types/schema_input_type_segment sourceJsonPath=../../jsonPath forceNull=true }}>
            {{else}}
type: Map<String, Object>
            {{/with}}
        {{/eq}}
```
Key | Type |  Description | Notes
------------ | ------------- | ------------- | -------------
        {{#each requiredProperties}}
**{{@key.original}}** | {{!> components/schemas/types/docschema_io_types }} | {{#if description}}{{description}}{{/if}} |{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
        {{/each}}
        {{#each optionalProperties}}
**{{@key.original}}** | {{!> components/schemas/types/docschema_io_types }} | {{#if description}}{{description}}{{/if}} | [optional]{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
        {{/each}}
        {{#with additionalProperties}}
            {{#unless isBooleanSchemaFalse}}
                {{#if isBooleanSchemaTrue}}
**any_string_name** | {{!> _helper_schema_python_types }} | any string name can be used but the value must be the correct type{{#if description}} {{description}}{{/if}} | [optional]
            {{else}}
**any_string_name** | {{!> components/schemas/types/docschema_io_types }} | any string name can be used but the value must be the correct type{{#if description}} {{description}}{{/if}} | [optional]{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
                {{/if}}
            {{/unless}}
        {{else}}
**any_string_name** | Map, List, decimal.Decimal, float, int, String, LocalDate, ZonedDateTime, UUID, boolean, null, bytes, io.FileIO, io.BufferedReader, schemas.FileIO | any string name can be used but the value must be the correct type | [optional]
        {{/with}}

    {{#if mapOutputJsonPathPiece}}
{{> src/main/java/org/openapitools/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces mapOutputJsonPathPiece) }}
    {{else}}
{{headerSize}}# Output FrozenMap Keys
    {{/if}}
```
    {{#if mapValueSchema}}
base class: FrozenMap<String, {{#with mapValueSchema}}{{!> src/main/java/org/openapitools/components/schemas/types/schema_output_type endChar=">" }}{{/with}}
    {{else}}
base class: FrozenMap<String, Object>
    {{/if}}
```
        {{#or (and requiredProperties requiredProperties.hasValidKey) (and optionalProperties optionalProperties.hasValidKey) }}

{{headerSize}}## properties
Property | Type | Description | Notes
-------- | ---- | ----------- | -----
            {{#each requiredProperties}}
                {{#if @key.isValid}}
**{{@key.original}}** | {{!> components/schemas/types/docschema_output_types }} | {{#if description}}{{description}}{{/if}} |{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
                {{/if}}
            {{/each}}
            {{#each optionalProperties}}
                {{#if @key.isValid}}
**{{@key.original}}** | {{!> components/schemas/types/docschema_output_types optional=true }} | {{#if description}}{{description}}{{/if}} | [optional]{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
                {{/if}}
            {{/each}}
        {{/or}}

{{headerSize}}## methods
Method | Input Type | Return Type | Notes
------ | ---------- | ----------- | ------
from_dict_ | {{!> components/schemas/types/docschema_io_types types=(append (newArray ) "object") }} | {{!> components/schemas/types/docschema_output_types types=(append (newArray ) "object") }} | a constructor
        {{#or (and requiredProperties requiredProperties.hasInvalidKey) (and optionalProperties optionalProperties.hasInvalidKey) }}
&lowbar;&lowbar;getitem&lowbar;&lowbar; | String | {{#with mapValueSchema}}{{!> components/schemas/types/docschema_output_types }}{{else}}schemas.OUTPUT_BASE_TYPES{{/with}} | This model has invalid python names so this method is used under the hood when you access {{#each requiredProperties}}{{#unless @key.isValid}}instance["{{@key.original}}"], {{/unless}}{{/each}}{{#each optionalProperties}}{{#unless @key.isValid}}instance["{{@key.original}}"], {{/unless}}{{/each}}
        {{/or}}
        {{#with additionalProperties}}
            {{#unless isBooleanSchemaFalse}}
                {{#if isBooleanSchemaTrue}}
get_additional_property_ | String | {{!> components/schemas/types/docschema_output_types optional=true }} | provides type safety for additional properties
            {{else}}
get_additional_property_ | String | {{!> components/schemas/types/docschema_output_types optional=true }} | provides type safety for additional properties
                {{/if}}
            {{/unless}}
        {{else}}
get_additional_property_ | String | FrozenMap, FrozenList, float, int, String, boolean, null, bytes, schemas.FileIO, schemas.Unset | provides type safety for additional properties
        {{/with}}
    {{/or}}
    {{#if items}}

        {{#if arrayInputJsonPathPiece}}
{{!> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces arrayInputJsonPathPiece) }}
        {{else}}
{{headerSize}}# Input List Items
        {{/if}}
```
type: List<
    {{#with items}}
    {{!> components/schemas/types/schema_io_type paramName=false fullRefModule="" endChar="," rootClass=../arrayInputJsonPathPiece.camelCase }}
    ...
    {{/with}}
>
```
List Item Type | Description | Notes
-------------------- | ------------- | -------------
        {{#with items}}
{{!> components/schemas/types/docschema_io_types }} | {{#if description}}{{description}}{{/if}} |{{!> components/schemas/helpers/notes_msg defaultUser="server" }}
        {{/with}}

        {{#if arrayOutputJsonPathPiece}}
{{!> components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces arrayOutputJsonPathPiece) }}
        {{else}}
{{headerSize}}# Output FrozenList Items
        {{/if}}
```
base class: FrozenList<
        {{#with items}}
            {{#if refInfo.refClass}}
                {{#eq refModule null}}
                    {{! self reference }}
    {{!> components/schemas/types/schema_output_type mode="unprefixed" fullRefModule="" endChar="," selfReference=true }}
                {{else}}
    {{!> components/schemas/types/schema_output_type mode="unprefixed" fullRefModule="" endChar="," }}
                {{/eq}}
            {{else}}
    {{!> components/schemas/types/schema_output_type mode="unprefixed" fullRefModule="" endChar="," }}
            {{/if}}
        {{/with}}
    ...
>
```
{{headerSize}}## &lowbar;&lowbar;new&lowbar;&lowbar; method
Argument | Type
-------- | ------
arg      | {{!> components/schemas/types/docschema_io_types types=(append (newArray ) "array") }}
configuration | configurations.SchemaConfiguration

{{headerSize}}## methods
Method | Input Type | Return Type | Notes
------ | ---------- | ----------- | ------
&lowbar;&lowbar;getitem&lowbar;&lowbar; | int | {{#with items}}{{!> components/schemas/types/docschema_output_types }}{{else}}schemas.OUTPUT_BASE_TYPES{{/with}} |{{#with items}}{{!> components/schemas/helpers/notes_msg defaultUser="server" }}{{/with}} This method is used under the hood when instance[0] is called
    {{/if}}
    {{#or allOf anyOf oneOf not}}

{{headerSize}}# Composed Schemas (allOf/anyOf/oneOf/not)
    {{/or}}
    {{#if allOf}}
{{headerSize}}# allOf
Schema Class | Input Type | Return Type
------------ | ---------- | -----------
        {{#each allOf}}
{{#if refInfo.refClass}}{{!> components/schemas/__refclass_partial }}{{else}}[{{jsonPathPiece.camelCase}}](#{{!> components/_helper_anchor_id identifierPieces=(append identifierPieces jsonPathPiece.anchorPiece) }}){{/if}} | {{!> components/schemas/types/docschema_io_types }} | {{!> components/schemas/types/docschema_output_types }}
        {{/each}}
    {{/if}}
    {{#if anyOf}}
{{headerSize}}# anyOf
Schema Class | Input Type | Return Type
------------ | ---------- | -----------
        {{#each anyOf}}
{{#if refInfo.refClass}}{{!> components/schemas/__refclass_partial }}{{else}}[{{jsonPathPiece.camelCase}}](#{{!> components/_helper_anchor_id identifierPieces=(append identifierPieces jsonPathPiece.anchorPiece) }}){{/if}} | {{!> components/schemas/types/docschema_io_types }} | {{!> components/schemas/types/docschema_output_types }}
        {{/each}}
    {{/if}}
    {{#if oneOf}}
{{headerSize}}# oneOf
Schema Class | Input Type | Return Type
------------ | ---------- | -----------
        {{#each oneOf}}
{{#if refInfo.refClass}}{{!> components/schemas/__refclass_partial }}{{else}}[{{jsonPathPiece.camelCase}}](#{{!> components/_helper_anchor_id identifierPieces=(append identifierPieces jsonPathPiece.anchorPiece) }}){{/if}} | {{!> components/schemas/types/docschema_io_types }} | {{!> components/schemas/types/docschema_output_types }}
        {{/each}}
    {{/if}}
    {{#if not}}
{{headerSize}}# not
Schema Class | Input Type | Return Type
------------ | ---------- | -----------
        {{#with not}}
{{#if refInfo.refClass}}{{!> components/schemas/__refclass_partial }}{{else}}[{{jsonPathPiece.camelCase}}](#{{!> components/_helper_anchor_id identifierPieces=(append identifierPieces jsonPathPiece.anchorPiece) }}){{/if}} | {{!> components/schemas/types/docschema_io_types }} | {{!> components/schemas/types/docschema_output_types }}
        {{/with}}
    {{/if}}
{{/if}}
{{! Content after here is the deeper/referenced schemas }}
{{! required properties }}
{{#if requiredProperties}}
    {{#each requiredProperties}}
        {{#if this}}
            {{#unless refInfo.refClass}}
                {{#if isComplicated}}

{{!> components/schemas/schema_doc schema=this }}
                {{/if}}
            {{/unless}}
        {{/if}}
    {{/each}}
{{/if}}
{{! optional properties }}
{{#if optionalProperties}}
    {{#each optionalProperties}}
        {{#unless refInfo.refClass}}
            {{#if isComplicated}}

{{!> components/schemas/schema_doc schema=this }}
            {{/if}}
        {{/unless}}
    {{/each}}
{{/if}}
{{! additionalProperties }}
{{#if additionalProperties}}
    {{#with additionalProperties}}
        {{#unless isBooleanSchemaFalse}}
            {{#unless isBooleanSchemaTrue}}
                {{#unless refInfo.refClass}}
                    {{#if isComplicated}}

{{!> components/schemas/schema_doc schema=this }}
                    {{/if}}
                {{/unless}}
            {{/unless}}
        {{/unless}}
    {{/with}}
{{/if}}
{{! items }}
{{#if items}}
    {{#with items}}
        {{#unless refInfo.refClass}}
            {{#if isComplicated}}

{{!> components/schemas/schema_doc schema=this }}
            {{/if}}
        {{/unless}}
    {{/with}}
{{/if}}
{{! allOf/anyOf/oneOf/not }}
{{#if allOf}}
    {{#each allOf}}
        {{#unless refInfo.refClass}}

{{!> components/schemas/schema_doc schema=this }}
        {{/unless}}
    {{/each}}
{{/if}}
{{#if anyOf}}
    {{#each anyOf}}
        {{#unless refInfo.refClass}}

{{!> components/schemas/schema_doc schema=this }}
        {{/unless}}
    {{/each}}
{{/if}}
{{#if oneOf}}
    {{#each oneOf}}
        {{#unless refInfo.refClass}}

{{!> components/schemas/schema_doc schema=this }}
        {{/unless}}
    {{/each}}
{{/if}}
{{#if not}}
    {{#with not}}
        {{#unless refInfo.refClass}}

{{!> components/schemas/schema_doc schema=this }}
        {{/unless}}
    {{/with}}
{{/if}}
{{#if componentModule}}

[[Back to top]](#top) {{> _helper_footer_links readmePath="../../../" schemasLink=true}}
{{/if}}
{{/with}}