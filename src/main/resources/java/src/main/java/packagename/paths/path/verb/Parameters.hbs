{{#with parametersInfo}}
package {{packageName}}.{{subpackage}};

    {{#with pathItemParameters}}
        {{#each allParameters}}
import {{packageName}}.{{subpackage}}.{{jsonPathPiece.pascalCase}};
        {{/each}}
    {{/with}}
    {{#with parameters}}
        {{#each allParameters}}
import {{packageName}}.{{subpackage}}.{{jsonPathPiece.pascalCase}};
        {{/each}}
    {{/with}}
    {{#if pathParametersSchema}}
import {{packageName}}.parameter.PathSerializer;
    {{/if}}
    {{#if headerParametersSchema}}
import {{packageName}}.parameter.HeadersSerializer;
    {{/if}}
    {{#if queryParametersSchema}}
import {{packageName}}.parameter.QuerySerializer;
    {{/if}}
    {{#if cookieParametersSchema}}
import {{packageName}}.parameter.CookieSerializer;
    {{/if}}

import java.util.Map;
import java.util.AbstractMap;

public class {{jsonPathPiece.pascalCase}} {
    {{#if pathParametersSchema}}

    public static class PathParametersSerializer extends PathSerializer {
        public PathParametersSerializer() {
            super(
                Map.ofEntries(
                {{#each pathParameters}}
                    new AbstractMap.SimpleEntry<>("{{#with getSelfOrDeepestRef}}{{{name}}}{{/with}}", new {{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1()){{#unless @last}},{{/unless}}
                {{/each}}
                )
            );
        }
    }
    {{/if}}
    {{#if queryParametersSchema}}

    public static class QueryParametersSerializer extends QuerySerializer {
        public QueryParametersSerializer() {
            super(
                Map.ofEntries(
                {{#each queryParameters}}
                    new AbstractMap.SimpleEntry<>("{{#with getSelfOrDeepestRef}}{{{name}}}{{/with}}", new {{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1()){{#unless @last}},{{/unless}}
                {{/each}}
                )
            );
        }
    }
    {{/if}}
    {{#if headerParametersSchema}}

    public static class HeaderParametersSerializer extends HeadersSerializer {
        public HeaderParametersSerializer() {
            super(
                Map.ofEntries(
                {{#each headerParameters}}
                    new AbstractMap.SimpleEntry<>("{{#with getSelfOrDeepestRef}}{{{name}}}{{/with}}", new {{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1()){{#unless @last}},{{/unless}}
                {{/each}}
                )
            );
        }
    }
    {{/if}}
    {{#if cookieParametersSchema}}

    public static class CookieParametersSerializer extends CookieSerializer {
        public CookieParametersSerializer() {
            super(
                Map.ofEntries(
                {{#each cookieParameters}}
                    new AbstractMap.SimpleEntry<>("{{#with getSelfOrDeepestRef}}{{{name}}}{{/with}}", new {{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1()){{#unless @last}},{{/unless}}
                {{/each}}
                )
            );
        }
    }
    {{/if}}
}
{{/with}}