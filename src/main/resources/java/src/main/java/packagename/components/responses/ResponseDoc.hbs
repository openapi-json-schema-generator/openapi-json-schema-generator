{{#with response}}
{{#eq identifierPieces.size 0}}
{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces identifierPieces=(append identifierPieces jsonPathPiece) }}
{{else}}
{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces }}
{{/eq}}
{{#if componentModule}}
{{jsonPathPiece.pascalCase}}.java
{{/if}}

{{#if refInfo}}
public class {{jsonPathPiece.pascalCase}} extends [{{refInfo.refClass}}](../../components/responses/{{refInfo.refClass}}.md)

A class (extended from the $ref class) that contains necessary nested response classes
- a class that extends ResponseDeserializer and is used to deserialize responses

{{headerSize}}# Nested Class Summary
| Modifier and Type | Class and Description |
| ----------------- | --------------------- |
| static class | [{{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1](#{{> src/main/java/packagename/components/_helper_anchor_id identifierPieces=(append identifierPieces (join jsonPathPiece.kebabCase "1" "")) }})<br> class that deserializes responses |

{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces (join jsonPathPiece.pascalCase "1" "")) }}
public static class {{jsonPathPiece.pascalCase}}1 extends [{{refInfo.refClass}}1](../../components/responses/{{refInfo.refClass}}.md#{{refInfo.ref.jsonPathPiece.kebabCase}}1)<br>

a class that deserializes responses, extended from the $ref class

{{else}}
public class {{jsonPathPiece.pascalCase}}

A class that contains necessary nested response classes
{{#if hasContentSchema}}
- SealedMediaType, a sealed interface which contains all the schema/encoding info for each contentType
- records which implement SealedMediaType, the concrete media types
- SealedResponseBody, a sealed interface which contains all the contentType/schema types
- records which implement SealedResponseBody, the concrete response body types
{{/if}}
- a class that extends ResponseDeserializer and is used to deserialize responses

{{headerSize}}# Nested Class Summary
| Modifier and Type | Class and Description |
| ----------------- | --------------------- |
{{#if hasContentSchema}}
| sealed interface | [{{jsonPathPiece.pascalCase}}.SealedMediaType](#{{> src/main/java/packagename/components/_helper_anchor_id identifierPieces=(append identifierPieces "sealedmediatype") }})<br>media type sealed interface |
    {{#each content}}
| record | [{{jsonPathPiece.pascalCase}}.{{@key.pascalCase}}MediaType](#{{@key.kebabCase}}mediatype)<br>record storing schema + encoding for a specific contentType |
    {{/each}}
| sealed interface | [{{jsonPathPiece.pascalCase}}.SealedResponseBody](#{{> src/main/java/packagename/components/_helper_anchor_id identifierPieces=(append identifierPieces "sealedresponsebody") }})<br>response body sealed interface |
    {{#each content}}
| record | [{{jsonPathPiece.pascalCase}}.{{@key.pascalCase}}ResponseBody](#{{@key.kebabCase}}responsebody)<br>implements sealed interface to store response body |
    {{/each}}
{{/if}}
| static class | [{{jsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}1](#{{> src/main/java/packagename/components/_helper_anchor_id identifierPieces=(append identifierPieces (join jsonPathPiece.kebabCase "1" "")) }})<br>class that deserializes responses |
{{#if hasContentSchema}}

{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces "SealedMediaType") }}
public sealed interface SealedMediaType<br>
permits<br>
    {{#each content}}
[{{@key.pascalCase}}MediaType](#{{@key.kebabCase}}mediatype){{#unless @last}},{{/unless}}
    {{/each}}

sealed interface that stores schema and encoding info
    {{#each content}}

{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces (join @key.pascalCase "MediaType" "")) }}
public record {{@key.pascalCase}}MediaType<br>
implements [SealedMediaType](#sealedmediatype), MediaType<{{#with this}}{{#with schema}}[{{containerJsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}]({{docRoot}}{{pathFromDocRoot}}.md#{{jsonPathPiece.kebabCase}}){{/with}}{{/with}}, Void>

class storing schema info for a specific contentType

{{headerSize}}## Constructor Summary
| Constructor and Description |
| --------------------------- |
| {{@key.pascalCase}}MediaType()<br>Creates an instance |

{{headerSize}}## Method Summary
| Modifier and Type | Method and Description |
| ----------------- | ---------------------- |
| {{#with this}}{{#with schema}}[{{containerJsonPathPiece.pascalCase}}.{{jsonPathPiece.pascalCase}}]({{docRoot}}{{pathFromDocRoot}}.md#{{jsonPathPiece.kebabCase}}){{/with}}{{/with}} | schema()<br>the schema for this MediaType |
| Void | encoding()<br>the encoding info |
    {{/each}}

{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces "SealedResponseBody") }}
public sealed interface SealedResponseBody<br>
permits<br>
    {{#each content}}
[{{@key.pascalCase}}ResponseBody](#{{@key.kebabCase}}responsebody){{#unless @last}},{{/unless}}
    {{/each}}

sealed interface that stores response body

    {{#each content}}
{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces (join @key.pascalCase "ResponseBody" "")) }}
public record {{@key.pascalCase}}ResponseBody<br>
implements [SealedResponseBody](#sealedresponsebody)

A record class to store response body for contentType="{{{@key.original}}}"

{{headerSize}}## Constructor Summary
| Constructor and Description |
| --------------------------- |
| {{@key.pascalCase}}ResponseBody({{#with this}}{{#with schema}}{{containerJsonPathPiece.pascalCase}}.{{#with getSelfOrDeepestRef}}{{> src/main/java/packagename/components/schemas/_sealedClassName forDocs=true }}{{/with}}{{/with}}{{/with}} body)<br>Creates an instance |

{{headerSize}}## Method Summary
| Modifier and Type | Method and Description |
| ----------------- | ---------------------- |
| {{#with this}}{{#with schema}}{{containerJsonPathPiece.pascalCase}}.{{#with getSelfOrDeepestRef}}{{> src/main/java/packagename/components/schemas/_sealedClassName forDocs=true }}{{/with}}{{/with}}{{/with}} | body()<br>returns the body passed in in the constructor |
    {{/each}}
{{/if}}

{{> src/main/java/packagename/components/_helper_header_from_identifier_pieces headerSize=(join headerSize "#" "") identifierPieces=(append identifierPieces (join jsonPathPiece.pascalCase "1" "")) }}
public static class {{jsonPathPiece.pascalCase}}1<br>
extends ResponseDeserializer<{{#if hasContentSchema}}[SealedResponseBody](#sealedresponsebody){{else}}Void{{/if}}, {{#with headersObjectSchema}}[{{containerJsonPathPiece.pascalCase}}.{{mapOutputJsonPathPiece.pascalCase}}]({{docRoot}}{{pathFromDocRoot}}.md#{{mapOutputJsonPathPiece.kebabCase}}){{else}}Void{{/with}}, {{#if hasContentSchema}}[SealedMediaType](#sealedmediatype){{else}}Void{{/if}}>

a class that deserializes responses

{{headerSize}}## Constructor Summary
| Constructor and Description |
| --------------------------- |
| {{jsonPathPiece.pascalCase}}1()<br>Creates an instance |

{{headerSize}}## Field Summary
| Modifier and Type | Field and Description |
| ----------------- | --------------------- |
    {{#if hasContentSchema}}
| Map<String, [SealedMediaType](#sealedmediatype)> | content =  Map.ofEntries(<br>{{#each content}}&nbsp;&nbsp;&nbsp;&nbsp;new AbstractMap.SimpleEntry<>("{{{@key.original}}}", new [{{@key.pascalCase}}MediaType](#{{@key.kebabCase}}mediatype)()){{#unless @last}},{{/unless}}<br>{{/each}})<br>the contentType to schema info |
    {{else}}
| Map<String, Void> | content =  MapUtils.makeMap(<br>{{#each content}}&nbsp;&nbsp;&nbsp;&nbsp;new AbstractMap.SimpleEntry<>("{{{@key.original}}}", null){{#unless @last}},{{/unless}}<br>{{/each}})<br>the contentType to schema info |
    {{/if}}

{{headerSize}}## Method Summary
| Modifier and Type | Method and Description |
| ----------------- | ---------------------- |
| ApiResponse<{{#if hasContentSchema}}[SealedResponseBody](#sealedresponsebody){{else}}Void{{/if}}, {{#with headersObjectSchema}}[{{containerJsonPathPiece.pascalCase}}.{{mapOutputJsonPathPiece.pascalCase}}]({{docRoot}}{{pathFromDocRoot}}.md#{{mapOutputJsonPathPiece.kebabCase}}){{else}}Void{{/with}}> | deserialize(HttpResponse<byte[]> response, SchemaConfiguration configuration)<br>called by endpoint when deserialize responses |
{{/if}}
{{#if componentModule}}

[[Back to top]](#top) {{> _helper_footer_links readmePath="../../../" responsesLink=true}}
{{/if}}
{{/with}}