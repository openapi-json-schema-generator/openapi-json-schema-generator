
@Override
public @Nullable Object getNewInstance(@Nullable Object arg, List<Object> pathToItem, PathToSchemasMap pathToSchemas) throws InvalidTypeException {
{{#if types}}
    {{#each types}}
        {{#if @first}}
    if (arg {{#eq this "null"}}== null{{/eq}}{{#eq this "boolean"}}instanceof Boolean{{/eq}}{{#or (eq this "integer") (eq this "number")}}instanceof Number{{/or}}{{#eq this "string" }}instanceof String{{/eq}}{{#eq this "array"}}instanceof List{{/eq}}{{#eq this "object"}}instanceof Map{{/eq}}) {
        {{else}}
    } else if (arg {{#eq this "null"}}== null{{/eq}}{{#eq this "boolean"}}instanceof Boolean{{/eq}}{{#or (eq this "integer") (eq this "number")}}instanceof Number{{/or}}{{#eq this "string" }}instanceof String{{/eq}}{{#eq this "array"}}instanceof List{{/eq}}{{#eq this "object"}}instanceof Map{{/eq}}) {
        {{/if}}
        {{#eq this "null"}}
        return getNewInstance((Void) null, pathToItem, pathToSchemas);
        {{/eq}}
        {{#eq this "boolean"}}
        boolean boolArg = (Boolean) arg;
        return getNewInstance(boolArg, pathToItem, pathToSchemas);
        {{/eq}}
        {{#or (eq this "integer") (eq this "number")}}
        return getNewInstance((Number) arg, pathToItem, pathToSchemas);
        {{/or}}
        {{#eq this "string" }}
        return getNewInstance((String) arg, pathToItem, pathToSchemas);
        {{/eq}}
        {{#eq this "array"}}
        return getNewInstance((List<?>) arg, pathToItem, pathToSchemas);
        {{/eq}}
        {{#eq this "object"}}
        return getNewInstance((Map<?, ?>) arg, pathToItem, pathToSchemas);
        {{/eq}}
        {{#if @last}}
    }
        {{/if}}
    {{/each}}
{{else}}
    if (arg == null) {
        return getNewInstance((Void) null, pathToItem, pathToSchemas);
    } else if (arg instanceof Boolean) {
        boolean boolArg = (Boolean) arg;
        return getNewInstance(boolArg, pathToItem, pathToSchemas);
    } else if (arg instanceof Number) {
        return getNewInstance((Number) arg, pathToItem, pathToSchemas);
    } else if (arg instanceof String) {
        return getNewInstance((String) arg, pathToItem, pathToSchemas);
    } else if (arg instanceof List) {
        return getNewInstance((List<?>) arg, pathToItem, pathToSchemas);
    } else if (arg instanceof Map) {
        return getNewInstance((Map<?, ?>) arg, pathToItem, pathToSchemas);
    }
{{/if}}
    throw new InvalidTypeException("Invalid input type="+getClass(arg)+". It can't be instantiated by this schema");
}
