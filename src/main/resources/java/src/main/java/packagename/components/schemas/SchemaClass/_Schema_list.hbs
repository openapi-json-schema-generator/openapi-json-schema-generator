

public static class {{jsonPathPiece.camelCase}} extends JsonSchema implements SchemaListValidator<{{#with items}}{{> src/main/java/packagename/components/schemas/types/schema_input_type sourceJsonPath=../jsonPath forceNull=true }}{{/with}}, {{#with items}}{{> src/main/java/packagename/components/schemas/types/schema_cast_type sourceJsonPath=../jsonPath forceNull=true }}{{/with}}, {{arrayOutputJsonPathPiece.camelCase}}> {
{{#if componentModule}}
    /*
    NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
    {{#if description}}

    {{{description.original}}}
    {{/if}}
    */
{{/if}}
    private static {{jsonPathPiece.camelCase}} instance;
    {{#each keywords}}
        {{#if @first}}
    protected {{../jsonPathPiece.camelCase}}() {
        super(new LinkedHashMap<>(Map.ofEntries(
        {{/if}}
        {{#eq this "type"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_types }}
        {{/eq}}
        {{#eq this "items"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_items }}
        {{/eq}}
        {{#eq this "maxItems"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_maxItems }}
        {{/eq}}
        {{#eq this "minItems"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_minItems }}
        {{/eq}}
        {{#eq this "allOf"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_allOf }}
        {{/eq}}
        {{#eq this "anyOf"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_anyOf }}
        {{/eq}}
        {{#eq this "oneOf"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_oneOf }}
        {{/eq}}
        {{#eq this "not"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_not }}
        {{/eq}}
        {{#eq this "uniqueItems"}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_uniqueItems }}
        {{/eq}}
        {{#if @last}}
        )));
    }
        {{/if}}
    {{/each}}

    public static {{jsonPathPiece.camelCase}} getInstance() {
        if (instance == null) {
            instance = new {{jsonPathPiece.camelCase}}();
        }
        return instance;
    }
    {{#if prefixItems}}
    {{!> components/schemas/schema_cls/_prefix_items }}
    {{/if}}
    {{#if contains}}
    {{!> components/schemas/schema_cls/_contains }}
    {{/if}}
    {{#if if_}}
    {{!> components/schemas/schema_cls/_if }}
    {{/if}}
    {{#if then}}
    {{!> components/schemas/schema_cls/_then }}
    {{/if}}
    {{#if else_}}
    {{!> components/schemas/schema_cls/_else }}
    {{/if}}
    {{#if unevaluatedItems}}
    {{!> components/schemas/schema_cls/_unevaluated_items }}
    {{/if}}
    {{> src/main/java/packagename/components/schemas/SchemaClass/_validate_implementor }}
    {{> src/main/java/packagename/components/schemas/SchemaClass/_castToAllowedTypesObject_implementor }}
}