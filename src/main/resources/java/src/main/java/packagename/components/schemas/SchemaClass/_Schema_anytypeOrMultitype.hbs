

{{#if types}}
public static class {{jsonPathPiece.camelCase}} extends JsonSchema implements {{#with enumInfo}}{{#if typeToValues.null}}NullEnumValidator<Null{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.boolean}}BooleanEnumValidator<Boolean{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.string}}StringEnumValidator<String{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Integer}}IntegerEnumValidator<Integer{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Long}}LongEnumValidator<Long{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Float}}FloatEnumValidator<Float{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Double}}DoubleEnumValidator<Double{{jsonPathPiece.camelCase}}>, {{/if}}{{/with}}{{#each types}}{{#eq this "null"}}NullSchemaValidator{{else}}{{#eq this "boolean"}}BooleanSchemaValidator{{else}}{{#or (eq this "number") (eq this "integer")}}NumberSchemaValidator{{else}}{{#eq this "string"}}StringSchemaValidator{{else}}{{#eq this "array"}}ListSchemaValidator<{{#if arrayOutputJsonPathPiece}}{{arrayOutputJsonPathPiece.camelCase}}{{else}}FrozenList<@Nullable Object>{{/if}}>{{else}}{{#eq this "object"}}MapSchemaValidator<{{#if mapOutputJsonPathPiece}}{{mapOutputJsonPathPiece.camelCase}}{{else}}FrozenMap<{{#with mapValueSchema}}{{> src/main/java/packagename/components/schemas/types/schema_output_type sourceJsonPath=../jsonPath forceNull=true }}{{else}}@Nullable Object{{/with}}>{{/if}}>{{/eq}}{{/eq}}{{/eq}}{{/or}}{{/eq}}{{/eq}}{{#unless @last}}, {{/unless}}{{/each}} {
{{else}}
public static class {{jsonPathPiece.camelCase}} extends JsonSchema implements {{#with enumInfo}}{{#if typeToValues.null}}NullEnumValidator<Null{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.boolean}}BooleanEnumValidator<Boolean{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.string}}StringEnumValidator<String{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Integer}}IntegerEnumValidator<Integer{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Long}}LongEnumValidator<Long{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Float}}FloatEnumValidator<Float{{jsonPathPiece.camelCase}}>, {{/if}}{{#if typeToValues.Double}}DoubleEnumValidator<Double{{jsonPathPiece.camelCase}}>, {{/if}}{{/with}}NullSchemaValidator, BooleanSchemaValidator, NumberSchemaValidator, StringSchemaValidator, ListSchemaValidator<{{#if arrayOutputJsonPathPiece}}{{arrayOutputJsonPathPiece.camelCase}}{{else}}FrozenList<@Nullable Object>{{/if}}>, MapSchemaValidator<{{#if mapOutputJsonPathPiece}}{{mapOutputJsonPathPiece.camelCase}}{{else}}FrozenMap<{{#with mapValueSchema}}{{> src/main/java/packagename/components/schemas/types/schema_output_type sourceJsonPath=../jsonPath forceNull=true }}{{else}}@Nullable Object{{/with}}>{{/if}}> {
{{/if}}
{{#if componentModule}}
    /*
    NOTE: This class is auto generated by OpenAPI JSON Schema Generator.
    Ref: https://github.com/openapi-json-schema-tools/openapi-json-schema-generator

    Do not edit the class manually.
    {{#if description}}

    {{{description.original}}}
    {{/if}}
    */
{{/if}}
    private static @Nullable {{jsonPathPiece.camelCase}} instance = null;

    protected {{../jsonPathPiece.camelCase}}() {
        super(new JsonSchemaInfo()
        {{#if types}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_types }}
        {{/if}}
        {{#if format}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_format }}
        {{/if}}
        {{#if items}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_items }}
        {{/if}}
        {{#if properties}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_properties }}
        {{/if}}
        {{#if requiredProperties}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_required }}
        {{/if}}
        {{#neq exclusiveMaximum null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_exclusiveMaximum }}
        {{/neq}}
        {{#neq exclusiveMinimum null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_exclusiveMinimum }}
        {{/neq}}
        {{#neq maximum null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_maximum }}
        {{/neq}}
        {{#neq minimum null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_minimum }}
        {{/neq}}
        {{#neq multipleOf null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_multipleOf }}
        {{/neq}}
        {{#neq maxItems null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_maxItems }}
        {{/neq}}
        {{#neq minItems null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_minItems }}
        {{/neq}}
        {{#neq maxLength null }}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_maxLength }}
        {{/neq}}
        {{#neq minLength null }}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_minLength }}
        {{/neq}}
        {{#neq maxProperties null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_maxProperties }}
        {{/neq}}
        {{#neq minProperties null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_minProperties }}
        {{/neq}}
        {{#if additionalProperties}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_additionalProperties }}
        {{/if}}
        {{#if allOf}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_allOf }}
        {{/if}}
        {{#if anyOf}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_anyOf }}
        {{/if}}
        {{#if oneOf}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_oneOf }}
        {{/if}}
        {{#if not}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_not }}
        {{/if}}
        {{#neq uniqueItems null}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_uniqueItems }}
        {{/neq}}
        {{#if enumInfo}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_enum }}
        {{/if}}
        {{#if patternInfo}}
            {{> src/main/java/packagename/components/schemas/SchemaClass/_pattern }}
        {{/if}}
        );
    }

    public static {{jsonPathPiece.camelCase}} getInstance() {
        if (instance == null) {
            instance = new {{jsonPathPiece.camelCase}}();
        }
        return instance;
    }
{{#if constInfo}}
    {{!> components/schemas/schema_cls/_const }}
{{/if}}
{{#if prefixItems}}
    {{!> components/schemas/schema_cls/_prefix_items }}
{{/if}}
{{#if contains}}
    {{!> components/schemas/schema_cls/_contains }}
{{/if}}
{{#if hasDiscriminatorWithNonEmptyMapping}}
    {{!> components/schemas/schema_cls/_discriminator }}
{{/if}}
{{#if if_}}
    {{!> components/schemas/schema_cls/_if }}
{{/if}}
{{#if then}}
    {{!> components/schemas/schema_cls/_then }}
{{/if}}
{{#if else_}}
    {{!> components/schemas/schema_cls/_else }}
{{/if}}
{{#if dependentRequired}}
    {{!> components/schemas/schema_cls/_dependent_required }}
{{/if}}
{{#if dependentSchemas}}
    {{!> components/schemas/schema_cls/_dependent_schemas }}
{{/if}}
{{#if propertyNames}}
    {{!> components/schemas/schema_cls/_property_names }}
{{/if}}
{{#if patternProperties}}
    {{!> components/schemas/schema_cls/_pattern_properties }}
{{/if}}
{{#if unevaluatedProperties}}
    {{!> components/schemas/schema_cls/_unevaluated_properties }}
{{/if}}
{{#if unevaluatedItems}}
    {{!> components/schemas/schema_cls/_unevaluated_items }}
{{/if}}
{{#or mapOutputJsonPathPiece arrayOutputJsonPathPiece}}
{{/or}}
    {{> src/main/java/packagename/components/schemas/SchemaClass/_validate_implementor }}
    {{> src/main/java/packagename/components/schemas/SchemaClass/_getNewInstanceObject_implementor }}
}