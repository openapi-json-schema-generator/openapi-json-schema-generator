package {{{packageName}}}.schemas;

import {{{packageName}}}.schemas.validation.JsonSchema;
import {{{packageName}}}.schemas.validation.KeywordEntry;
import {{{packageName}}}.schemas.validation.PathToSchemasMap;
import {{{packageName}}}.schemas.validation.TypeValidator;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class NullJsonSchema extends JsonSchema<Void, Void, Void> {
    public NullJsonSchema() {
        super(new LinkedHashMap<>(Map.ofEntries(
                new KeywordEntry("type", new TypeValidator(Set.of(Void.class)))
        )));
    }

    @Override
    protected Void castToAllowedTypes(Void arg, List<Object> pathToItem, Set<List<Object>> pathSet) {
        return castToAllowedVoidTypes(arg, pathToItem, pathSet);
    }

    @Override
    protected Void getNewInstance(Void arg, List<Object> pathToItem, PathToSchemasMap pathToSchemas) {
        return null;
    }
}

