

{{#if mapValueSchema}}
public static class {{mapOutputJsonPathPiece.camelCase}} extends FrozenMap<{{#with mapValueSchema}}{{> src/main/java/packagename/components/schemas/types/schema_output_type forceNull=true }}{{/with}}> {
    protected {{mapOutputJsonPathPiece.camelCase}}(FrozenMap<{{#with mapValueSchema}}{{> src/main/java/packagename/components/schemas/types/schema_output_type forceNull=true }}{{/with}}> m) {
        super(m);
    }
{{else}}
public static class {{mapOutputJsonPathPiece.camelCase}} extends FrozenMap<Object> {
    protected {{mapOutputJsonPathPiece.camelCase}}(FrozenMap<Object> m) {
        super(m);
    }
{{/if}}
    {{#if requiredProperties}}
    public static final Set<String> requiredKeys = Set.of(
        {{#each requiredProperties}}
        "{{{@key.original}}}"{{#unless @last}},{{/unless}}
        {{/each}}
    );
    {{else}}
    public static final Set<String> requiredKeys = Set.of();
    {{/if}}
    {{#if optionalProperties}}
    public static final Set<String> optionalKeys = Set.of(
        {{#each optionalProperties}}
        "{{{@key.original}}}"{{#unless @last}},{{/unless}}
        {{/each}}
    );
    {{else}}
    public static final Set<String> optionalKeys = Set.of();
    {{/if}}
    {{#eq optionalProperties null}}
        {{#eq requiredProperties null}}
            {{#if additionalProperties}}
                {{#if additionalProperties.isBooleanSchemaFalse}}
    // map with no key value pairs
                {{/if}}
            {{/if}}
        {{/eq}}
    {{/eq}}
        {{#if mapValueSchema}}
    public static {{mapOutputJsonPathPiece.camelCase}} of(Map<String, {{#with mapValueSchema}}{{> src/main/java/packagename/components/schemas/types/schema_input_type sourceJsonPath=../jsonPath forceNull=true }}{{/with}}> arg, SchemaConfiguration configuration) throws ValidationException {
        return {{jsonPathPiece.camelCase}}.getInstance().validate(arg, configuration);
    }
        {{else}}
    public static {{mapOutputJsonPathPiece.camelCase}} of(Map<String, Object> arg, SchemaConfiguration configuration) throws ValidationException {
        return {{jsonPathPiece.camelCase}}.getInstance().validate(arg, configuration);
    }
        {{/if}}
    {{> src/main/java/packagename/components/schemas/_objectOutputProperties }}
}
