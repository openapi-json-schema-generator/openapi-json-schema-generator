{{#eq wildcardCodeResponses.size 1}}
    {{#each wildcardCodeResponses}}
Wildcard{{jsonPathPiece.pascalCase}}Deserializer castDeserializer = (Wildcard{{jsonPathPiece.pascalCase}}Deserializer) wildcardCodeDeserializer;
var deserializedResponse = castDeserializer.deserialize(response, configuration);
return new Endpoint{{jsonPathPiece.pascalCase}}(response, deserializedResponse.body());
    {{/each}}
{{else}}
    {{#each wildcardCodeResponses}}
        {{#if @first}}
if (wildcardCodeDeserializer instanceof Wildcard{{jsonPathPiece.pascalCase}}Deserializer castDeserializer) {
        {{else}}
            {{#if @last}}
} else {
    Wildcard{{jsonPathPiece.pascalCase}}Deserializer castDeserializer = (Wildcard{{jsonPathPiece.pascalCase}}Deserializer) wildcardCodeDeserializer;
            {{else}}
} else if (wildcardCodeDeserializer instanceof Wildcard{{jsonPathPiece.pascalCase}}Deserializer castDeserializer) {
            {{/if}}
        {{/if}}
    var deserializedResponse = castDeserializer.deserialize(response, configuration);
        {{#if nonErrorWildcardStatusCodes}}
            {{#contains nonErrorWildcardStatusCodes @key }}
    return new Endpoint{{jsonPathPiece.pascalCase}}(response, deserializedResponse.body());
            {{else}}
    throw new {{jsonPathPiece.pascalCase}}.ResponseApiException(
        "Received error statusCode response from server",
        response,
        deserializedResponse
    );
            {{/contains}}
        {{else}}
    throw new {{jsonPathPiece.pascalCase}}.ResponseApiException(
        "Received error statusCode response from server",
        response,
        deserializedResponse
    );
        {{/if}}
    {{/each}}
}
{{/eq}}