openapi: 3.1.0
servers:
- url: https://someserver.com/v1
info:
  title: openapi 3.1.0 sample spec
  version: 0.0.1
  description: sample spec for testing openapi functionality, built from json schema
    tests for draft2020-12
tags:
- name: operation.requestBody
- name: path.post
- name: contentType_json
- name: response.content.contentType.schema
- name: additionalProperties
- name: allOf
- name: anyOf
- name: const
- name: contains
- name: dependentRequired
- name: dependentSchemas
- name: enum
- name: format
- name: items
- name: maxContains
- name: maximum
- name: maxItems
- name: maxLength
- name: maxProperties
- name: minimum
- name: minContains
- name: minItems
- name: minLength
- name: minProperties
- name: multipleOf
- name: not
- name: oneOf
- name: pattern
- name: patternProperties
- name: prefixItems
- name: properties
- name: propertyNames
- name: $ref
- name: required
- name: type
- name: unevaluatedItems
- name: unevaluatedProperties
- name: uniqueItems
paths:
  /requestBody/postNonAsciiPatternWithAdditionalpropertiesRequestBody:
    post:
      operationId: postNonAsciiPatternWithAdditionalpropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonAsciiPatternWithAdditionalproperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NonAsciiPatternWithAdditionalproperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postNonAsciiPatternWithAdditionalpropertiesResponseBodyForContentTypes:
    post:
      operationId: postNonAsciiPatternWithAdditionalpropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonAsciiPatternWithAdditionalproperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NonAsciiPatternWithAdditionalproperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAdditionalpropertiesWithSchemaRequestBody:
    post:
      operationId: postAdditionalpropertiesWithSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalpropertiesWithSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalpropertiesWithSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postAdditionalpropertiesWithSchemaResponseBodyForContentTypes:
    post:
      operationId: postAdditionalpropertiesWithSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalpropertiesWithSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalpropertiesWithSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAdditionalpropertiesCanExistByItselfRequestBody:
    post:
      operationId: postAdditionalpropertiesCanExistByItselfRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalpropertiesCanExistByItself'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalpropertiesCanExistByItself'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postAdditionalpropertiesCanExistByItselfResponseBodyForContentTypes:
    post:
      operationId: postAdditionalpropertiesCanExistByItselfResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalpropertiesCanExistByItself'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalpropertiesCanExistByItself'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAdditionalpropertiesAreAllowedByDefaultRequestBody:
    post:
      operationId: postAdditionalpropertiesAreAllowedByDefaultRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalpropertiesAreAllowedByDefault'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalpropertiesAreAllowedByDefault'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postAdditionalpropertiesAreAllowedByDefaultResponseBodyForContentTypes:
    post:
      operationId: postAdditionalpropertiesAreAllowedByDefaultResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalpropertiesAreAllowedByDefault'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalpropertiesAreAllowedByDefault'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAdditionalpropertiesDoesNotLookInApplicatorsRequestBody:
    post:
      operationId: postAdditionalpropertiesDoesNotLookInApplicatorsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalpropertiesDoesNotLookInApplicators'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalpropertiesDoesNotLookInApplicators'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postAdditionalpropertiesDoesNotLookInApplicatorsResponseBodyForContentTypes:
    post:
      operationId: postAdditionalpropertiesDoesNotLookInApplicatorsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalpropertiesDoesNotLookInApplicators'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalpropertiesDoesNotLookInApplicators'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAdditionalpropertiesWithNullValuedInstancePropertiesRequestBody:
    post:
      operationId: postAdditionalpropertiesWithNullValuedInstancePropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalpropertiesWithNullValuedInstanceProperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalpropertiesWithNullValuedInstanceProperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - additionalProperties
  /responseBody/postAdditionalpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes:
    post:
      operationId: postAdditionalpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalpropertiesWithNullValuedInstanceProperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalpropertiesWithNullValuedInstanceProperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - additionalProperties
  /requestBody/postAllofRequestBody:
    post:
      operationId: postAllofRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Allof'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Allof'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofResponseBodyForContentTypes:
    post:
      operationId: postAllofResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allof'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Allof'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofWithBaseSchemaRequestBody:
    post:
      operationId: postAllofWithBaseSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofWithBaseSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofWithBaseSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofWithBaseSchemaResponseBodyForContentTypes:
    post:
      operationId: postAllofWithBaseSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofWithBaseSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofWithBaseSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofSimpleTypesRequestBody:
    post:
      operationId: postAllofSimpleTypesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofSimpleTypes'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofSimpleTypes'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofSimpleTypesResponseBodyForContentTypes:
    post:
      operationId: postAllofSimpleTypesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofSimpleTypes'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofSimpleTypes'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofWithOneEmptySchemaRequestBody:
    post:
      operationId: postAllofWithOneEmptySchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofWithOneEmptySchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofWithOneEmptySchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofWithOneEmptySchemaResponseBodyForContentTypes:
    post:
      operationId: postAllofWithOneEmptySchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofWithOneEmptySchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofWithOneEmptySchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofWithTwoEmptySchemasRequestBody:
    post:
      operationId: postAllofWithTwoEmptySchemasRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofWithTwoEmptySchemas'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofWithTwoEmptySchemas'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofWithTwoEmptySchemasResponseBodyForContentTypes:
    post:
      operationId: postAllofWithTwoEmptySchemasResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofWithTwoEmptySchemas'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofWithTwoEmptySchemas'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofWithTheFirstEmptySchemaRequestBody:
    post:
      operationId: postAllofWithTheFirstEmptySchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofWithTheFirstEmptySchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofWithTheFirstEmptySchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofWithTheFirstEmptySchemaResponseBodyForContentTypes:
    post:
      operationId: postAllofWithTheFirstEmptySchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofWithTheFirstEmptySchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofWithTheFirstEmptySchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofWithTheLastEmptySchemaRequestBody:
    post:
      operationId: postAllofWithTheLastEmptySchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofWithTheLastEmptySchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofWithTheLastEmptySchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofWithTheLastEmptySchemaResponseBodyForContentTypes:
    post:
      operationId: postAllofWithTheLastEmptySchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofWithTheLastEmptySchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofWithTheLastEmptySchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postNestedAllofToCheckValidationSemanticsRequestBody:
    post:
      operationId: postNestedAllofToCheckValidationSemanticsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedAllofToCheckValidationSemantics'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NestedAllofToCheckValidationSemantics'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postNestedAllofToCheckValidationSemanticsResponseBodyForContentTypes:
    post:
      operationId: postNestedAllofToCheckValidationSemanticsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedAllofToCheckValidationSemantics'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NestedAllofToCheckValidationSemantics'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAllofCombinedWithAnyofOneofRequestBody:
    post:
      operationId: postAllofCombinedWithAnyofOneofRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllofCombinedWithAnyofOneof'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AllofCombinedWithAnyofOneof'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - allOf
  /responseBody/postAllofCombinedWithAnyofOneofResponseBodyForContentTypes:
    post:
      operationId: postAllofCombinedWithAnyofOneofResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllofCombinedWithAnyofOneof'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AllofCombinedWithAnyofOneof'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - allOf
  /requestBody/postAnyofRequestBody:
    post:
      operationId: postAnyofRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Anyof'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Anyof'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - anyOf
  /responseBody/postAnyofResponseBodyForContentTypes:
    post:
      operationId: postAnyofResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anyof'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Anyof'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - anyOf
  /requestBody/postAnyofWithBaseSchemaRequestBody:
    post:
      operationId: postAnyofWithBaseSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyofWithBaseSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AnyofWithBaseSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - anyOf
  /responseBody/postAnyofWithBaseSchemaResponseBodyForContentTypes:
    post:
      operationId: postAnyofWithBaseSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyofWithBaseSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AnyofWithBaseSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - anyOf
  /requestBody/postAnyofComplexTypesRequestBody:
    post:
      operationId: postAnyofComplexTypesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyofComplexTypes'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AnyofComplexTypes'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - anyOf
  /responseBody/postAnyofComplexTypesResponseBodyForContentTypes:
    post:
      operationId: postAnyofComplexTypesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyofComplexTypes'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AnyofComplexTypes'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - anyOf
  /requestBody/postAnyofWithOneEmptySchemaRequestBody:
    post:
      operationId: postAnyofWithOneEmptySchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyofWithOneEmptySchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AnyofWithOneEmptySchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - anyOf
  /responseBody/postAnyofWithOneEmptySchemaResponseBodyForContentTypes:
    post:
      operationId: postAnyofWithOneEmptySchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyofWithOneEmptySchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AnyofWithOneEmptySchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - anyOf
  /requestBody/postNestedAnyofToCheckValidationSemanticsRequestBody:
    post:
      operationId: postNestedAnyofToCheckValidationSemanticsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedAnyofToCheckValidationSemantics'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NestedAnyofToCheckValidationSemantics'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - anyOf
  /responseBody/postNestedAnyofToCheckValidationSemanticsResponseBodyForContentTypes:
    post:
      operationId: postNestedAnyofToCheckValidationSemanticsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedAnyofToCheckValidationSemantics'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NestedAnyofToCheckValidationSemantics'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - anyOf
  /requestBody/postConstNulCharactersInStringsRequestBody:
    post:
      operationId: postConstNulCharactersInStringsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstNulCharactersInStrings'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ConstNulCharactersInStrings'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - const
  /responseBody/postConstNulCharactersInStringsResponseBodyForContentTypes:
    post:
      operationId: postConstNulCharactersInStringsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstNulCharactersInStrings'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ConstNulCharactersInStrings'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - const
  /requestBody/postContainsKeywordValidationRequestBody:
    post:
      operationId: postContainsKeywordValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainsKeywordValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ContainsKeywordValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - contains
  /responseBody/postContainsKeywordValidationResponseBodyForContentTypes:
    post:
      operationId: postContainsKeywordValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainsKeywordValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ContainsKeywordValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - contains
  /requestBody/postItemsContainsRequestBody:
    post:
      operationId: postItemsContainsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsContains'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ItemsContains'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - contains
  /responseBody/postItemsContainsResponseBodyForContentTypes:
    post:
      operationId: postItemsContainsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsContains'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ItemsContains'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - contains
  /requestBody/postContainsWithNullInstanceElementsRequestBody:
    post:
      operationId: postContainsWithNullInstanceElementsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainsWithNullInstanceElements'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ContainsWithNullInstanceElements'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - contains
  /responseBody/postContainsWithNullInstanceElementsResponseBodyForContentTypes:
    post:
      operationId: postContainsWithNullInstanceElementsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainsWithNullInstanceElements'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ContainsWithNullInstanceElements'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - contains
  /requestBody/postSingleDependencyRequestBody:
    post:
      operationId: postSingleDependencyRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleDependency'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/SingleDependency'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentRequired
  /responseBody/postSingleDependencyResponseBodyForContentTypes:
    post:
      operationId: postSingleDependencyResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDependency'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/SingleDependency'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentRequired
  /requestBody/postEmptyDependentsRequestBody:
    post:
      operationId: postEmptyDependentsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyDependents'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EmptyDependents'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentRequired
  /responseBody/postEmptyDependentsResponseBodyForContentTypes:
    post:
      operationId: postEmptyDependentsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyDependents'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EmptyDependents'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentRequired
  /requestBody/postMultipleDependentsRequiredRequestBody:
    post:
      operationId: postMultipleDependentsRequiredRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleDependentsRequired'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MultipleDependentsRequired'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentRequired
  /responseBody/postMultipleDependentsRequiredResponseBodyForContentTypes:
    post:
      operationId: postMultipleDependentsRequiredResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleDependentsRequired'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MultipleDependentsRequired'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentRequired
  /requestBody/postDependentSchemasSingleDependencyRequestBody:
    post:
      operationId: postDependentSchemasSingleDependencyRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependentSchemasSingleDependency'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DependentSchemasSingleDependency'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentSchemas
  /responseBody/postDependentSchemasSingleDependencyResponseBodyForContentTypes:
    post:
      operationId: postDependentSchemasSingleDependencyResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentSchemasSingleDependency'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DependentSchemasSingleDependency'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentSchemas
  /requestBody/postDependentSchemasDependenciesWithEscapedCharactersRequestBody:
    post:
      operationId: postDependentSchemasDependenciesWithEscapedCharactersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependentSchemasDependenciesWithEscapedCharacters'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DependentSchemasDependenciesWithEscapedCharacters'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentSchemas
  /responseBody/postDependentSchemasDependenciesWithEscapedCharactersResponseBodyForContentTypes:
    post:
      operationId: postDependentSchemasDependenciesWithEscapedCharactersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentSchemasDependenciesWithEscapedCharacters'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DependentSchemasDependenciesWithEscapedCharacters'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentSchemas
  /requestBody/postDependentSchemasDependentSubschemaIncompatibleWithRootRequestBody:
    post:
      operationId: postDependentSchemasDependentSubschemaIncompatibleWithRootRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependentSchemasDependentSubschemaIncompatibleWithRoot'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DependentSchemasDependentSubschemaIncompatibleWithRoot'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - dependentSchemas
  /responseBody/postDependentSchemasDependentSubschemaIncompatibleWithRootResponseBodyForContentTypes:
    post:
      operationId: postDependentSchemasDependentSubschemaIncompatibleWithRootResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentSchemasDependentSubschemaIncompatibleWithRoot'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DependentSchemasDependentSubschemaIncompatibleWithRoot'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - dependentSchemas
  /requestBody/postSimpleEnumValidationRequestBody:
    post:
      operationId: postSimpleEnumValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleEnumValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/SimpleEnumValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postSimpleEnumValidationResponseBodyForContentTypes:
    post:
      operationId: postSimpleEnumValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleEnumValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/SimpleEnumValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumsInPropertiesRequestBody:
    post:
      operationId: postEnumsInPropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumsInProperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumsInProperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumsInPropertiesResponseBodyForContentTypes:
    post:
      operationId: postEnumsInPropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumsInProperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumsInProperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumWithEscapedCharactersRequestBody:
    post:
      operationId: postEnumWithEscapedCharactersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumWithEscapedCharacters'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumWithEscapedCharacters'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumWithEscapedCharactersResponseBodyForContentTypes:
    post:
      operationId: postEnumWithEscapedCharactersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumWithEscapedCharacters'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumWithEscapedCharacters'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumWithFalseDoesNotMatch0RequestBody:
    post:
      operationId: postEnumWithFalseDoesNotMatch0RequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumWithFalseDoesNotMatch0'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumWithFalseDoesNotMatch0'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumWithFalseDoesNotMatch0ResponseBodyForContentTypes:
    post:
      operationId: postEnumWithFalseDoesNotMatch0ResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumWithFalseDoesNotMatch0'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumWithFalseDoesNotMatch0'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumWithTrueDoesNotMatch1RequestBody:
    post:
      operationId: postEnumWithTrueDoesNotMatch1RequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumWithTrueDoesNotMatch1'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumWithTrueDoesNotMatch1'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumWithTrueDoesNotMatch1ResponseBodyForContentTypes:
    post:
      operationId: postEnumWithTrueDoesNotMatch1ResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumWithTrueDoesNotMatch1'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumWithTrueDoesNotMatch1'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumWith0DoesNotMatchFalseRequestBody:
    post:
      operationId: postEnumWith0DoesNotMatchFalseRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumWith0DoesNotMatchFalse'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumWith0DoesNotMatchFalse'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumWith0DoesNotMatchFalseResponseBodyForContentTypes:
    post:
      operationId: postEnumWith0DoesNotMatchFalseResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumWith0DoesNotMatchFalse'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumWith0DoesNotMatchFalse'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEnumWith1DoesNotMatchTrueRequestBody:
    post:
      operationId: postEnumWith1DoesNotMatchTrueRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumWith1DoesNotMatchTrue'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EnumWith1DoesNotMatchTrue'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postEnumWith1DoesNotMatchTrueResponseBodyForContentTypes:
    post:
      operationId: postEnumWith1DoesNotMatchTrueResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumWith1DoesNotMatchTrue'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EnumWith1DoesNotMatchTrue'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postNulCharactersInStringsRequestBody:
    post:
      operationId: postNulCharactersInStringsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NulCharactersInStrings'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NulCharactersInStrings'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - enum
  /responseBody/postNulCharactersInStringsResponseBodyForContentTypes:
    post:
      operationId: postNulCharactersInStringsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NulCharactersInStrings'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NulCharactersInStrings'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - enum
  /requestBody/postEmailFormatRequestBody:
    post:
      operationId: postEmailFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/EmailFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postEmailFormatResponseBodyForContentTypes:
    post:
      operationId: postEmailFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/EmailFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIdnEmailFormatRequestBody:
    post:
      operationId: postIdnEmailFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdnEmailFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/IdnEmailFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIdnEmailFormatResponseBodyForContentTypes:
    post:
      operationId: postIdnEmailFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdnEmailFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/IdnEmailFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postRegexFormatRequestBody:
    post:
      operationId: postRegexFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegexFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RegexFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postRegexFormatResponseBodyForContentTypes:
    post:
      operationId: postRegexFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RegexFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIpv4FormatRequestBody:
    post:
      operationId: postIpv4FormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ipv4Format'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Ipv4Format'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIpv4FormatResponseBodyForContentTypes:
    post:
      operationId: postIpv4FormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ipv4Format'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Ipv4Format'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIpv6FormatRequestBody:
    post:
      operationId: postIpv6FormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ipv6Format'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Ipv6Format'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIpv6FormatResponseBodyForContentTypes:
    post:
      operationId: postIpv6FormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ipv6Format'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Ipv6Format'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIdnHostnameFormatRequestBody:
    post:
      operationId: postIdnHostnameFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdnHostnameFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/IdnHostnameFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIdnHostnameFormatResponseBodyForContentTypes:
    post:
      operationId: postIdnHostnameFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdnHostnameFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/IdnHostnameFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postHostnameFormatRequestBody:
    post:
      operationId: postHostnameFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostnameFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/HostnameFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postHostnameFormatResponseBodyForContentTypes:
    post:
      operationId: postHostnameFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostnameFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/HostnameFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postDateFormatRequestBody:
    post:
      operationId: postDateFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DateFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postDateFormatResponseBodyForContentTypes:
    post:
      operationId: postDateFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DateFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postDateTimeFormatRequestBody:
    post:
      operationId: postDateTimeFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DateTimeFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postDateTimeFormatResponseBodyForContentTypes:
    post:
      operationId: postDateTimeFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DateTimeFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postTimeFormatRequestBody:
    post:
      operationId: postTimeFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/TimeFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postTimeFormatResponseBodyForContentTypes:
    post:
      operationId: postTimeFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/TimeFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postJsonPointerFormatRequestBody:
    post:
      operationId: postJsonPointerFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPointerFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/JsonPointerFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postJsonPointerFormatResponseBodyForContentTypes:
    post:
      operationId: postJsonPointerFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonPointerFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/JsonPointerFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postRelativeJsonPointerFormatRequestBody:
    post:
      operationId: postRelativeJsonPointerFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelativeJsonPointerFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RelativeJsonPointerFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postRelativeJsonPointerFormatResponseBodyForContentTypes:
    post:
      operationId: postRelativeJsonPointerFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelativeJsonPointerFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RelativeJsonPointerFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIriFormatRequestBody:
    post:
      operationId: postIriFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IriFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/IriFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIriFormatResponseBodyForContentTypes:
    post:
      operationId: postIriFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IriFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/IriFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postIriReferenceFormatRequestBody:
    post:
      operationId: postIriReferenceFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IriReferenceFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/IriReferenceFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postIriReferenceFormatResponseBodyForContentTypes:
    post:
      operationId: postIriReferenceFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IriReferenceFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/IriReferenceFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postUriFormatRequestBody:
    post:
      operationId: postUriFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UriFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postUriFormatResponseBodyForContentTypes:
    post:
      operationId: postUriFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UriFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postUriReferenceFormatRequestBody:
    post:
      operationId: postUriReferenceFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriReferenceFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UriReferenceFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postUriReferenceFormatResponseBodyForContentTypes:
    post:
      operationId: postUriReferenceFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriReferenceFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UriReferenceFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postUriTemplateFormatRequestBody:
    post:
      operationId: postUriTemplateFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UriTemplateFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UriTemplateFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postUriTemplateFormatResponseBodyForContentTypes:
    post:
      operationId: postUriTemplateFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriTemplateFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UriTemplateFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postUuidFormatRequestBody:
    post:
      operationId: postUuidFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UuidFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postUuidFormatResponseBodyForContentTypes:
    post:
      operationId: postUuidFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UuidFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postDurationFormatRequestBody:
    post:
      operationId: postDurationFormatRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DurationFormat'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/DurationFormat'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - format
  /responseBody/postDurationFormatResponseBodyForContentTypes:
    post:
      operationId: postDurationFormatResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DurationFormat'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/DurationFormat'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - format
  /requestBody/postNestedItemsRequestBody:
    post:
      operationId: postNestedItemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedItems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NestedItems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - items
  /responseBody/postNestedItemsResponseBodyForContentTypes:
    post:
      operationId: postNestedItemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedItems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NestedItems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - items
  /requestBody/postItemsDoesNotLookInApplicatorsValidCaseRequestBody:
    post:
      operationId: postItemsDoesNotLookInApplicatorsValidCaseRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsDoesNotLookInApplicatorsValidCase'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ItemsDoesNotLookInApplicatorsValidCase'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - items
  /responseBody/postItemsDoesNotLookInApplicatorsValidCaseResponseBodyForContentTypes:
    post:
      operationId: postItemsDoesNotLookInApplicatorsValidCaseResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsDoesNotLookInApplicatorsValidCase'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ItemsDoesNotLookInApplicatorsValidCase'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - items
  /requestBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsRequestBody:
    post:
      operationId: postPrefixitemsValidationAdjustsTheStartingIndexForItemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixitemsValidationAdjustsTheStartingIndexForItems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PrefixitemsValidationAdjustsTheStartingIndexForItems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - items
  /responseBody/postPrefixitemsValidationAdjustsTheStartingIndexForItemsResponseBodyForContentTypes:
    post:
      operationId: postPrefixitemsValidationAdjustsTheStartingIndexForItemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixitemsValidationAdjustsTheStartingIndexForItems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PrefixitemsValidationAdjustsTheStartingIndexForItems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - items
  /requestBody/postItemsWithNullInstanceElementsRequestBody:
    post:
      operationId: postItemsWithNullInstanceElementsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsWithNullInstanceElements'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ItemsWithNullInstanceElements'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - items
  /responseBody/postItemsWithNullInstanceElementsResponseBodyForContentTypes:
    post:
      operationId: postItemsWithNullInstanceElementsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsWithNullInstanceElements'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ItemsWithNullInstanceElements'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - items
  /requestBody/postMaxcontainsWithoutContainsIsIgnoredRequestBody:
    post:
      operationId: postMaxcontainsWithoutContainsIsIgnoredRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxcontainsWithoutContainsIsIgnored'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaxcontainsWithoutContainsIsIgnored'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maxContains
  /responseBody/postMaxcontainsWithoutContainsIsIgnoredResponseBodyForContentTypes:
    post:
      operationId: postMaxcontainsWithoutContainsIsIgnoredResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxcontainsWithoutContainsIsIgnored'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaxcontainsWithoutContainsIsIgnored'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maxContains
  /requestBody/postMaximumValidationRequestBody:
    post:
      operationId: postMaximumValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaximumValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaximumValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maximum
  /responseBody/postMaximumValidationResponseBodyForContentTypes:
    post:
      operationId: postMaximumValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaximumValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaximumValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maximum
  /requestBody/postMaximumValidationWithUnsignedIntegerRequestBody:
    post:
      operationId: postMaximumValidationWithUnsignedIntegerRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaximumValidationWithUnsignedInteger'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaximumValidationWithUnsignedInteger'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maximum
  /responseBody/postMaximumValidationWithUnsignedIntegerResponseBodyForContentTypes:
    post:
      operationId: postMaximumValidationWithUnsignedIntegerResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaximumValidationWithUnsignedInteger'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaximumValidationWithUnsignedInteger'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maximum
  /requestBody/postMaxitemsValidationRequestBody:
    post:
      operationId: postMaxitemsValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxitemsValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaxitemsValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maxItems
  /responseBody/postMaxitemsValidationResponseBodyForContentTypes:
    post:
      operationId: postMaxitemsValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxitemsValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaxitemsValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maxItems
  /requestBody/postMaxlengthValidationRequestBody:
    post:
      operationId: postMaxlengthValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxlengthValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaxlengthValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maxLength
  /responseBody/postMaxlengthValidationResponseBodyForContentTypes:
    post:
      operationId: postMaxlengthValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxlengthValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaxlengthValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maxLength
  /requestBody/postMaxpropertiesValidationRequestBody:
    post:
      operationId: postMaxpropertiesValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxpropertiesValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MaxpropertiesValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maxProperties
  /responseBody/postMaxpropertiesValidationResponseBodyForContentTypes:
    post:
      operationId: postMaxpropertiesValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxpropertiesValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MaxpropertiesValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maxProperties
  /requestBody/postMaxproperties0MeansTheObjectIsEmptyRequestBody:
    post:
      operationId: postMaxproperties0MeansTheObjectIsEmptyRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Maxproperties0MeansTheObjectIsEmpty'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Maxproperties0MeansTheObjectIsEmpty'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - maxProperties
  /responseBody/postMaxproperties0MeansTheObjectIsEmptyResponseBodyForContentTypes:
    post:
      operationId: postMaxproperties0MeansTheObjectIsEmptyResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maxproperties0MeansTheObjectIsEmpty'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Maxproperties0MeansTheObjectIsEmpty'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - maxProperties
  /requestBody/postMinimumValidationRequestBody:
    post:
      operationId: postMinimumValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinimumValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MinimumValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minimum
  /responseBody/postMinimumValidationResponseBodyForContentTypes:
    post:
      operationId: postMinimumValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimumValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MinimumValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minimum
  /requestBody/postMinimumValidationWithSignedIntegerRequestBody:
    post:
      operationId: postMinimumValidationWithSignedIntegerRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinimumValidationWithSignedInteger'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MinimumValidationWithSignedInteger'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minimum
  /responseBody/postMinimumValidationWithSignedIntegerResponseBodyForContentTypes:
    post:
      operationId: postMinimumValidationWithSignedIntegerResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimumValidationWithSignedInteger'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MinimumValidationWithSignedInteger'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minimum
  /requestBody/postMincontainsWithoutContainsIsIgnoredRequestBody:
    post:
      operationId: postMincontainsWithoutContainsIsIgnoredRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MincontainsWithoutContainsIsIgnored'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MincontainsWithoutContainsIsIgnored'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minContains
  /responseBody/postMincontainsWithoutContainsIsIgnoredResponseBodyForContentTypes:
    post:
      operationId: postMincontainsWithoutContainsIsIgnoredResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MincontainsWithoutContainsIsIgnored'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MincontainsWithoutContainsIsIgnored'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minContains
  /requestBody/postMinitemsValidationRequestBody:
    post:
      operationId: postMinitemsValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinitemsValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MinitemsValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minItems
  /responseBody/postMinitemsValidationResponseBodyForContentTypes:
    post:
      operationId: postMinitemsValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinitemsValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MinitemsValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minItems
  /requestBody/postMinlengthValidationRequestBody:
    post:
      operationId: postMinlengthValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinlengthValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MinlengthValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minLength
  /responseBody/postMinlengthValidationResponseBodyForContentTypes:
    post:
      operationId: postMinlengthValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinlengthValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MinlengthValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minLength
  /requestBody/postMinpropertiesValidationRequestBody:
    post:
      operationId: postMinpropertiesValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinpropertiesValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MinpropertiesValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - minProperties
  /responseBody/postMinpropertiesValidationResponseBodyForContentTypes:
    post:
      operationId: postMinpropertiesValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinpropertiesValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MinpropertiesValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - minProperties
  /requestBody/postByIntRequestBody:
    post:
      operationId: postByIntRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ByInt'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ByInt'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - multipleOf
  /responseBody/postByIntResponseBodyForContentTypes:
    post:
      operationId: postByIntResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByInt'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ByInt'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - multipleOf
  /requestBody/postByNumberRequestBody:
    post:
      operationId: postByNumberRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ByNumber'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ByNumber'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - multipleOf
  /responseBody/postByNumberResponseBodyForContentTypes:
    post:
      operationId: postByNumberResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ByNumber'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ByNumber'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - multipleOf
  /requestBody/postBySmallNumberRequestBody:
    post:
      operationId: postBySmallNumberRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BySmallNumber'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/BySmallNumber'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - multipleOf
  /responseBody/postBySmallNumberResponseBodyForContentTypes:
    post:
      operationId: postBySmallNumberResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BySmallNumber'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/BySmallNumber'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - multipleOf
  /requestBody/postFloatDivisionInfRequestBody:
    post:
      operationId: postFloatDivisionInfRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatDivisionInf'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/FloatDivisionInf'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - multipleOf
  /responseBody/postFloatDivisionInfResponseBodyForContentTypes:
    post:
      operationId: postFloatDivisionInfResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatDivisionInf'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/FloatDivisionInf'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - multipleOf
  /requestBody/postSmallMultipleOfLargeIntegerRequestBody:
    post:
      operationId: postSmallMultipleOfLargeIntegerRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmallMultipleOfLargeInteger'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/SmallMultipleOfLargeInteger'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - multipleOf
  /responseBody/postSmallMultipleOfLargeIntegerResponseBodyForContentTypes:
    post:
      operationId: postSmallMultipleOfLargeIntegerResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmallMultipleOfLargeInteger'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/SmallMultipleOfLargeInteger'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - multipleOf
  /requestBody/postNotRequestBody:
    post:
      operationId: postNotRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Not'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Not'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - not
  /responseBody/postNotResponseBodyForContentTypes:
    post:
      operationId: postNotResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Not'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Not'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - not
  /requestBody/postNotMultipleTypesRequestBody:
    post:
      operationId: postNotMultipleTypesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotMultipleTypes'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NotMultipleTypes'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - not
  /responseBody/postNotMultipleTypesResponseBodyForContentTypes:
    post:
      operationId: postNotMultipleTypesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotMultipleTypes'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NotMultipleTypes'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - not
  /requestBody/postNotMoreComplexSchemaRequestBody:
    post:
      operationId: postNotMoreComplexSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotMoreComplexSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NotMoreComplexSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - not
  /responseBody/postNotMoreComplexSchemaResponseBodyForContentTypes:
    post:
      operationId: postNotMoreComplexSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotMoreComplexSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NotMoreComplexSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - not
  /requestBody/postForbiddenPropertyRequestBody:
    post:
      operationId: postForbiddenPropertyRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForbiddenProperty'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ForbiddenProperty'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - not
  /responseBody/postForbiddenPropertyResponseBodyForContentTypes:
    post:
      operationId: postForbiddenPropertyResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenProperty'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ForbiddenProperty'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - not
  /requestBody/postOneofRequestBody:
    post:
      operationId: postOneofRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Oneof'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/Oneof'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postOneofResponseBodyForContentTypes:
    post:
      operationId: postOneofResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oneof'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/Oneof'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postOneofWithBaseSchemaRequestBody:
    post:
      operationId: postOneofWithBaseSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneofWithBaseSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/OneofWithBaseSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postOneofWithBaseSchemaResponseBodyForContentTypes:
    post:
      operationId: postOneofWithBaseSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneofWithBaseSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/OneofWithBaseSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postOneofComplexTypesRequestBody:
    post:
      operationId: postOneofComplexTypesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneofComplexTypes'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/OneofComplexTypes'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postOneofComplexTypesResponseBodyForContentTypes:
    post:
      operationId: postOneofComplexTypesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneofComplexTypes'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/OneofComplexTypes'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postOneofWithEmptySchemaRequestBody:
    post:
      operationId: postOneofWithEmptySchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneofWithEmptySchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/OneofWithEmptySchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postOneofWithEmptySchemaResponseBodyForContentTypes:
    post:
      operationId: postOneofWithEmptySchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneofWithEmptySchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/OneofWithEmptySchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postOneofWithRequiredRequestBody:
    post:
      operationId: postOneofWithRequiredRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneofWithRequired'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/OneofWithRequired'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postOneofWithRequiredResponseBodyForContentTypes:
    post:
      operationId: postOneofWithRequiredResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneofWithRequired'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/OneofWithRequired'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postNestedOneofToCheckValidationSemanticsRequestBody:
    post:
      operationId: postNestedOneofToCheckValidationSemanticsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedOneofToCheckValidationSemantics'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NestedOneofToCheckValidationSemantics'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - oneOf
  /responseBody/postNestedOneofToCheckValidationSemanticsResponseBodyForContentTypes:
    post:
      operationId: postNestedOneofToCheckValidationSemanticsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedOneofToCheckValidationSemantics'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NestedOneofToCheckValidationSemantics'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - oneOf
  /requestBody/postPatternValidationRequestBody:
    post:
      operationId: postPatternValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PatternValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - pattern
  /responseBody/postPatternValidationResponseBodyForContentTypes:
    post:
      operationId: postPatternValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PatternValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - pattern
  /requestBody/postPatternIsNotAnchoredRequestBody:
    post:
      operationId: postPatternIsNotAnchoredRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternIsNotAnchored'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PatternIsNotAnchored'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - pattern
  /responseBody/postPatternIsNotAnchoredResponseBodyForContentTypes:
    post:
      operationId: postPatternIsNotAnchoredResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternIsNotAnchored'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PatternIsNotAnchored'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - pattern
  /requestBody/postPatternpropertiesValidatesPropertiesMatchingARegexRequestBody:
    post:
      operationId: postPatternpropertiesValidatesPropertiesMatchingARegexRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternpropertiesValidatesPropertiesMatchingARegex'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PatternpropertiesValidatesPropertiesMatchingARegex'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - patternProperties
  /responseBody/postPatternpropertiesValidatesPropertiesMatchingARegexResponseBodyForContentTypes:
    post:
      operationId: postPatternpropertiesValidatesPropertiesMatchingARegexResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternpropertiesValidatesPropertiesMatchingARegex'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PatternpropertiesValidatesPropertiesMatchingARegex'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - patternProperties
  /requestBody/postMultipleSimultaneousPatternpropertiesAreValidatedRequestBody:
    post:
      operationId: postMultipleSimultaneousPatternpropertiesAreValidatedRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleSimultaneousPatternpropertiesAreValidated'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MultipleSimultaneousPatternpropertiesAreValidated'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - patternProperties
  /responseBody/postMultipleSimultaneousPatternpropertiesAreValidatedResponseBodyForContentTypes:
    post:
      operationId: postMultipleSimultaneousPatternpropertiesAreValidatedResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleSimultaneousPatternpropertiesAreValidated'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MultipleSimultaneousPatternpropertiesAreValidated'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - patternProperties
  /requestBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveRequestBody:
    post:
      operationId: postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegexesAreNotAnchoredByDefaultAndAreCaseSensitive'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RegexesAreNotAnchoredByDefaultAndAreCaseSensitive'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - patternProperties
  /responseBody/postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveResponseBodyForContentTypes:
    post:
      operationId: postRegexesAreNotAnchoredByDefaultAndAreCaseSensitiveResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexesAreNotAnchoredByDefaultAndAreCaseSensitive'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RegexesAreNotAnchoredByDefaultAndAreCaseSensitive'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - patternProperties
  /requestBody/postPatternpropertiesWithNullValuedInstancePropertiesRequestBody:
    post:
      operationId: postPatternpropertiesWithNullValuedInstancePropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternpropertiesWithNullValuedInstanceProperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PatternpropertiesWithNullValuedInstanceProperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - patternProperties
  /responseBody/postPatternpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes:
    post:
      operationId: postPatternpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternpropertiesWithNullValuedInstanceProperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PatternpropertiesWithNullValuedInstanceProperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - patternProperties
  /requestBody/postASchemaGivenForPrefixitemsRequestBody:
    post:
      operationId: postASchemaGivenForPrefixitemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASchemaGivenForPrefixitems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ASchemaGivenForPrefixitems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - prefixItems
  /responseBody/postASchemaGivenForPrefixitemsResponseBodyForContentTypes:
    post:
      operationId: postASchemaGivenForPrefixitemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASchemaGivenForPrefixitems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ASchemaGivenForPrefixitems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - prefixItems
  /requestBody/postAdditionalItemsAreAllowedByDefaultRequestBody:
    post:
      operationId: postAdditionalItemsAreAllowedByDefaultRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalItemsAreAllowedByDefault'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/AdditionalItemsAreAllowedByDefault'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - prefixItems
  /responseBody/postAdditionalItemsAreAllowedByDefaultResponseBodyForContentTypes:
    post:
      operationId: postAdditionalItemsAreAllowedByDefaultResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalItemsAreAllowedByDefault'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/AdditionalItemsAreAllowedByDefault'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - prefixItems
  /requestBody/postPrefixitemsWithNullInstanceElementsRequestBody:
    post:
      operationId: postPrefixitemsWithNullInstanceElementsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefixitemsWithNullInstanceElements'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PrefixitemsWithNullInstanceElements'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - prefixItems
  /responseBody/postPrefixitemsWithNullInstanceElementsResponseBodyForContentTypes:
    post:
      operationId: postPrefixitemsWithNullInstanceElementsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrefixitemsWithNullInstanceElements'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PrefixitemsWithNullInstanceElements'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - prefixItems
  /requestBody/postObjectPropertiesValidationRequestBody:
    post:
      operationId: postObjectPropertiesValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectPropertiesValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ObjectPropertiesValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - properties
  /responseBody/postObjectPropertiesValidationResponseBodyForContentTypes:
    post:
      operationId: postObjectPropertiesValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectPropertiesValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ObjectPropertiesValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - properties
  /requestBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionRequestBody:
    post:
      operationId: postPropertiesPatternpropertiesAdditionalpropertiesInteractionRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesPatternpropertiesAdditionalpropertiesInteraction'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertiesPatternpropertiesAdditionalpropertiesInteraction'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - properties
  /responseBody/postPropertiesPatternpropertiesAdditionalpropertiesInteractionResponseBodyForContentTypes:
    post:
      operationId: postPropertiesPatternpropertiesAdditionalpropertiesInteractionResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesPatternpropertiesAdditionalpropertiesInteraction'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertiesPatternpropertiesAdditionalpropertiesInteraction'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - properties
  /requestBody/postPropertiesWithEscapedCharactersRequestBody:
    post:
      operationId: postPropertiesWithEscapedCharactersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesWithEscapedCharacters'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertiesWithEscapedCharacters'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - properties
  /responseBody/postPropertiesWithEscapedCharactersResponseBodyForContentTypes:
    post:
      operationId: postPropertiesWithEscapedCharactersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesWithEscapedCharacters'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertiesWithEscapedCharacters'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - properties
  /requestBody/postPropertiesWithNullValuedInstancePropertiesRequestBody:
    post:
      operationId: postPropertiesWithNullValuedInstancePropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesWithNullValuedInstanceProperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertiesWithNullValuedInstanceProperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - properties
  /responseBody/postPropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes:
    post:
      operationId: postPropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesWithNullValuedInstanceProperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertiesWithNullValuedInstanceProperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - properties
  /requestBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody:
    post:
      operationId: postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesWhoseNamesAreJavascriptObjectPropertyNames'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertiesWhoseNamesAreJavascriptObjectPropertyNames'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - properties
  /responseBody/postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes:
    post:
      operationId: postPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesWhoseNamesAreJavascriptObjectPropertyNames'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertiesWhoseNamesAreJavascriptObjectPropertyNames'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - properties
  /requestBody/postPropertynamesValidationRequestBody:
    post:
      operationId: postPropertynamesValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertynamesValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertynamesValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - propertyNames
  /responseBody/postPropertynamesValidationResponseBodyForContentTypes:
    post:
      operationId: postPropertynamesValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertynamesValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertynamesValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - propertyNames
  /requestBody/postPropertyNamedRefThatIsNotAReferenceRequestBody:
    post:
      operationId: postPropertyNamedRefThatIsNotAReferenceRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyNamedRefThatIsNotAReference'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/PropertyNamedRefThatIsNotAReference'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - $ref
  /responseBody/postPropertyNamedRefThatIsNotAReferenceResponseBodyForContentTypes:
    post:
      operationId: postPropertyNamedRefThatIsNotAReferenceResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyNamedRefThatIsNotAReference'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/PropertyNamedRefThatIsNotAReference'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - $ref
  /requestBody/postRequiredValidationRequestBody:
    post:
      operationId: postRequiredValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RequiredValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - required
  /responseBody/postRequiredValidationResponseBodyForContentTypes:
    post:
      operationId: postRequiredValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RequiredValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - required
  /requestBody/postRequiredDefaultValidationRequestBody:
    post:
      operationId: postRequiredDefaultValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredDefaultValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RequiredDefaultValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - required
  /responseBody/postRequiredDefaultValidationResponseBodyForContentTypes:
    post:
      operationId: postRequiredDefaultValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredDefaultValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RequiredDefaultValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - required
  /requestBody/postRequiredWithEmptyArrayRequestBody:
    post:
      operationId: postRequiredWithEmptyArrayRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredWithEmptyArray'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RequiredWithEmptyArray'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - required
  /responseBody/postRequiredWithEmptyArrayResponseBodyForContentTypes:
    post:
      operationId: postRequiredWithEmptyArrayResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredWithEmptyArray'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RequiredWithEmptyArray'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - required
  /requestBody/postRequiredWithEscapedCharactersRequestBody:
    post:
      operationId: postRequiredWithEscapedCharactersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredWithEscapedCharacters'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RequiredWithEscapedCharacters'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - required
  /responseBody/postRequiredWithEscapedCharactersResponseBodyForContentTypes:
    post:
      operationId: postRequiredWithEscapedCharactersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredWithEscapedCharacters'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RequiredWithEscapedCharacters'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - required
  /requestBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody:
    post:
      operationId: postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - required
  /responseBody/postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes:
    post:
      operationId: postRequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNamesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - required
  /requestBody/postIntegerTypeMatchesIntegersRequestBody:
    post:
      operationId: postIntegerTypeMatchesIntegersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegerTypeMatchesIntegers'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/IntegerTypeMatchesIntegers'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postIntegerTypeMatchesIntegersResponseBodyForContentTypes:
    post:
      operationId: postIntegerTypeMatchesIntegersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegerTypeMatchesIntegers'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/IntegerTypeMatchesIntegers'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postNumberTypeMatchesNumbersRequestBody:
    post:
      operationId: postNumberTypeMatchesNumbersRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberTypeMatchesNumbers'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NumberTypeMatchesNumbers'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postNumberTypeMatchesNumbersResponseBodyForContentTypes:
    post:
      operationId: postNumberTypeMatchesNumbersResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberTypeMatchesNumbers'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NumberTypeMatchesNumbers'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postStringTypeMatchesStringsRequestBody:
    post:
      operationId: postStringTypeMatchesStringsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringTypeMatchesStrings'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/StringTypeMatchesStrings'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postStringTypeMatchesStringsResponseBodyForContentTypes:
    post:
      operationId: postStringTypeMatchesStringsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringTypeMatchesStrings'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/StringTypeMatchesStrings'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postObjectTypeMatchesObjectsRequestBody:
    post:
      operationId: postObjectTypeMatchesObjectsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectTypeMatchesObjects'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ObjectTypeMatchesObjects'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postObjectTypeMatchesObjectsResponseBodyForContentTypes:
    post:
      operationId: postObjectTypeMatchesObjectsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTypeMatchesObjects'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ObjectTypeMatchesObjects'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postArrayTypeMatchesArraysRequestBody:
    post:
      operationId: postArrayTypeMatchesArraysRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayTypeMatchesArrays'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/ArrayTypeMatchesArrays'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postArrayTypeMatchesArraysResponseBodyForContentTypes:
    post:
      operationId: postArrayTypeMatchesArraysResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTypeMatchesArrays'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/ArrayTypeMatchesArrays'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postBooleanTypeMatchesBooleansRequestBody:
    post:
      operationId: postBooleanTypeMatchesBooleansRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooleanTypeMatchesBooleans'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/BooleanTypeMatchesBooleans'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postBooleanTypeMatchesBooleansResponseBodyForContentTypes:
    post:
      operationId: postBooleanTypeMatchesBooleansResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanTypeMatchesBooleans'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/BooleanTypeMatchesBooleans'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postNullTypeMatchesOnlyTheNullObjectRequestBody:
    post:
      operationId: postNullTypeMatchesOnlyTheNullObjectRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullTypeMatchesOnlyTheNullObject'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/NullTypeMatchesOnlyTheNullObject'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postNullTypeMatchesOnlyTheNullObjectResponseBodyForContentTypes:
    post:
      operationId: postNullTypeMatchesOnlyTheNullObjectResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullTypeMatchesOnlyTheNullObject'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/NullTypeMatchesOnlyTheNullObject'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postMultipleTypesCanBeSpecifiedInAnArrayRequestBody:
    post:
      operationId: postMultipleTypesCanBeSpecifiedInAnArrayRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleTypesCanBeSpecifiedInAnArray'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/MultipleTypesCanBeSpecifiedInAnArray'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postMultipleTypesCanBeSpecifiedInAnArrayResponseBodyForContentTypes:
    post:
      operationId: postMultipleTypesCanBeSpecifiedInAnArrayResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleTypesCanBeSpecifiedInAnArray'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/MultipleTypesCanBeSpecifiedInAnArray'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postTypeAsArrayWithOneItemRequestBody:
    post:
      operationId: postTypeAsArrayWithOneItemRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeAsArrayWithOneItem'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/TypeAsArrayWithOneItem'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postTypeAsArrayWithOneItemResponseBodyForContentTypes:
    post:
      operationId: postTypeAsArrayWithOneItemResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAsArrayWithOneItem'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/TypeAsArrayWithOneItem'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postTypeArrayOrObjectRequestBody:
    post:
      operationId: postTypeArrayOrObjectRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeArrayOrObject'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/TypeArrayOrObject'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postTypeArrayOrObjectResponseBodyForContentTypes:
    post:
      operationId: postTypeArrayOrObjectResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeArrayOrObject'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/TypeArrayOrObject'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postTypeArrayObjectOrNullRequestBody:
    post:
      operationId: postTypeArrayObjectOrNullRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeArrayObjectOrNull'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/TypeArrayObjectOrNull'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - type
  /responseBody/postTypeArrayObjectOrNullResponseBodyForContentTypes:
    post:
      operationId: postTypeArrayObjectOrNullResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeArrayObjectOrNull'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/TypeArrayObjectOrNull'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - type
  /requestBody/postUnevaluateditemsAsSchemaRequestBody:
    post:
      operationId: postUnevaluateditemsAsSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluateditemsAsSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluateditemsAsSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedItems
  /responseBody/postUnevaluateditemsAsSchemaResponseBodyForContentTypes:
    post:
      operationId: postUnevaluateditemsAsSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluateditemsAsSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluateditemsAsSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedItems
  /requestBody/postUnevaluateditemsWithItemsRequestBody:
    post:
      operationId: postUnevaluateditemsWithItemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluateditemsWithItems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluateditemsWithItems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedItems
  /responseBody/postUnevaluateditemsWithItemsResponseBodyForContentTypes:
    post:
      operationId: postUnevaluateditemsWithItemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluateditemsWithItems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluateditemsWithItems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedItems
  /requestBody/postUnevaluateditemsDependsOnMultipleNestedContainsRequestBody:
    post:
      operationId: postUnevaluateditemsDependsOnMultipleNestedContainsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluateditemsDependsOnMultipleNestedContains'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluateditemsDependsOnMultipleNestedContains'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedItems
  /responseBody/postUnevaluateditemsDependsOnMultipleNestedContainsResponseBodyForContentTypes:
    post:
      operationId: postUnevaluateditemsDependsOnMultipleNestedContainsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluateditemsDependsOnMultipleNestedContains'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluateditemsDependsOnMultipleNestedContains'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedItems
  /requestBody/postUnevaluateditemsWithNullInstanceElementsRequestBody:
    post:
      operationId: postUnevaluateditemsWithNullInstanceElementsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluateditemsWithNullInstanceElements'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluateditemsWithNullInstanceElements'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedItems
  /responseBody/postUnevaluateditemsWithNullInstanceElementsResponseBodyForContentTypes:
    post:
      operationId: postUnevaluateditemsWithNullInstanceElementsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluateditemsWithNullInstanceElements'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluateditemsWithNullInstanceElements'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedItems
  /requestBody/postUnevaluatedpropertiesSchemaRequestBody:
    post:
      operationId: postUnevaluatedpropertiesSchemaRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluatedpropertiesSchema'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesSchema'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedProperties
  /responseBody/postUnevaluatedpropertiesSchemaResponseBodyForContentTypes:
    post:
      operationId: postUnevaluatedpropertiesSchemaResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluatedpropertiesSchema'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesSchema'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedProperties
  /requestBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesRequestBody:
    post:
      operationId: postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluatedpropertiesWithAdjacentAdditionalproperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesWithAdjacentAdditionalproperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedProperties
  /responseBody/postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesResponseBodyForContentTypes:
    post:
      operationId: postUnevaluatedpropertiesWithAdjacentAdditionalpropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluatedpropertiesWithAdjacentAdditionalproperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesWithAdjacentAdditionalproperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedProperties
  /requestBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesRequestBody:
    post:
      operationId: postUnevaluatedpropertiesWithNullValuedInstancePropertiesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluatedpropertiesWithNullValuedInstanceProperties'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesWithNullValuedInstanceProperties'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedProperties
  /responseBody/postUnevaluatedpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes:
    post:
      operationId: postUnevaluatedpropertiesWithNullValuedInstancePropertiesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluatedpropertiesWithNullValuedInstanceProperties'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesWithNullValuedInstanceProperties'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedProperties
  /requestBody/postUnevaluatedpropertiesNotAffectedByPropertynamesRequestBody:
    post:
      operationId: postUnevaluatedpropertiesNotAffectedByPropertynamesRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnevaluatedpropertiesNotAffectedByPropertynames'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesNotAffectedByPropertynames'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - unevaluatedProperties
  /responseBody/postUnevaluatedpropertiesNotAffectedByPropertynamesResponseBodyForContentTypes:
    post:
      operationId: postUnevaluatedpropertiesNotAffectedByPropertynamesResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnevaluatedpropertiesNotAffectedByPropertynames'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UnevaluatedpropertiesNotAffectedByPropertynames'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - unevaluatedProperties
  /requestBody/postUniqueitemsValidationRequestBody:
    post:
      operationId: postUniqueitemsValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniqueitemsValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UniqueitemsValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - uniqueItems
  /responseBody/postUniqueitemsValidationResponseBodyForContentTypes:
    post:
      operationId: postUniqueitemsValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueitemsValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UniqueitemsValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - uniqueItems
  /requestBody/postUniqueitemsWithAnArrayOfItemsRequestBody:
    post:
      operationId: postUniqueitemsWithAnArrayOfItemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniqueitemsWithAnArrayOfItems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UniqueitemsWithAnArrayOfItems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - uniqueItems
  /responseBody/postUniqueitemsWithAnArrayOfItemsResponseBodyForContentTypes:
    post:
      operationId: postUniqueitemsWithAnArrayOfItemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueitemsWithAnArrayOfItems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UniqueitemsWithAnArrayOfItems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - uniqueItems
  /requestBody/postUniqueitemsFalseValidationRequestBody:
    post:
      operationId: postUniqueitemsFalseValidationRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniqueitemsFalseValidation'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UniqueitemsFalseValidation'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - uniqueItems
  /responseBody/postUniqueitemsFalseValidationResponseBodyForContentTypes:
    post:
      operationId: postUniqueitemsFalseValidationResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueitemsFalseValidation'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UniqueitemsFalseValidation'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - uniqueItems
  /requestBody/postUniqueitemsFalseWithAnArrayOfItemsRequestBody:
    post:
      operationId: postUniqueitemsFalseWithAnArrayOfItemsRequestBody
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniqueitemsFalseWithAnArrayOfItems'
            x-schema-test-examples:
              $ref: '#/components/x-schema-test-examples/UniqueitemsFalseWithAnArrayOfItems'
        required: true
      responses:
        '200':
          description: success
      tags:
      - operation.requestBody
      - path.post
      - contentType_json
      - uniqueItems
  /responseBody/postUniqueitemsFalseWithAnArrayOfItemsResponseBodyForContentTypes:
    post:
      operationId: postUniqueitemsFalseWithAnArrayOfItemsResponseBodyForContentTypes
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueitemsFalseWithAnArrayOfItems'
              x-schema-test-examples:
                $ref: '#/components/x-schema-test-examples/UniqueitemsFalseWithAnArrayOfItems'
      tags:
      - response.content.contentType.schema
      - path.post
      - contentType_json
      - uniqueItems
components:
  schemas:
    NonAsciiPatternWithAdditionalproperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      patternProperties:
        "^\xE1": {}
      additionalProperties: false
    AdditionalpropertiesWithSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo: {}
        bar: {}
      additionalProperties:
        type: boolean
    AdditionalpropertiesCanExistByItself:
      $schema: https://json-schema.org/draft/2020-12/schema
      additionalProperties:
        type: boolean
    AdditionalpropertiesAreAllowedByDefault:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo: {}
        bar: {}
    AdditionalpropertiesDoesNotLookInApplicators:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - properties:
          foo: {}
      additionalProperties:
        type: boolean
    AdditionalpropertiesWithNullValuedInstanceProperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      additionalProperties:
        type: 'null'
    Allof:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - properties:
          bar:
            type: integer
        required:
        - bar
      - properties:
          foo:
            type: string
        required:
        - foo
    AllofWithBaseSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        bar:
          type: integer
      required:
      - bar
      allOf:
      - properties:
          foo:
            type: string
        required:
        - foo
      - properties:
          baz:
            type: 'null'
        required:
        - baz
    AllofSimpleTypes:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - maximum: 30
      - minimum: 20
    AllofWithOneEmptySchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - {}
    AllofWithTwoEmptySchemas:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - {}
      - {}
    AllofWithTheFirstEmptySchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - {}
      - type: number
    AllofWithTheLastEmptySchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - type: number
      - {}
    NestedAllofToCheckValidationSemantics:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - allOf:
        - type: 'null'
    AllofCombinedWithAnyofOneof:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - multipleOf: 2
      anyOf:
      - multipleOf: 3
      oneOf:
      - multipleOf: 5
    Anyof:
      $schema: https://json-schema.org/draft/2020-12/schema
      anyOf:
      - type: integer
      - minimum: 2
    AnyofWithBaseSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: string
      anyOf:
      - maxLength: 2
      - minLength: 4
    AnyofComplexTypes:
      $schema: https://json-schema.org/draft/2020-12/schema
      anyOf:
      - properties:
          bar:
            type: integer
        required:
        - bar
      - properties:
          foo:
            type: string
        required:
        - foo
    AnyofWithOneEmptySchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      anyOf:
      - type: number
      - {}
    NestedAnyofToCheckValidationSemantics:
      $schema: https://json-schema.org/draft/2020-12/schema
      anyOf:
      - anyOf:
        - type: 'null'
    ConstNulCharactersInStrings:
      $schema: https://json-schema.org/draft/2020-12/schema
      const: "hello\0there"
    ContainsKeywordValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      contains:
        minimum: 5
    ItemsContains:
      $schema: https://json-schema.org/draft/2020-12/schema
      items:
        multipleOf: 2
      contains:
        multipleOf: 3
    ContainsWithNullInstanceElements:
      $schema: https://json-schema.org/draft/2020-12/schema
      contains:
        type: 'null'
    SingleDependency:
      $schema: https://json-schema.org/draft/2020-12/schema
      dependentRequired:
        bar:
        - foo
    EmptyDependents:
      $schema: https://json-schema.org/draft/2020-12/schema
      dependentRequired:
        bar: []
    MultipleDependentsRequired:
      $schema: https://json-schema.org/draft/2020-12/schema
      dependentRequired:
        quux:
        - foo
        - bar
    DependentSchemasSingleDependency:
      $schema: https://json-schema.org/draft/2020-12/schema
      dependentSchemas:
        bar:
          properties:
            foo:
              type: integer
            bar:
              type: integer
    DependentSchemasDependenciesWithEscapedCharacters:
      $schema: https://json-schema.org/draft/2020-12/schema
      dependentSchemas:
        "foo\tbar":
          minProperties: 4
        foo'bar:
          required:
          - foo"bar
    DependentSchemasDependentSubschemaIncompatibleWithRoot:
      properties:
        foo: {}
      dependentSchemas:
        foo:
          properties:
            bar: {}
          additionalProperties: false
    SimpleEnumValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - 1
      - 2
      - 3
    EnumsInProperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      properties:
        foo:
          enum:
          - foo
        bar:
          enum:
          - bar
      required:
      - bar
    EnumWithEscapedCharacters:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - 'foo

        bar'
      - "foo\rbar"
    EnumWithFalseDoesNotMatch0:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - false
    EnumWithTrueDoesNotMatch1:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - true
    EnumWith0DoesNotMatchFalse:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - 0
    EnumWith1DoesNotMatchTrue:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - 1
    NulCharactersInStrings:
      $schema: https://json-schema.org/draft/2020-12/schema
      enum:
      - "hello\0there"
    EmailFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: email
    IdnEmailFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: idn-email
    RegexFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: regex
    Ipv4Format:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: ipv4
    Ipv6Format:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: ipv6
    IdnHostnameFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: idn-hostname
    HostnameFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: hostname
    DateFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: date
    DateTimeFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: date-time
    TimeFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: time
    JsonPointerFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: json-pointer
    RelativeJsonPointerFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: relative-json-pointer
    IriFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: iri
    IriReferenceFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: iri-reference
    UriFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: uri
    UriReferenceFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: uri-reference
    UriTemplateFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: uri-template
    UuidFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: uuid
    DurationFormat:
      $schema: https://json-schema.org/draft/2020-12/schema
      format: duration
    NestedItems:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: array
      items:
        type: array
        items:
          type: array
          items:
            type: array
            items:
              type: number
    ItemsDoesNotLookInApplicatorsValidCase:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - prefixItems:
        - minimum: 3
      items:
        minimum: 5
    PrefixitemsValidationAdjustsTheStartingIndexForItems:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: string
      items:
        type: integer
    ItemsWithNullInstanceElements:
      $schema: https://json-schema.org/draft/2020-12/schema
      items:
        type: 'null'
    MaxcontainsWithoutContainsIsIgnored:
      $schema: https://json-schema.org/draft/2020-12/schema
      maxContains: 1
    MaximumValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      maximum: 3.0
    MaximumValidationWithUnsignedInteger:
      $schema: https://json-schema.org/draft/2020-12/schema
      maximum: 300
    MaxitemsValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      maxItems: 2
    MaxlengthValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      maxLength: 2
    MaxpropertiesValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      maxProperties: 2
    Maxproperties0MeansTheObjectIsEmpty:
      $schema: https://json-schema.org/draft/2020-12/schema
      maxProperties: 0
    MinimumValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      minimum: 1.1
    MinimumValidationWithSignedInteger:
      $schema: https://json-schema.org/draft/2020-12/schema
      minimum: -2
    MincontainsWithoutContainsIsIgnored:
      $schema: https://json-schema.org/draft/2020-12/schema
      minContains: 1
    MinitemsValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      minItems: 1
    MinlengthValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      minLength: 2
    MinpropertiesValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      minProperties: 1
    ByInt:
      $schema: https://json-schema.org/draft/2020-12/schema
      multipleOf: 2
    ByNumber:
      $schema: https://json-schema.org/draft/2020-12/schema
      multipleOf: 1.5
    BySmallNumber:
      $schema: https://json-schema.org/draft/2020-12/schema
      multipleOf: 0.0001
    FloatDivisionInf:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: integer
      multipleOf: 0.123456789
    SmallMultipleOfLargeInteger:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: integer
      multipleOf: 1.0e-08
    Not:
      $schema: https://json-schema.org/draft/2020-12/schema
      not:
        type: integer
    NotMultipleTypes:
      $schema: https://json-schema.org/draft/2020-12/schema
      not:
        type:
        - integer
        - boolean
    NotMoreComplexSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      not:
        type: object
        properties:
          foo:
            type: string
    ForbiddenProperty:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo:
          not: {}
    Oneof:
      $schema: https://json-schema.org/draft/2020-12/schema
      oneOf:
      - type: integer
      - minimum: 2
    OneofWithBaseSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: string
      oneOf:
      - minLength: 2
      - maxLength: 4
    OneofComplexTypes:
      $schema: https://json-schema.org/draft/2020-12/schema
      oneOf:
      - properties:
          bar:
            type: integer
        required:
        - bar
      - properties:
          foo:
            type: string
        required:
        - foo
    OneofWithEmptySchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      oneOf:
      - type: number
      - {}
    OneofWithRequired:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      oneOf:
      - required:
        - foo
        - bar
      - required:
        - foo
        - baz
    NestedOneofToCheckValidationSemantics:
      $schema: https://json-schema.org/draft/2020-12/schema
      oneOf:
      - oneOf:
        - type: 'null'
    PatternValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      pattern: ^a*$
    PatternIsNotAnchored:
      $schema: https://json-schema.org/draft/2020-12/schema
      pattern: a+
    PatternpropertiesValidatesPropertiesMatchingARegex:
      $schema: https://json-schema.org/draft/2020-12/schema
      patternProperties:
        f.*o:
          type: integer
    MultipleSimultaneousPatternpropertiesAreValidated:
      $schema: https://json-schema.org/draft/2020-12/schema
      patternProperties:
        a*:
          type: integer
        aaa*:
          maximum: 20
    RegexesAreNotAnchoredByDefaultAndAreCaseSensitive:
      $schema: https://json-schema.org/draft/2020-12/schema
      patternProperties:
        '[0-9]{2,}':
          type: boolean
        X_:
          type: string
    PatternpropertiesWithNullValuedInstanceProperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      patternProperties:
        ^.*bar$:
          type: 'null'
    ASchemaGivenForPrefixitems:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: integer
      - type: string
    AdditionalItemsAreAllowedByDefault:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: integer
    PrefixitemsWithNullInstanceElements:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: 'null'
    ObjectPropertiesValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo:
          type: integer
        bar:
          type: string
    PropertiesPatternpropertiesAdditionalpropertiesInteraction:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo:
          type: array
          maxItems: 3
        bar:
          type: array
      patternProperties:
        f.o:
          minItems: 2
      additionalProperties:
        type: integer
    PropertiesWithEscapedCharacters:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        ? 'foo

          bar'
        : type: number
        foo"bar:
          type: number
        foo\bar:
          type: number
        "foo\rbar":
          type: number
        "foo\tbar":
          type: number
        "foo\fbar":
          type: number
    PropertiesWithNullValuedInstanceProperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo:
          type: 'null'
    PropertiesWhoseNamesAreJavascriptObjectPropertyNames:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        __proto__:
          type: number
        toString:
          properties:
            length:
              type: string
        constructor:
          type: number
    PropertynamesValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      propertyNames:
        maxLength: 3
    PropertyNamedRefThatIsNotAReference:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        $ref:
          type: string
    RequiredValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo: {}
        bar: {}
      required:
      - foo
    RequiredDefaultValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo: {}
    RequiredWithEmptyArray:
      $schema: https://json-schema.org/draft/2020-12/schema
      properties:
        foo: {}
      required: []
    RequiredWithEscapedCharacters:
      $schema: https://json-schema.org/draft/2020-12/schema
      required:
      - 'foo

        bar'
      - foo"bar
      - foo\bar
      - "foo\rbar"
      - "foo\tbar"
      - "foo\fbar"
    RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames:
      $schema: https://json-schema.org/draft/2020-12/schema
      required:
      - __proto__
      - toString
      - constructor
    IntegerTypeMatchesIntegers:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: integer
    NumberTypeMatchesNumbers:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: number
    StringTypeMatchesStrings:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: string
    ObjectTypeMatchesObjects:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
    ArrayTypeMatchesArrays:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: array
    BooleanTypeMatchesBooleans:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: boolean
    NullTypeMatchesOnlyTheNullObject:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: 'null'
    MultipleTypesCanBeSpecifiedInAnArray:
      $schema: https://json-schema.org/draft/2020-12/schema
      type:
      - integer
      - string
    TypeAsArrayWithOneItem:
      $schema: https://json-schema.org/draft/2020-12/schema
      type:
      - string
    TypeArrayOrObject:
      $schema: https://json-schema.org/draft/2020-12/schema
      type:
      - array
      - object
    TypeArrayObjectOrNull:
      $schema: https://json-schema.org/draft/2020-12/schema
      type:
      - array
      - object
      - 'null'
    UnevaluateditemsAsSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      unevaluatedItems:
        type: string
    UnevaluateditemsWithItems:
      $schema: https://json-schema.org/draft/2020-12/schema
      items:
        type: number
      unevaluatedItems:
        type: string
    UnevaluateditemsDependsOnMultipleNestedContains:
      $schema: https://json-schema.org/draft/2020-12/schema
      allOf:
      - contains:
          multipleOf: 2
      - contains:
          multipleOf: 3
      unevaluatedItems:
        multipleOf: 5
    UnevaluateditemsWithNullInstanceElements:
      $schema: https://json-schema.org/draft/2020-12/schema
      unevaluatedItems:
        type: 'null'
    UnevaluatedpropertiesSchema:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      unevaluatedProperties:
        type: string
        minLength: 3
    UnevaluatedpropertiesWithAdjacentAdditionalproperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      type: object
      properties:
        foo:
          type: string
      additionalProperties: true
      unevaluatedProperties: false
    UnevaluatedpropertiesWithNullValuedInstanceProperties:
      $schema: https://json-schema.org/draft/2020-12/schema
      unevaluatedProperties:
        type: 'null'
    UnevaluatedpropertiesNotAffectedByPropertynames:
      $schema: https://json-schema.org/draft/2020-12/schema
      propertyNames:
        maxLength: 1
      unevaluatedProperties:
        type: number
    UniqueitemsValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      uniqueItems: true
    UniqueitemsWithAnArrayOfItems:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: boolean
      - type: boolean
      uniqueItems: true
    UniqueitemsFalseValidation:
      $schema: https://json-schema.org/draft/2020-12/schema
      uniqueItems: false
    UniqueitemsFalseWithAnArrayOfItems:
      $schema: https://json-schema.org/draft/2020-12/schema
      prefixItems:
      - type: boolean
      - type: boolean
      uniqueItems: false
  x-schema-test-examples:
    NonAsciiPatternWithAdditionalproperties:
      MatchingThePatternIsValid:
        description: matching the pattern is valid
        data:
          "\xE1rm\xE1nyos": 2
        valid: true
        comment: null
      NotMatchingThePatternIsInvalid:
        description: not matching the pattern is invalid
        data:
          "\xE9lm\xE9ny": 2
        valid: false
        comment: null
    AdditionalpropertiesWithSchema:
      NoAdditionalPropertiesIsValid:
        description: no additional properties is valid
        data:
          foo: 1
        valid: true
        comment: null
      AnAdditionalValidPropertyIsValid:
        description: an additional valid property is valid
        data:
          foo: 1
          bar: 2
          quux: true
        valid: true
        comment: null
      AnAdditionalInvalidPropertyIsInvalid:
        description: an additional invalid property is invalid
        data:
          foo: 1
          bar: 2
          quux: 12
        valid: false
        comment: null
    AdditionalpropertiesCanExistByItself:
      AnAdditionalValidPropertyIsValid:
        description: an additional valid property is valid
        data:
          foo: true
        valid: true
        comment: null
      AnAdditionalInvalidPropertyIsInvalid:
        description: an additional invalid property is invalid
        data:
          foo: 1
        valid: false
        comment: null
    AdditionalpropertiesAreAllowedByDefault:
      AdditionalPropertiesAreAllowed:
        description: additional properties are allowed
        data:
          foo: 1
          bar: 2
          quux: true
        valid: true
        comment: null
    AdditionalpropertiesDoesNotLookInApplicators:
      PropertiesDefinedInAllofAreNotExamined:
        description: properties defined in allOf are not examined
        data:
          foo: 1
          bar: true
        valid: false
        comment: null
    AdditionalpropertiesWithNullValuedInstanceProperties:
      AllowsNullValues:
        description: allows null values
        data:
          foo: null
        valid: true
        comment: null
    Allof:
      Allof:
        description: allOf
        data:
          foo: baz
          bar: 2
        valid: true
        comment: null
      MismatchSecond:
        description: mismatch second
        data:
          foo: baz
        valid: false
        comment: null
      MismatchFirst:
        description: mismatch first
        data:
          bar: 2
        valid: false
        comment: null
      WrongType:
        description: wrong type
        data:
          foo: baz
          bar: quux
        valid: false
        comment: null
    AllofWithBaseSchema:
      Valid:
        description: valid
        data:
          foo: quux
          bar: 2
          baz: null
        valid: true
        comment: null
      MismatchBaseSchema:
        description: mismatch base schema
        data:
          foo: quux
          baz: null
        valid: false
        comment: null
      MismatchFirstAllof:
        description: mismatch first allOf
        data:
          bar: 2
          baz: null
        valid: false
        comment: null
      MismatchSecondAllof:
        description: mismatch second allOf
        data:
          foo: quux
          bar: 2
        valid: false
        comment: null
      MismatchBoth:
        description: mismatch both
        data:
          bar: 2
        valid: false
        comment: null
    AllofSimpleTypes:
      Valid:
        description: valid
        data: 25
        valid: true
        comment: null
      MismatchOne:
        description: mismatch one
        data: 35
        valid: false
        comment: null
    AllofWithOneEmptySchema:
      AnyDataIsValid:
        description: any data is valid
        data: 1
        valid: true
        comment: null
    AllofWithTwoEmptySchemas:
      AnyDataIsValid:
        description: any data is valid
        data: 1
        valid: true
        comment: null
    AllofWithTheFirstEmptySchema:
      NumberIsValid:
        description: number is valid
        data: 1
        valid: true
        comment: null
      StringIsInvalid:
        description: string is invalid
        data: foo
        valid: false
        comment: null
    AllofWithTheLastEmptySchema:
      NumberIsValid:
        description: number is valid
        data: 1
        valid: true
        comment: null
      StringIsInvalid:
        description: string is invalid
        data: foo
        valid: false
        comment: null
    NestedAllofToCheckValidationSemantics:
      NullIsValid:
        description: null is valid
        data: null
        valid: true
        comment: null
      AnythingNonNullIsInvalid:
        description: anything non-null is invalid
        data: 123
        valid: false
        comment: null
    AllofCombinedWithAnyofOneof:
      AllofFalseAnyofFalseOneofFalse:
        description: 'allOf: false, anyOf: false, oneOf: false'
        data: 1
        valid: false
        comment: null
      AllofFalseAnyofFalseOneofTrue:
        description: 'allOf: false, anyOf: false, oneOf: true'
        data: 5
        valid: false
        comment: null
      AllofFalseAnyofTrueOneofFalse:
        description: 'allOf: false, anyOf: true, oneOf: false'
        data: 3
        valid: false
        comment: null
      AllofFalseAnyofTrueOneofTrue:
        description: 'allOf: false, anyOf: true, oneOf: true'
        data: 15
        valid: false
        comment: null
      AllofTrueAnyofFalseOneofFalse:
        description: 'allOf: true, anyOf: false, oneOf: false'
        data: 2
        valid: false
        comment: null
      AllofTrueAnyofFalseOneofTrue:
        description: 'allOf: true, anyOf: false, oneOf: true'
        data: 10
        valid: false
        comment: null
      AllofTrueAnyofTrueOneofFalse:
        description: 'allOf: true, anyOf: true, oneOf: false'
        data: 6
        valid: false
        comment: null
      AllofTrueAnyofTrueOneofTrue:
        description: 'allOf: true, anyOf: true, oneOf: true'
        data: 30
        valid: true
        comment: null
    Anyof:
      FirstAnyofValid:
        description: first anyOf valid
        data: 1
        valid: true
        comment: null
      SecondAnyofValid:
        description: second anyOf valid
        data: 2.5
        valid: true
        comment: null
      BothAnyofValid:
        description: both anyOf valid
        data: 3
        valid: true
        comment: null
      NeitherAnyofValid:
        description: neither anyOf valid
        data: 1.5
        valid: false
        comment: null
    AnyofWithBaseSchema:
      MismatchBaseSchema:
        description: mismatch base schema
        data: 3
        valid: false
        comment: null
      OneAnyofValid:
        description: one anyOf valid
        data: foobar
        valid: true
        comment: null
      BothAnyofInvalid:
        description: both anyOf invalid
        data: foo
        valid: false
        comment: null
    AnyofComplexTypes:
      FirstAnyofValidComplex:
        description: first anyOf valid (complex)
        data:
          bar: 2
        valid: true
        comment: null
      SecondAnyofValidComplex:
        description: second anyOf valid (complex)
        data:
          foo: baz
        valid: true
        comment: null
      BothAnyofValidComplex:
        description: both anyOf valid (complex)
        data:
          foo: baz
          bar: 2
        valid: true
        comment: null
      NeitherAnyofValidComplex:
        description: neither anyOf valid (complex)
        data:
          foo: 2
          bar: quux
        valid: false
        comment: null
    AnyofWithOneEmptySchema:
      StringIsValid:
        description: string is valid
        data: foo
        valid: true
        comment: null
      NumberIsValid:
        description: number is valid
        data: 123
        valid: true
        comment: null
    NestedAnyofToCheckValidationSemantics:
      NullIsValid:
        description: null is valid
        data: null
        valid: true
        comment: null
      AnythingNonNullIsInvalid:
        description: anything non-null is invalid
        data: 123
        valid: false
        comment: null
    ConstNulCharactersInStrings:
      MatchStringWithNul:
        description: match string with nul
        data: "hello\0there"
        valid: true
        comment: null
      DoNotMatchStringLackingNul:
        description: do not match string lacking nul
        data: hellothere
        valid: false
        comment: null
    ContainsKeywordValidation:
      ArrayWithItemMatchingSchema5IsValid:
        description: array with item matching schema (5) is valid
        data:
        - 3
        - 4
        - 5
        valid: true
        comment: null
      ArrayWithItemMatchingSchema6IsValid:
        description: array with item matching schema (6) is valid
        data:
        - 3
        - 4
        - 6
        valid: true
        comment: null
      ArrayWithTwoItemsMatchingSchema56IsValid:
        description: array with two items matching schema (5, 6) is valid
        data:
        - 3
        - 4
        - 5
        - 6
        valid: true
        comment: null
      ArrayWithoutItemsMatchingSchemaIsInvalid:
        description: array without items matching schema is invalid
        data:
        - 2
        - 3
        - 4
        valid: false
        comment: null
      EmptyArrayIsInvalid:
        description: empty array is invalid
        data: []
        valid: false
        comment: null
      NotArrayIsValid:
        description: not array is valid
        data: {}
        valid: true
        comment: null
    ItemsContains:
      MatchesItemsDoesNotMatchContains:
        description: matches items, does not match contains
        data:
        - 2
        - 4
        - 8
        valid: false
        comment: null
      DoesNotMatchItemsMatchesContains:
        description: does not match items, matches contains
        data:
        - 3
        - 6
        - 9
        valid: false
        comment: null
      MatchesBothItemsAndContains:
        description: matches both items and contains
        data:
        - 6
        - 12
        valid: true
        comment: null
      MatchesNeitherItemsNorContains:
        description: matches neither items nor contains
        data:
        - 1
        - 5
        valid: false
        comment: null
    ContainsWithNullInstanceElements:
      AllowsNullItems:
        description: allows null items
        data:
        - null
        valid: true
        comment: null
    SingleDependency:
      Neither:
        description: neither
        data: {}
        valid: true
        comment: null
      Nondependant:
        description: nondependant
        data:
          foo: 1
        valid: true
        comment: null
      WithDependency:
        description: with dependency
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      MissingDependency:
        description: missing dependency
        data:
          bar: 2
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data:
        - bar
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: foobar
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    EmptyDependents:
      EmptyObject:
        description: empty object
        data: {}
        valid: true
        comment: null
      ObjectWithOneProperty:
        description: object with one property
        data:
          bar: 2
        valid: true
        comment: null
      NonObjectIsValid:
        description: non-object is valid
        data: 1
        valid: true
        comment: null
    MultipleDependentsRequired:
      Neither:
        description: neither
        data: {}
        valid: true
        comment: null
      Nondependants:
        description: nondependants
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      WithDependencies:
        description: with dependencies
        data:
          foo: 1
          bar: 2
          quux: 3
        valid: true
        comment: null
      MissingDependency:
        description: missing dependency
        data:
          foo: 1
          quux: 2
        valid: false
        comment: null
      MissingOtherDependency:
        description: missing other dependency
        data:
          bar: 1
          quux: 2
        valid: false
        comment: null
      MissingBothDependencies:
        description: missing both dependencies
        data:
          quux: 1
        valid: false
        comment: null
    DependentSchemasSingleDependency:
      Valid:
        description: valid
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      NoDependency:
        description: no dependency
        data:
          foo: quux
        valid: true
        comment: null
      WrongType:
        description: wrong type
        data:
          foo: quux
          bar: 2
        valid: false
        comment: null
      WrongTypeOther:
        description: wrong type other
        data:
          foo: 2
          bar: quux
        valid: false
        comment: null
      WrongTypeBoth:
        description: wrong type both
        data:
          foo: quux
          bar: quux
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data:
        - bar
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: foobar
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    DependentSchemasDependenciesWithEscapedCharacters:
      QuotedTab:
        description: quoted tab
        data:
          "foo\tbar": 1
          a: 2
          b: 3
          c: 4
        valid: true
        comment: null
      QuotedQuote:
        description: quoted quote
        data:
          foo'bar:
            foo"bar: 1
        valid: false
        comment: null
      QuotedTabInvalidUnderDependentSchema:
        description: quoted tab invalid under dependent schema
        data:
          "foo\tbar": 1
          a: 2
        valid: false
        comment: null
      QuotedQuoteInvalidUnderDependentSchema:
        description: quoted quote invalid under dependent schema
        data:
          foo'bar: 1
        valid: false
        comment: null
    DependentSchemasDependentSubschemaIncompatibleWithRoot:
      MatchesRoot:
        description: matches root
        data:
          foo: 1
        valid: false
        comment: null
      MatchesDependency:
        description: matches dependency
        data:
          bar: 1
        valid: true
        comment: null
      MatchesBoth:
        description: matches both
        data:
          foo: 1
          bar: 2
        valid: false
        comment: null
      NoDependency:
        description: no dependency
        data:
          baz: 1
        valid: true
        comment: null
    SimpleEnumValidation:
      OneOfTheEnumIsValid:
        description: one of the enum is valid
        data: 1
        valid: true
        comment: null
      SomethingElseIsInvalid:
        description: something else is invalid
        data: 4
        valid: false
        comment: null
    EnumsInProperties:
      BothPropertiesAreValid:
        description: both properties are valid
        data:
          foo: foo
          bar: bar
        valid: true
        comment: null
      WrongFooValue:
        description: wrong foo value
        data:
          foo: foot
          bar: bar
        valid: false
        comment: null
      WrongBarValue:
        description: wrong bar value
        data:
          foo: foo
          bar: bart
        valid: false
        comment: null
      MissingOptionalPropertyIsValid:
        description: missing optional property is valid
        data:
          bar: bar
        valid: true
        comment: null
      MissingRequiredPropertyIsInvalid:
        description: missing required property is invalid
        data:
          foo: foo
        valid: false
        comment: null
      MissingAllPropertiesIsInvalid:
        description: missing all properties is invalid
        data: {}
        valid: false
        comment: null
    EnumWithEscapedCharacters:
      Member1IsValid:
        description: member 1 is valid
        data: 'foo

          bar'
        valid: true
        comment: null
      Member2IsValid:
        description: member 2 is valid
        data: "foo\rbar"
        valid: true
        comment: null
      AnotherStringIsInvalid:
        description: another string is invalid
        data: abc
        valid: false
        comment: null
    EnumWithFalseDoesNotMatch0:
      FalseIsValid:
        description: false is valid
        data: false
        valid: true
        comment: null
      IntegerZeroIsInvalid:
        description: integer zero is invalid
        data: 0
        valid: false
        comment: null
      FloatZeroIsInvalid:
        description: float zero is invalid
        data: 0.0
        valid: false
        comment: null
    EnumWithTrueDoesNotMatch1:
      TrueIsValid:
        description: true is valid
        data: true
        valid: true
        comment: null
      IntegerOneIsInvalid:
        description: integer one is invalid
        data: 1
        valid: false
        comment: null
      FloatOneIsInvalid:
        description: float one is invalid
        data: 1.0
        valid: false
        comment: null
    EnumWith0DoesNotMatchFalse:
      FalseIsInvalid:
        description: false is invalid
        data: false
        valid: false
        comment: null
      IntegerZeroIsValid:
        description: integer zero is valid
        data: 0
        valid: true
        comment: null
      FloatZeroIsValid:
        description: float zero is valid
        data: 0.0
        valid: true
        comment: null
    EnumWith1DoesNotMatchTrue:
      TrueIsInvalid:
        description: true is invalid
        data: true
        valid: false
        comment: null
      IntegerOneIsValid:
        description: integer one is valid
        data: 1
        valid: true
        comment: null
      FloatOneIsValid:
        description: float one is valid
        data: 1.0
        valid: true
        comment: null
    NulCharactersInStrings:
      MatchStringWithNul:
        description: match string with nul
        data: "hello\0there"
        valid: true
        comment: null
      DoNotMatchStringLackingNul:
        description: do not match string lacking nul
        data: hellothere
        valid: false
        comment: null
    EmailFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidEmailStringIsOnlyAnAnnotationByDefault:
        description: invalid email string is only an annotation by default
        data: '2962'
        valid: true
        comment: null
    IdnEmailFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIdnEmailStringIsOnlyAnAnnotationByDefault:
        description: invalid idn-email string is only an annotation by default
        data: '2962'
        valid: true
        comment: null
    RegexFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidRegexStringIsOnlyAnAnnotationByDefault:
        description: invalid regex string is only an annotation by default
        data: ^(abc]
        valid: true
        comment: null
    Ipv4Format:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIpv4StringIsOnlyAnAnnotationByDefault:
        description: invalid ipv4 string is only an annotation by default
        data: 127.0.0.0.1
        valid: true
        comment: null
    Ipv6Format:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIpv6StringIsOnlyAnAnnotationByDefault:
        description: invalid ipv6 string is only an annotation by default
        data: '12345::'
        valid: true
        comment: null
    IdnHostnameFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIdnHostnameStringIsOnlyAnAnnotationByDefault:
        description: invalid idn-hostname string is only an annotation by default
        data: "\u302E\uC2E4\uB840.\uD14C\uC2A4\uD2B8"
        valid: true
        comment: null
    HostnameFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidHostnameStringIsOnlyAnAnnotationByDefault:
        description: invalid hostname string is only an annotation by default
        data: -a-host-name-that-starts-with--
        valid: true
        comment: null
    DateFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidDateStringIsOnlyAnAnnotationByDefault:
        description: invalid date string is only an annotation by default
        data: 06/19/1963
        valid: true
        comment: null
    DateTimeFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidDateTimeStringIsOnlyAnAnnotationByDefault:
        description: invalid date-time string is only an annotation by default
        data: '1990-02-31T15:59:60.123-08:00'
        valid: true
        comment: null
    TimeFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidTimeStringIsOnlyAnAnnotationByDefault:
        description: invalid time string is only an annotation by default
        data: 08:30:06 PST
        valid: true
        comment: null
    JsonPointerFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidJsonPointerStringIsOnlyAnAnnotationByDefault:
        description: invalid json-pointer string is only an annotation by default
        data: /foo/bar~
        valid: true
        comment: null
    RelativeJsonPointerFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidRelativeJsonPointerStringIsOnlyAnAnnotationByDefault:
        description: invalid relative-json-pointer string is only an annotation by
          default
        data: /foo/bar
        valid: true
        comment: null
    IriFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIriStringIsOnlyAnAnnotationByDefault:
        description: invalid iri string is only an annotation by default
        data: http://2001:0db8:85a3:0000:0000:8a2e:0370:7334
        valid: true
        comment: null
    IriReferenceFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidIriReferenceStringIsOnlyAnAnnotationByDefault:
        description: invalid iri-reference string is only an annotation by default
        data: "\\\\WINDOWS\\fil\xEB\xDF\xE5r\xE9"
        valid: true
        comment: null
    UriFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidUriStringIsOnlyAnAnnotationByDefault:
        description: invalid uri string is only an annotation by default
        data: //foo.bar/?baz=qux#quux
        valid: true
        comment: null
    UriReferenceFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidUriReferenceStringIsOnlyAnAnnotationByDefault:
        description: invalid uri-reference string is only an annotation by default
        data: \\WINDOWS\fileshare
        valid: true
        comment: null
    UriTemplateFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidUriTemplateStringIsOnlyAnAnnotationByDefault:
        description: invalid uri-template string is only an annotation by default
        data: http://example.com/dictionary/{term:1}/{term
        valid: true
        comment: null
    UuidFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidUuidStringIsOnlyAnAnnotationByDefault:
        description: invalid uuid string is only an annotation by default
        data: 2eb8aa08-aa98-11ea-b4aa-73b441d1638
        valid: true
        comment: null
    DurationFormat:
      AllStringFormatsIgnoreIntegers:
        description: all string formats ignore integers
        data: 12
        valid: true
        comment: null
      AllStringFormatsIgnoreFloats:
        description: all string formats ignore floats
        data: 13.7
        valid: true
        comment: null
      AllStringFormatsIgnoreObjects:
        description: all string formats ignore objects
        data: {}
        valid: true
        comment: null
      AllStringFormatsIgnoreArrays:
        description: all string formats ignore arrays
        data: []
        valid: true
        comment: null
      AllStringFormatsIgnoreBooleans:
        description: all string formats ignore booleans
        data: false
        valid: true
        comment: null
      AllStringFormatsIgnoreNulls:
        description: all string formats ignore nulls
        data: null
        valid: true
        comment: null
      InvalidDurationStringIsOnlyAnAnnotationByDefault:
        description: invalid duration string is only an annotation by default
        data: PT1D
        valid: true
        comment: null
    NestedItems:
      ValidNestedArray:
        description: valid nested array
        data:
        - - - - 1
          - - - 2
            - - 3
        - - - - 4
            - - 5
            - - 6
        valid: true
        comment: null
      NestedArrayWithInvalidType:
        description: nested array with invalid type
        data:
        - - - - '1'
          - - - 2
            - - 3
        - - - - 4
            - - 5
            - - 6
        valid: false
        comment: null
      NotDeepEnough:
        description: not deep enough
        data:
        - - - 1
          - - 2
          - - 3
        - - - 4
          - - 5
          - - 6
        valid: false
        comment: null
    ItemsDoesNotLookInApplicatorsValidCase:
      PrefixitemsInAllofDoesNotConstrainItemsInvalidCase:
        description: prefixItems in allOf does not constrain items, invalid case
        data:
        - 3
        - 5
        valid: false
        comment: null
      PrefixitemsInAllofDoesNotConstrainItemsValidCase:
        description: prefixItems in allOf does not constrain items, valid case
        data:
        - 5
        - 5
        valid: true
        comment: null
    PrefixitemsValidationAdjustsTheStartingIndexForItems:
      ValidItems:
        description: valid items
        data:
        - x
        - 2
        - 3
        valid: true
        comment: null
      WrongTypeOfSecondItem:
        description: wrong type of second item
        data:
        - x
        - y
        valid: false
        comment: null
    ItemsWithNullInstanceElements:
      AllowsNullElements:
        description: allows null elements
        data:
        - null
        valid: true
        comment: null
    MaxcontainsWithoutContainsIsIgnored:
      OneItemValidAgainstLoneMaxcontains:
        description: one item valid against lone maxContains
        data:
        - 1
        valid: true
        comment: null
      TwoItemsStillValidAgainstLoneMaxcontains:
        description: two items still valid against lone maxContains
        data:
        - 1
        - 2
        valid: true
        comment: null
    MaximumValidation:
      BelowTheMaximumIsValid:
        description: below the maximum is valid
        data: 2.6
        valid: true
        comment: null
      BoundaryPointIsValid:
        description: boundary point is valid
        data: 3.0
        valid: true
        comment: null
      AboveTheMaximumIsInvalid:
        description: above the maximum is invalid
        data: 3.5
        valid: false
        comment: null
      IgnoresNonNumbers:
        description: ignores non-numbers
        data: x
        valid: true
        comment: null
    MaximumValidationWithUnsignedInteger:
      BelowTheMaximumIsInvalid:
        description: below the maximum is invalid
        data: 299.97
        valid: true
        comment: null
      BoundaryPointIntegerIsValid:
        description: boundary point integer is valid
        data: 300
        valid: true
        comment: null
      BoundaryPointFloatIsValid:
        description: boundary point float is valid
        data: 300.0
        valid: true
        comment: null
      AboveTheMaximumIsInvalid:
        description: above the maximum is invalid
        data: 300.5
        valid: false
        comment: null
    MaxitemsValidation:
      ShorterIsValid:
        description: shorter is valid
        data:
        - 1
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data:
        - 1
        - 2
        valid: true
        comment: null
      TooLongIsInvalid:
        description: too long is invalid
        data:
        - 1
        - 2
        - 3
        valid: false
        comment: null
      IgnoresNonArrays:
        description: ignores non-arrays
        data: foobar
        valid: true
        comment: null
    MaxlengthValidation:
      ShorterIsValid:
        description: shorter is valid
        data: f
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data: fo
        valid: true
        comment: null
      TooLongIsInvalid:
        description: too long is invalid
        data: foo
        valid: false
        comment: null
      IgnoresNonStrings:
        description: ignores non-strings
        data: 100
        valid: true
        comment: null
      TwoSupplementaryUnicodeCodePointsIsLongEnough:
        description: two supplementary Unicode code points is long enough
        data: "\U0001F4A9\U0001F4A9"
        valid: true
        comment: null
    MaxpropertiesValidation:
      ShorterIsValid:
        description: shorter is valid
        data:
          foo: 1
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      TooLongIsInvalid:
        description: too long is invalid
        data:
          foo: 1
          bar: 2
          baz: 3
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data:
        - 1
        - 2
        - 3
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: foobar
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    Maxproperties0MeansTheObjectIsEmpty:
      NoPropertiesIsValid:
        description: no properties is valid
        data: {}
        valid: true
        comment: null
      OnePropertyIsInvalid:
        description: one property is invalid
        data:
          foo: 1
        valid: false
        comment: null
    MinimumValidation:
      AboveTheMinimumIsValid:
        description: above the minimum is valid
        data: 2.6
        valid: true
        comment: null
      BoundaryPointIsValid:
        description: boundary point is valid
        data: 1.1
        valid: true
        comment: null
      BelowTheMinimumIsInvalid:
        description: below the minimum is invalid
        data: 0.6
        valid: false
        comment: null
      IgnoresNonNumbers:
        description: ignores non-numbers
        data: x
        valid: true
        comment: null
    MinimumValidationWithSignedInteger:
      NegativeAboveTheMinimumIsValid:
        description: negative above the minimum is valid
        data: -1
        valid: true
        comment: null
      PositiveAboveTheMinimumIsValid:
        description: positive above the minimum is valid
        data: 0
        valid: true
        comment: null
      BoundaryPointIsValid:
        description: boundary point is valid
        data: -2
        valid: true
        comment: null
      BoundaryPointWithFloatIsValid:
        description: boundary point with float is valid
        data: -2.0
        valid: true
        comment: null
      FloatBelowTheMinimumIsInvalid:
        description: float below the minimum is invalid
        data: -2.0001
        valid: false
        comment: null
      IntBelowTheMinimumIsInvalid:
        description: int below the minimum is invalid
        data: -3
        valid: false
        comment: null
      IgnoresNonNumbers:
        description: ignores non-numbers
        data: x
        valid: true
        comment: null
    MincontainsWithoutContainsIsIgnored:
      OneItemValidAgainstLoneMincontains:
        description: one item valid against lone minContains
        data:
        - 1
        valid: true
        comment: null
      ZeroItemsStillValidAgainstLoneMincontains:
        description: zero items still valid against lone minContains
        data: []
        valid: true
        comment: null
    MinitemsValidation:
      LongerIsValid:
        description: longer is valid
        data:
        - 1
        - 2
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data:
        - 1
        valid: true
        comment: null
      TooShortIsInvalid:
        description: too short is invalid
        data: []
        valid: false
        comment: null
      IgnoresNonArrays:
        description: ignores non-arrays
        data: ''
        valid: true
        comment: null
    MinlengthValidation:
      LongerIsValid:
        description: longer is valid
        data: foo
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data: fo
        valid: true
        comment: null
      TooShortIsInvalid:
        description: too short is invalid
        data: f
        valid: false
        comment: null
      IgnoresNonStrings:
        description: ignores non-strings
        data: 1
        valid: true
        comment: null
      OneSupplementaryUnicodeCodePointIsNotLongEnough:
        description: one supplementary Unicode code point is not long enough
        data: "\U0001F4A9"
        valid: false
        comment: null
    MinpropertiesValidation:
      LongerIsValid:
        description: longer is valid
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      ExactLengthIsValid:
        description: exact length is valid
        data:
          foo: 1
        valid: true
        comment: null
      TooShortIsInvalid:
        description: too short is invalid
        data: {}
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: ''
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    ByInt:
      IntByInt:
        description: int by int
        data: 10
        valid: true
        comment: null
      IntByIntFail:
        description: int by int fail
        data: 7
        valid: false
        comment: null
      IgnoresNonNumbers:
        description: ignores non-numbers
        data: foo
        valid: true
        comment: null
    ByNumber:
      ZeroIsMultipleOfAnything:
        description: zero is multiple of anything
        data: 0
        valid: true
        comment: null
      45IsMultipleOf15:
        description: 4.5 is multiple of 1.5
        data: 4.5
        valid: true
        comment: null
      35IsNotMultipleOf15:
        description: 35 is not multiple of 1.5
        data: 35
        valid: false
        comment: null
    BySmallNumber:
      00075IsMultipleOf00001:
        description: 0.0075 is multiple of 0.0001
        data: 0.0075
        valid: true
        comment: null
      000751IsNotMultipleOf00001:
        description: 0.00751 is not multiple of 0.0001
        data: 0.00751
        valid: false
        comment: null
    FloatDivisionInf:
      AlwaysInvalidButNaiveImplementationsMayRaiseAnOverflowError:
        description: always invalid, but naive implementations may raise an overflow
          error
        data: 1.0e+308
        valid: false
        comment: null
    SmallMultipleOfLargeInteger:
      AnyIntegerIsAMultipleOf1E8:
        description: any integer is a multiple of 1e-8
        data: 12391239123
        valid: true
        comment: null
    Not:
      Allowed:
        description: allowed
        data: foo
        valid: true
        comment: null
      Disallowed:
        description: disallowed
        data: 1
        valid: false
        comment: null
    NotMultipleTypes:
      Valid:
        description: valid
        data: foo
        valid: true
        comment: null
      Mismatch:
        description: mismatch
        data: 1
        valid: false
        comment: null
      OtherMismatch:
        description: other mismatch
        data: true
        valid: false
        comment: null
    NotMoreComplexSchema:
      Match:
        description: match
        data: 1
        valid: true
        comment: null
      OtherMatch:
        description: other match
        data:
          foo: 1
        valid: true
        comment: null
      Mismatch:
        description: mismatch
        data:
          foo: bar
        valid: false
        comment: null
    ForbiddenProperty:
      PropertyPresent:
        description: property present
        data:
          foo: 1
          bar: 2
        valid: false
        comment: null
      PropertyAbsent:
        description: property absent
        data:
          bar: 1
          baz: 2
        valid: true
        comment: null
    Oneof:
      FirstOneofValid:
        description: first oneOf valid
        data: 1
        valid: true
        comment: null
      SecondOneofValid:
        description: second oneOf valid
        data: 2.5
        valid: true
        comment: null
      BothOneofValid:
        description: both oneOf valid
        data: 3
        valid: false
        comment: null
      NeitherOneofValid:
        description: neither oneOf valid
        data: 1.5
        valid: false
        comment: null
    OneofWithBaseSchema:
      MismatchBaseSchema:
        description: mismatch base schema
        data: 3
        valid: false
        comment: null
      OneOneofValid:
        description: one oneOf valid
        data: foobar
        valid: true
        comment: null
      BothOneofValid:
        description: both oneOf valid
        data: foo
        valid: false
        comment: null
    OneofComplexTypes:
      FirstOneofValidComplex:
        description: first oneOf valid (complex)
        data:
          bar: 2
        valid: true
        comment: null
      SecondOneofValidComplex:
        description: second oneOf valid (complex)
        data:
          foo: baz
        valid: true
        comment: null
      BothOneofValidComplex:
        description: both oneOf valid (complex)
        data:
          foo: baz
          bar: 2
        valid: false
        comment: null
      NeitherOneofValidComplex:
        description: neither oneOf valid (complex)
        data:
          foo: 2
          bar: quux
        valid: false
        comment: null
    OneofWithEmptySchema:
      OneValidValid:
        description: one valid - valid
        data: foo
        valid: true
        comment: null
      BothValidInvalid:
        description: both valid - invalid
        data: 123
        valid: false
        comment: null
    OneofWithRequired:
      BothInvalidInvalid:
        description: both invalid - invalid
        data:
          bar: 2
        valid: false
        comment: null
      FirstValidValid:
        description: first valid - valid
        data:
          foo: 1
          bar: 2
        valid: true
        comment: null
      SecondValidValid:
        description: second valid - valid
        data:
          foo: 1
          baz: 3
        valid: true
        comment: null
      BothValidInvalid:
        description: both valid - invalid
        data:
          foo: 1
          bar: 2
          baz: 3
        valid: false
        comment: null
    NestedOneofToCheckValidationSemantics:
      NullIsValid:
        description: null is valid
        data: null
        valid: true
        comment: null
      AnythingNonNullIsInvalid:
        description: anything non-null is invalid
        data: 123
        valid: false
        comment: null
    PatternValidation:
      AMatchingPatternIsValid:
        description: a matching pattern is valid
        data: aaa
        valid: true
        comment: null
      ANonMatchingPatternIsInvalid:
        description: a non-matching pattern is invalid
        data: abc
        valid: false
        comment: null
      IgnoresBooleans:
        description: ignores booleans
        data: true
        valid: true
        comment: null
      IgnoresIntegers:
        description: ignores integers
        data: 123
        valid: true
        comment: null
      IgnoresFloats:
        description: ignores floats
        data: 1.0
        valid: true
        comment: null
      IgnoresObjects:
        description: ignores objects
        data: {}
        valid: true
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresNull:
        description: ignores null
        data: null
        valid: true
        comment: null
    PatternIsNotAnchored:
      MatchesASubstring:
        description: matches a substring
        data: xxaayy
        valid: true
        comment: null
    PatternpropertiesValidatesPropertiesMatchingARegex:
      ASingleValidMatchIsValid:
        description: a single valid match is valid
        data:
          foo: 1
        valid: true
        comment: null
      MultipleValidMatchesIsValid:
        description: multiple valid matches is valid
        data:
          foo: 1
          foooooo: 2
        valid: true
        comment: null
      ASingleInvalidMatchIsInvalid:
        description: a single invalid match is invalid
        data:
          foo: bar
          fooooo: 2
        valid: false
        comment: null
      MultipleInvalidMatchesIsInvalid:
        description: multiple invalid matches is invalid
        data:
          foo: bar
          foooooo: baz
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data:
        - foo
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: foo
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    MultipleSimultaneousPatternpropertiesAreValidated:
      ASingleValidMatchIsValid:
        description: a single valid match is valid
        data:
          a: 21
        valid: true
        comment: null
      ASimultaneousMatchIsValid:
        description: a simultaneous match is valid
        data:
          aaaa: 18
        valid: true
        comment: null
      MultipleMatchesIsValid:
        description: multiple matches is valid
        data:
          a: 21
          aaaa: 18
        valid: true
        comment: null
      AnInvalidDueToOneIsInvalid:
        description: an invalid due to one is invalid
        data:
          a: bar
        valid: false
        comment: null
      AnInvalidDueToTheOtherIsInvalid:
        description: an invalid due to the other is invalid
        data:
          aaaa: 31
        valid: false
        comment: null
      AnInvalidDueToBothIsInvalid:
        description: an invalid due to both is invalid
        data:
          aaa: foo
          aaaa: 31
        valid: false
        comment: null
    RegexesAreNotAnchoredByDefaultAndAreCaseSensitive:
      NonRecognizedMembersAreIgnored:
        description: non recognized members are ignored
        data:
          answer 1: '42'
        valid: true
        comment: null
      RecognizedMembersAreAccountedFor:
        description: recognized members are accounted for
        data:
          a31b: null
        valid: false
        comment: null
      RegexesAreCaseSensitive:
        description: regexes are case sensitive
        data:
          a_x_3: 3
        valid: true
        comment: null
      RegexesAreCaseSensitive2:
        description: regexes are case sensitive, 2
        data:
          a_X_3: 3
        valid: false
        comment: null
    PatternpropertiesWithNullValuedInstanceProperties:
      AllowsNullValues:
        description: allows null values
        data:
          foobar: null
        valid: true
        comment: null
    ASchemaGivenForPrefixitems:
      CorrectTypes:
        description: correct types
        data:
        - 1
        - foo
        valid: true
        comment: null
      WrongTypes:
        description: wrong types
        data:
        - foo
        - 1
        valid: false
        comment: null
      IncompleteArrayOfItems:
        description: incomplete array of items
        data:
        - 1
        valid: true
        comment: null
      ArrayWithAdditionalItems:
        description: array with additional items
        data:
        - 1
        - foo
        - true
        valid: true
        comment: null
      EmptyArray:
        description: empty array
        data: []
        valid: true
        comment: null
      JavascriptPseudoArrayIsValid:
        description: JavaScript pseudo-array is valid
        data:
          '0': invalid
          '1': valid
          length: 2
        valid: true
        comment: null
    AdditionalItemsAreAllowedByDefault:
      OnlyTheFirstItemIsValidated:
        description: only the first item is validated
        data:
        - 1
        - foo
        - false
        valid: true
        comment: null
    PrefixitemsWithNullInstanceElements:
      AllowsNullElements:
        description: allows null elements
        data:
        - null
        valid: true
        comment: null
    ObjectPropertiesValidation:
      BothPropertiesPresentAndValidIsValid:
        description: both properties present and valid is valid
        data:
          foo: 1
          bar: baz
        valid: true
        comment: null
      OnePropertyInvalidIsInvalid:
        description: one property invalid is invalid
        data:
          foo: 1
          bar: {}
        valid: false
        comment: null
      BothPropertiesInvalidIsInvalid:
        description: both properties invalid is invalid
        data:
          foo: []
          bar: {}
        valid: false
        comment: null
      DoesnTInvalidateOtherProperties:
        description: doesn't invalidate other properties
        data:
          quux: []
        valid: true
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    PropertiesPatternpropertiesAdditionalpropertiesInteraction:
      PropertyValidatesProperty:
        description: property validates property
        data:
          foo:
          - 1
          - 2
        valid: true
        comment: null
      PropertyInvalidatesProperty:
        description: property invalidates property
        data:
          foo:
          - 1
          - 2
          - 3
          - 4
        valid: false
        comment: null
      PatternpropertyInvalidatesProperty:
        description: patternProperty invalidates property
        data:
          foo: []
        valid: false
        comment: null
      PatternpropertyValidatesNonproperty:
        description: patternProperty validates nonproperty
        data:
          fxo:
          - 1
          - 2
        valid: true
        comment: null
      PatternpropertyInvalidatesNonproperty:
        description: patternProperty invalidates nonproperty
        data:
          fxo: []
        valid: false
        comment: null
      AdditionalpropertyIgnoresProperty:
        description: additionalProperty ignores property
        data:
          bar: []
        valid: true
        comment: null
      AdditionalpropertyValidatesOthers:
        description: additionalProperty validates others
        data:
          quux: 3
        valid: true
        comment: null
      AdditionalpropertyInvalidatesOthers:
        description: additionalProperty invalidates others
        data:
          quux: foo
        valid: false
        comment: null
    PropertiesWithEscapedCharacters:
      ObjectWithAllNumbersIsValid:
        description: object with all numbers is valid
        data:
          ? 'foo

            bar'
          : 1
          foo"bar: 1
          foo\bar: 1
          "foo\rbar": 1
          "foo\tbar": 1
          "foo\fbar": 1
        valid: true
        comment: null
      ObjectWithStringsIsInvalid:
        description: object with strings is invalid
        data:
          ? 'foo

            bar'
          : '1'
          foo"bar: '1'
          foo\bar: '1'
          "foo\rbar": '1'
          "foo\tbar": '1'
          "foo\fbar": '1'
        valid: false
        comment: null
    PropertiesWithNullValuedInstanceProperties:
      AllowsNullValues:
        description: allows null values
        data:
          foo: null
        valid: true
        comment: null
    PropertiesWhoseNamesAreJavascriptObjectPropertyNames:
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
      NoneOfThePropertiesMentioned:
        description: none of the properties mentioned
        data: {}
        valid: true
        comment: null
      ProtoNotValid:
        description: __proto__ not valid
        data:
          __proto__: foo
        valid: false
        comment: null
      TostringNotValid:
        description: toString not valid
        data:
          toString:
            length: 37
        valid: false
        comment: null
      ConstructorNotValid:
        description: constructor not valid
        data:
          constructor:
            length: 37
        valid: false
        comment: null
      AllPresentAndValid:
        description: all present and valid
        data:
          __proto__: 12
          toString:
            length: foo
          constructor: 37
        valid: true
        comment: null
    PropertynamesValidation:
      AllPropertyNamesValid:
        description: all property names valid
        data:
          f: {}
          foo: {}
        valid: true
        comment: null
      SomePropertyNamesInvalid:
        description: some property names invalid
        data:
          foo: {}
          foobar: {}
        valid: false
        comment: null
      ObjectWithoutPropertiesIsValid:
        description: object without properties is valid
        data: {}
        valid: true
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data:
        - 1
        - 2
        - 3
        - 4
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: foobar
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    PropertyNamedRefThatIsNotAReference:
      PropertyNamedRefValid:
        description: property named $ref valid
        data:
          $ref: a
        valid: true
        comment: null
      PropertyNamedRefInvalid:
        description: property named $ref invalid
        data:
          $ref: 2
        valid: false
        comment: null
    RequiredValidation:
      PresentRequiredPropertyIsValid:
        description: present required property is valid
        data:
          foo: 1
        valid: true
        comment: null
      NonPresentRequiredPropertyIsInvalid:
        description: non-present required property is invalid
        data:
          bar: 1
        valid: false
        comment: null
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresStrings:
        description: ignores strings
        data: ''
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
    RequiredDefaultValidation:
      NotRequiredByDefault:
        description: not required by default
        data: {}
        valid: true
        comment: null
    RequiredWithEmptyArray:
      PropertyNotRequired:
        description: property not required
        data: {}
        valid: true
        comment: null
    RequiredWithEscapedCharacters:
      ObjectWithAllPropertiesPresentIsValid:
        description: object with all properties present is valid
        data:
          ? 'foo

            bar'
          : 1
          foo"bar: 1
          foo\bar: 1
          "foo\rbar": 1
          "foo\tbar": 1
          "foo\fbar": 1
        valid: true
        comment: null
      ObjectWithSomePropertiesMissingIsInvalid:
        description: object with some properties missing is invalid
        data:
          ? 'foo

            bar'
          : '1'
          foo"bar: '1'
        valid: false
        comment: null
    RequiredPropertiesWhoseNamesAreJavascriptObjectPropertyNames:
      IgnoresArrays:
        description: ignores arrays
        data: []
        valid: true
        comment: null
      IgnoresOtherNonObjects:
        description: ignores other non-objects
        data: 12
        valid: true
        comment: null
      NoneOfThePropertiesMentioned:
        description: none of the properties mentioned
        data: {}
        valid: false
        comment: null
      ProtoPresent:
        description: __proto__ present
        data:
          __proto__: foo
        valid: false
        comment: null
      TostringPresent:
        description: toString present
        data:
          toString:
            length: 37
        valid: false
        comment: null
      ConstructorPresent:
        description: constructor present
        data:
          constructor:
            length: 37
        valid: false
        comment: null
      AllPresent:
        description: all present
        data:
          __proto__: 12
          toString:
            length: foo
          constructor: 37
        valid: true
        comment: null
    IntegerTypeMatchesIntegers:
      AnIntegerIsAnInteger:
        description: an integer is an integer
        data: 1
        valid: true
        comment: null
      AFloatWithZeroFractionalPartIsAnInteger:
        description: a float with zero fractional part is an integer
        data: 1.0
        valid: true
        comment: null
      AFloatIsNotAnInteger:
        description: a float is not an integer
        data: 1.1
        valid: false
        comment: null
      AStringIsNotAnInteger:
        description: a string is not an integer
        data: foo
        valid: false
        comment: null
      AStringIsStillNotAnIntegerEvenIfItLooksLikeOne:
        description: a string is still not an integer, even if it looks like one
        data: '1'
        valid: false
        comment: null
      AnObjectIsNotAnInteger:
        description: an object is not an integer
        data: {}
        valid: false
        comment: null
      AnArrayIsNotAnInteger:
        description: an array is not an integer
        data: []
        valid: false
        comment: null
      ABooleanIsNotAnInteger:
        description: a boolean is not an integer
        data: true
        valid: false
        comment: null
      NullIsNotAnInteger:
        description: null is not an integer
        data: null
        valid: false
        comment: null
    NumberTypeMatchesNumbers:
      AnIntegerIsANumber:
        description: an integer is a number
        data: 1
        valid: true
        comment: null
      AFloatWithZeroFractionalPartIsANumberAndAnInteger:
        description: a float with zero fractional part is a number (and an integer)
        data: 1.0
        valid: true
        comment: null
      AFloatIsANumber:
        description: a float is a number
        data: 1.1
        valid: true
        comment: null
      AStringIsNotANumber:
        description: a string is not a number
        data: foo
        valid: false
        comment: null
      AStringIsStillNotANumberEvenIfItLooksLikeOne:
        description: a string is still not a number, even if it looks like one
        data: '1'
        valid: false
        comment: null
      AnObjectIsNotANumber:
        description: an object is not a number
        data: {}
        valid: false
        comment: null
      AnArrayIsNotANumber:
        description: an array is not a number
        data: []
        valid: false
        comment: null
      ABooleanIsNotANumber:
        description: a boolean is not a number
        data: true
        valid: false
        comment: null
      NullIsNotANumber:
        description: null is not a number
        data: null
        valid: false
        comment: null
    StringTypeMatchesStrings:
      1IsNotAString:
        description: 1 is not a string
        data: 1
        valid: false
        comment: null
      AFloatIsNotAString:
        description: a float is not a string
        data: 1.1
        valid: false
        comment: null
      AStringIsAString:
        description: a string is a string
        data: foo
        valid: true
        comment: null
      AStringIsStillAStringEvenIfItLooksLikeANumber:
        description: a string is still a string, even if it looks like a number
        data: '1'
        valid: true
        comment: null
      AnEmptyStringIsStillAString:
        description: an empty string is still a string
        data: ''
        valid: true
        comment: null
      AnObjectIsNotAString:
        description: an object is not a string
        data: {}
        valid: false
        comment: null
      AnArrayIsNotAString:
        description: an array is not a string
        data: []
        valid: false
        comment: null
      ABooleanIsNotAString:
        description: a boolean is not a string
        data: true
        valid: false
        comment: null
      NullIsNotAString:
        description: null is not a string
        data: null
        valid: false
        comment: null
    ObjectTypeMatchesObjects:
      AnIntegerIsNotAnObject:
        description: an integer is not an object
        data: 1
        valid: false
        comment: null
      AFloatIsNotAnObject:
        description: a float is not an object
        data: 1.1
        valid: false
        comment: null
      AStringIsNotAnObject:
        description: a string is not an object
        data: foo
        valid: false
        comment: null
      AnObjectIsAnObject:
        description: an object is an object
        data: {}
        valid: true
        comment: null
      AnArrayIsNotAnObject:
        description: an array is not an object
        data: []
        valid: false
        comment: null
      ABooleanIsNotAnObject:
        description: a boolean is not an object
        data: true
        valid: false
        comment: null
      NullIsNotAnObject:
        description: null is not an object
        data: null
        valid: false
        comment: null
    ArrayTypeMatchesArrays:
      AnIntegerIsNotAnArray:
        description: an integer is not an array
        data: 1
        valid: false
        comment: null
      AFloatIsNotAnArray:
        description: a float is not an array
        data: 1.1
        valid: false
        comment: null
      AStringIsNotAnArray:
        description: a string is not an array
        data: foo
        valid: false
        comment: null
      AnObjectIsNotAnArray:
        description: an object is not an array
        data: {}
        valid: false
        comment: null
      AnArrayIsAnArray:
        description: an array is an array
        data: []
        valid: true
        comment: null
      ABooleanIsNotAnArray:
        description: a boolean is not an array
        data: true
        valid: false
        comment: null
      NullIsNotAnArray:
        description: null is not an array
        data: null
        valid: false
        comment: null
    BooleanTypeMatchesBooleans:
      AnIntegerIsNotABoolean:
        description: an integer is not a boolean
        data: 1
        valid: false
        comment: null
      ZeroIsNotABoolean:
        description: zero is not a boolean
        data: 0
        valid: false
        comment: null
      AFloatIsNotABoolean:
        description: a float is not a boolean
        data: 1.1
        valid: false
        comment: null
      AStringIsNotABoolean:
        description: a string is not a boolean
        data: foo
        valid: false
        comment: null
      AnEmptyStringIsNotABoolean:
        description: an empty string is not a boolean
        data: ''
        valid: false
        comment: null
      AnObjectIsNotABoolean:
        description: an object is not a boolean
        data: {}
        valid: false
        comment: null
      AnArrayIsNotABoolean:
        description: an array is not a boolean
        data: []
        valid: false
        comment: null
      TrueIsABoolean:
        description: true is a boolean
        data: true
        valid: true
        comment: null
      FalseIsABoolean:
        description: false is a boolean
        data: false
        valid: true
        comment: null
      NullIsNotABoolean:
        description: null is not a boolean
        data: null
        valid: false
        comment: null
    NullTypeMatchesOnlyTheNullObject:
      AnIntegerIsNotNull:
        description: an integer is not null
        data: 1
        valid: false
        comment: null
      AFloatIsNotNull:
        description: a float is not null
        data: 1.1
        valid: false
        comment: null
      ZeroIsNotNull:
        description: zero is not null
        data: 0
        valid: false
        comment: null
      AStringIsNotNull:
        description: a string is not null
        data: foo
        valid: false
        comment: null
      AnEmptyStringIsNotNull:
        description: an empty string is not null
        data: ''
        valid: false
        comment: null
      AnObjectIsNotNull:
        description: an object is not null
        data: {}
        valid: false
        comment: null
      AnArrayIsNotNull:
        description: an array is not null
        data: []
        valid: false
        comment: null
      TrueIsNotNull:
        description: true is not null
        data: true
        valid: false
        comment: null
      FalseIsNotNull:
        description: false is not null
        data: false
        valid: false
        comment: null
      NullIsNull:
        description: null is null
        data: null
        valid: true
        comment: null
    MultipleTypesCanBeSpecifiedInAnArray:
      AnIntegerIsValid:
        description: an integer is valid
        data: 1
        valid: true
        comment: null
      AStringIsValid:
        description: a string is valid
        data: foo
        valid: true
        comment: null
      AFloatIsInvalid:
        description: a float is invalid
        data: 1.1
        valid: false
        comment: null
      AnObjectIsInvalid:
        description: an object is invalid
        data: {}
        valid: false
        comment: null
      AnArrayIsInvalid:
        description: an array is invalid
        data: []
        valid: false
        comment: null
      ABooleanIsInvalid:
        description: a boolean is invalid
        data: true
        valid: false
        comment: null
      NullIsInvalid:
        description: null is invalid
        data: null
        valid: false
        comment: null
    TypeAsArrayWithOneItem:
      StringIsValid:
        description: string is valid
        data: foo
        valid: true
        comment: null
      NumberIsInvalid:
        description: number is invalid
        data: 123
        valid: false
        comment: null
    TypeArrayOrObject:
      ArrayIsValid:
        description: array is valid
        data:
        - 1
        - 2
        - 3
        valid: true
        comment: null
      ObjectIsValid:
        description: object is valid
        data:
          foo: 123
        valid: true
        comment: null
      NumberIsInvalid:
        description: number is invalid
        data: 123
        valid: false
        comment: null
      StringIsInvalid:
        description: string is invalid
        data: foo
        valid: false
        comment: null
      NullIsInvalid:
        description: null is invalid
        data: null
        valid: false
        comment: null
    TypeArrayObjectOrNull:
      ArrayIsValid:
        description: array is valid
        data:
        - 1
        - 2
        - 3
        valid: true
        comment: null
      ObjectIsValid:
        description: object is valid
        data:
          foo: 123
        valid: true
        comment: null
      NullIsValid:
        description: null is valid
        data: null
        valid: true
        comment: null
      NumberIsInvalid:
        description: number is invalid
        data: 123
        valid: false
        comment: null
      StringIsInvalid:
        description: string is invalid
        data: foo
        valid: false
        comment: null
    UnevaluateditemsAsSchema:
      WithNoUnevaluatedItems:
        description: with no unevaluated items
        data: []
        valid: true
        comment: null
      WithValidUnevaluatedItems:
        description: with valid unevaluated items
        data:
        - foo
        valid: true
        comment: null
      WithInvalidUnevaluatedItems:
        description: with invalid unevaluated items
        data:
        - 42
        valid: false
        comment: null
    UnevaluateditemsWithItems:
      ValidUnderItems:
        description: valid under items
        data:
        - 5
        - 6
        - 7
        - 8
        valid: true
        comment: no elements are considered by unevaluatedItems
      InvalidUnderItems:
        description: invalid under items
        data:
        - foo
        - bar
        - baz
        valid: false
        comment: null
    UnevaluateditemsDependsOnMultipleNestedContains:
      5NotEvaluatedPassesUnevaluateditems:
        description: 5 not evaluated, passes unevaluatedItems
        data:
        - 2
        - 3
        - 4
        - 5
        - 6
        valid: true
        comment: null
      7NotEvaluatedFailsUnevaluateditems:
        description: 7 not evaluated, fails unevaluatedItems
        data:
        - 2
        - 3
        - 4
        - 7
        - 8
        valid: false
        comment: null
    UnevaluateditemsWithNullInstanceElements:
      AllowsNullElements:
        description: allows null elements
        data:
        - null
        valid: true
        comment: null
    UnevaluatedpropertiesSchema:
      WithNoUnevaluatedProperties:
        description: with no unevaluated properties
        data: {}
        valid: true
        comment: null
      WithValidUnevaluatedProperties:
        description: with valid unevaluated properties
        data:
          foo: foo
        valid: true
        comment: null
      WithInvalidUnevaluatedProperties:
        description: with invalid unevaluated properties
        data:
          foo: fo
        valid: false
        comment: null
    UnevaluatedpropertiesWithAdjacentAdditionalproperties:
      WithNoAdditionalProperties:
        description: with no additional properties
        data:
          foo: foo
        valid: true
        comment: null
      WithAdditionalProperties:
        description: with additional properties
        data:
          foo: foo
          bar: bar
        valid: true
        comment: null
    UnevaluatedpropertiesWithNullValuedInstanceProperties:
      AllowsNullValuedProperties:
        description: allows null valued properties
        data:
          foo: null
        valid: true
        comment: null
    UnevaluatedpropertiesNotAffectedByPropertynames:
      AllowsOnlyNumberProperties:
        description: allows only number properties
        data:
          a: 1
        valid: true
        comment: null
      StringPropertyIsInvalid:
        description: string property is invalid
        data:
          a: b
        valid: false
        comment: null
    UniqueitemsValidation:
      UniqueArrayOfIntegersIsValid:
        description: unique array of integers is valid
        data:
        - 1
        - 2
        valid: true
        comment: null
      NonUniqueArrayOfIntegersIsInvalid:
        description: non-unique array of integers is invalid
        data:
        - 1
        - 1
        valid: false
        comment: null
      NonUniqueArrayOfMoreThanTwoIntegersIsInvalid:
        description: non-unique array of more than two integers is invalid
        data:
        - 1
        - 2
        - 1
        valid: false
        comment: null
      NumbersAreUniqueIfMathematicallyUnequal:
        description: numbers are unique if mathematically unequal
        data:
        - 1.0
        - 1.0
        - 1
        valid: false
        comment: null
      FalseIsNotEqualToZero:
        description: false is not equal to zero
        data:
        - 0
        - false
        valid: true
        comment: null
      TrueIsNotEqualToOne:
        description: true is not equal to one
        data:
        - 1
        - true
        valid: true
        comment: null
      UniqueArrayOfStringsIsValid:
        description: unique array of strings is valid
        data:
        - foo
        - bar
        - baz
        valid: true
        comment: null
      NonUniqueArrayOfStringsIsInvalid:
        description: non-unique array of strings is invalid
        data:
        - foo
        - bar
        - foo
        valid: false
        comment: null
      UniqueArrayOfObjectsIsValid:
        description: unique array of objects is valid
        data:
        - foo: bar
        - foo: baz
        valid: true
        comment: null
      NonUniqueArrayOfObjectsIsInvalid:
        description: non-unique array of objects is invalid
        data:
        - foo: bar
        - foo: bar
        valid: false
        comment: null
      PropertyOrderOfArrayOfObjectsIsIgnored:
        description: property order of array of objects is ignored
        data:
        - foo: bar
          bar: foo
        - bar: foo
          foo: bar
        valid: false
        comment: null
      UniqueArrayOfNestedObjectsIsValid:
        description: unique array of nested objects is valid
        data:
        - foo:
            bar:
              baz: true
        - foo:
            bar:
              baz: false
        valid: true
        comment: null
      NonUniqueArrayOfNestedObjectsIsInvalid:
        description: non-unique array of nested objects is invalid
        data:
        - foo:
            bar:
              baz: true
        - foo:
            bar:
              baz: true
        valid: false
        comment: null
      UniqueArrayOfArraysIsValid:
        description: unique array of arrays is valid
        data:
        - - foo
        - - bar
        valid: true
        comment: null
      NonUniqueArrayOfArraysIsInvalid:
        description: non-unique array of arrays is invalid
        data:
        - - foo
        - - foo
        valid: false
        comment: null
      NonUniqueArrayOfMoreThanTwoArraysIsInvalid:
        description: non-unique array of more than two arrays is invalid
        data:
        - - foo
        - - bar
        - - foo
        valid: false
        comment: null
      1AndTrueAreUnique:
        description: '[1] and [true] are unique'
        data:
        - - 1
        - - true
        valid: true
        comment: null
      0AndFalseAreUnique:
        description: '[0] and [false] are unique'
        data:
        - - 0
        - - false
        valid: true
        comment: null
      Nested1AndTrueAreUnique:
        description: nested [1] and [true] are unique
        data:
        - - - 1
          - foo
        - - - true
          - foo
        valid: true
        comment: null
      Nested0AndFalseAreUnique:
        description: nested [0] and [false] are unique
        data:
        - - - 0
          - foo
        - - - false
          - foo
        valid: true
        comment: null
      UniqueHeterogeneousTypesAreValid:
        description: unique heterogeneous types are valid
        data:
        - {}
        - - 1
        - true
        - null
        - 1
        - '{}'
        valid: true
        comment: null
      NonUniqueHeterogeneousTypesAreInvalid:
        description: non-unique heterogeneous types are invalid
        data:
        - {}
        - - 1
        - true
        - null
        - {}
        - 1
        valid: false
        comment: null
      DifferentObjectsAreUnique:
        description: different objects are unique
        data:
        - a: 1
          b: 2
        - a: 2
          b: 1
        valid: true
        comment: null
      ObjectsAreNonUniqueDespiteKeyOrder:
        description: objects are non-unique despite key order
        data:
        - a: 1
          b: 2
        - b: 2
          a: 1
        valid: false
        comment: null
      AFalseAndA0AreUnique:
        description: '{"a": false} and {"a": 0} are unique'
        data:
        - a: false
        - a: 0
        valid: true
        comment: null
      ATrueAndA1AreUnique:
        description: '{"a": true} and {"a": 1} are unique'
        data:
        - a: true
        - a: 1
        valid: true
        comment: null
    UniqueitemsWithAnArrayOfItems:
      FalseTrueFromItemsArrayIsValid:
        description: '[false, true] from items array is valid'
        data:
        - false
        - true
        valid: true
        comment: null
      TrueFalseFromItemsArrayIsValid:
        description: '[true, false] from items array is valid'
        data:
        - true
        - false
        valid: true
        comment: null
      FalseFalseFromItemsArrayIsNotValid:
        description: '[false, false] from items array is not valid'
        data:
        - false
        - false
        valid: false
        comment: null
      TrueTrueFromItemsArrayIsNotValid:
        description: '[true, true] from items array is not valid'
        data:
        - true
        - true
        valid: false
        comment: null
      UniqueArrayExtendedFromFalseTrueIsValid:
        description: unique array extended from [false, true] is valid
        data:
        - false
        - true
        - foo
        - bar
        valid: true
        comment: null
      UniqueArrayExtendedFromTrueFalseIsValid:
        description: unique array extended from [true, false] is valid
        data:
        - true
        - false
        - foo
        - bar
        valid: true
        comment: null
      NonUniqueArrayExtendedFromFalseTrueIsNotValid:
        description: non-unique array extended from [false, true] is not valid
        data:
        - false
        - true
        - foo
        - foo
        valid: false
        comment: null
      NonUniqueArrayExtendedFromTrueFalseIsNotValid:
        description: non-unique array extended from [true, false] is not valid
        data:
        - true
        - false
        - foo
        - foo
        valid: false
        comment: null
    UniqueitemsFalseValidation:
      UniqueArrayOfIntegersIsValid:
        description: unique array of integers is valid
        data:
        - 1
        - 2
        valid: true
        comment: null
      NonUniqueArrayOfIntegersIsValid:
        description: non-unique array of integers is valid
        data:
        - 1
        - 1
        valid: true
        comment: null
      NumbersAreUniqueIfMathematicallyUnequal:
        description: numbers are unique if mathematically unequal
        data:
        - 1.0
        - 1.0
        - 1
        valid: true
        comment: null
      FalseIsNotEqualToZero:
        description: false is not equal to zero
        data:
        - 0
        - false
        valid: true
        comment: null
      TrueIsNotEqualToOne:
        description: true is not equal to one
        data:
        - 1
        - true
        valid: true
        comment: null
      UniqueArrayOfObjectsIsValid:
        description: unique array of objects is valid
        data:
        - foo: bar
        - foo: baz
        valid: true
        comment: null
      NonUniqueArrayOfObjectsIsValid:
        description: non-unique array of objects is valid
        data:
        - foo: bar
        - foo: bar
        valid: true
        comment: null
      UniqueArrayOfNestedObjectsIsValid:
        description: unique array of nested objects is valid
        data:
        - foo:
            bar:
              baz: true
        - foo:
            bar:
              baz: false
        valid: true
        comment: null
      NonUniqueArrayOfNestedObjectsIsValid:
        description: non-unique array of nested objects is valid
        data:
        - foo:
            bar:
              baz: true
        - foo:
            bar:
              baz: true
        valid: true
        comment: null
      UniqueArrayOfArraysIsValid:
        description: unique array of arrays is valid
        data:
        - - foo
        - - bar
        valid: true
        comment: null
      NonUniqueArrayOfArraysIsValid:
        description: non-unique array of arrays is valid
        data:
        - - foo
        - - foo
        valid: true
        comment: null
      1AndTrueAreUnique:
        description: 1 and true are unique
        data:
        - 1
        - true
        valid: true
        comment: null
      0AndFalseAreUnique:
        description: 0 and false are unique
        data:
        - 0
        - false
        valid: true
        comment: null
      UniqueHeterogeneousTypesAreValid:
        description: unique heterogeneous types are valid
        data:
        - {}
        - - 1
        - true
        - null
        - 1
        valid: true
        comment: null
      NonUniqueHeterogeneousTypesAreValid:
        description: non-unique heterogeneous types are valid
        data:
        - {}
        - - 1
        - true
        - null
        - {}
        - 1
        valid: true
        comment: null
    UniqueitemsFalseWithAnArrayOfItems:
      FalseTrueFromItemsArrayIsValid:
        description: '[false, true] from items array is valid'
        data:
        - false
        - true
        valid: true
        comment: null
      TrueFalseFromItemsArrayIsValid:
        description: '[true, false] from items array is valid'
        data:
        - true
        - false
        valid: true
        comment: null
      FalseFalseFromItemsArrayIsValid:
        description: '[false, false] from items array is valid'
        data:
        - false
        - false
        valid: true
        comment: null
      TrueTrueFromItemsArrayIsValid:
        description: '[true, true] from items array is valid'
        data:
        - true
        - true
        valid: true
        comment: null
      UniqueArrayExtendedFromFalseTrueIsValid:
        description: unique array extended from [false, true] is valid
        data:
        - false
        - true
        - foo
        - bar
        valid: true
        comment: null
      UniqueArrayExtendedFromTrueFalseIsValid:
        description: unique array extended from [true, false] is valid
        data:
        - true
        - false
        - foo
        - bar
        valid: true
        comment: null
      NonUniqueArrayExtendedFromFalseTrueIsValid:
        description: non-unique array extended from [false, true] is valid
        data:
        - false
        - true
        - foo
        - foo
        valid: true
        comment: null
      NonUniqueArrayExtendedFromTrueFalseIsValid:
        description: non-unique array extended from [true, false] is valid
        data:
        - true
        - false
        - foo
        - foo
        valid: true
        comment: null
